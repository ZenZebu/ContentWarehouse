Query related features used in snippets scoring. Next ID: 7

Contains information about document appearances of an entity.
*   entityDocCount (type: String.t, default: nil) - The number of documents where this entity was mentioned at least once.
*   entityMentionCount (type: String.t, default: nil) - The number of times the entity was mentioned across the entire corpus.
*   totalDocCount (type: String.t, default: nil) - The number of documents in the corpus.
*   totalMentionCount (type: String.t, default: nil) - The number of mentions of any entity across the entire corpus.


Information about a Wikipedia category (typically at the bottom of the page).

The properties of the device. They are static and won't change. Next ID: 4
*   deviceModelId (type: String.t, default: nil) - The model ID of the device. This should be globally unique across manufacturers/OEMs.
*   isOwnedBySpeaker (type: boolean(), default: nil) - Indicate whether the device is owned by the user who is speaking.

Information of the app to be annotated for the query. It contains the name of the app, the package name associated with it. It also contains the confidence associated with {app, package} pair. This confidence is calculated from different signals like navboost, ranking etc. which later is used for ranking the apps for a particular query. The source of this app information is also indicated. This app info can either be from installed app (collected from device content) or from the fastmap. LINT. IfChange
*   androidIntent (type: list(String.t), default: nil) - The list of android intents that the app is capable of executing.
*   appName (type: String.t, default: nil) - This is the string matched from the query.
*   displayName (type: String.t, default: nil) - This is the display name of the app as shown below the app icon.
*   fallbackUrl (type: String.t, default: nil) - URL for the website associated with this app.
*   packageName (type: String.t, default: nil) - Note that the package_name could be empty for two reasons: - The AppInfo is annotated by device content. - The ngram exists in app name fastmap, but there are a lot of packages associated with it. e.g., there could be a lot of apps for app name "recipes app".
*   source (type: String.t, default: nil) - For the future source, use the field in source_data.source().








Stores all possible LiveOps/LiveEvents that are eligible to be shown for an app.

Meta information is used to improve the performance of the service.

ConsoleLogEntry message stores messages logged by the renderer to the console. Typically error messages related to JS execution, parsing, any CSS errors, etc are logged by the renderer to the console. Next id: 7.
*   lineNumber (type: integer(), default: nil) - Line number of the document which caused an error.
*   message (type: String.t, default: nil) - Message which indicates the nature of the error. e.g. parse error, reference error (happens when javascript functions or variables are not resolvable) etc.
*   sourceUrl (type: String.t, default: nil) - The url of the document which has the error.
*   stackTrace (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoScriptStackFrame.t), default: nil) - Stack trace which functions were called when generating the console log. The first frame is the innermost one.
*   timestamp (type: float(), default: nil) - Wall time (s) when the log entry was recorded


this is used to store information about law collections Normalized is the normalized name for the law (e.g., USC for USCA and USCS) Source is the text that represents the law in the citation

Metadata for a user's name pronunciation audio. Proto message is shared between merged_person and FBS.




Additional context about the user's current and/or future availability to give a better understanding of the status ("Working from Zurich").
*   localTime (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaLocalTimeContext.t, default: nil) - Helps to determine the user's local time by providing their current time zone.
*   workingElsewhere (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaWorkingElsewhereContext.t, default: nil) - Set if the user has a working location. Not just elsewhere (legacy name).

Hospitality mode config for the current device. go/hospitality-mode-design. Next ID: 17
*   aogContextId (type: list(String.t), default: nil) - List of AOG app context ids that are linked to this device. These apps will have access to the structure information for the device.
*   aogInvocationPhrase (type: String.t, default: nil) - Invocation phrase for hotel's AoG action. Used for ZS promotion card and "talk to my hotel" rewrites. Setting this to an empty value will mark it unset.
*   deviceClearRequest (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - The time when we received a request to reset the device.
*   dialogTtlOverrideMicros (type: String.t, default: nil) - Should the dialog have a shorter ttl. See go/ipp-consumer-prd#heading=h.ibu9b1ysdl4t and go/interpreter-device-clear#bookmark=id.hw8ey1bzjadn for context.
*   enterpriseId (type: String.t, default: nil) - Identifier for the enterprise which owns the device. Setting this to an empty value will mark it unset.
*   hospitalityModeEnabled (type: boolean(), default: nil) - Indicates whether this device is in the hospitality mode.
*   lastDeviceClear (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - Last time the device was cleared and placed in hospitality mode. Will be set when the switch is toggled on and reset when a guest checks out. On the device this triggers removing alarms, timers, etc.
*   lastModifiedTimestamp (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - Indicates when hospitality settings were last updated.
*   lastWelcomed (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - Last time the welcome message was played for the guest. If last_welcomed < welcome_request, the message should be replayed and this time set.
*   manualResetRequired (type: boolean(), default: nil) - Indicates whether or not the device must be reset manually (by voice or touch), as opposed to being automatically reset. go/hospitality-manual-reset
*   promotedLanguages (type: list(String.t), default: nil) - In order promoted languages for interpreter devices. This represents languages by BCP-47 language strings, such as "en", "en-US", "fr", "fr-CA", "sr-Latn", "zh-Hans-CN", "zh-Hant-HK",etc.
*   verbalResetSupported (type: boolean(), default: nil) - Whether we allow users to initiate clearing the device verbally. We generally allow this for private devices and not for public ones.
*   welcomeRequest (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - The time when we received a request to welcome the user.

A restriction is an expression that limits when an action can be taken. Each restriction has a set of conditions. If all of the conditions are true, then the restriction applies and the action cannot be taken. For example, the restriction "no turns 3-5pm except buses" would have two conditions: "time is 3-5pm" and "vehicle is not a bus". If both of these conditions apply, the restriction is true, and the turn is prohibited. Multiple restrictions may apply to the same action. Clients handle this by always declaring RestrictionProto as a "repeated" element. The semantics of having multiple restrictions are that if any restriction applies, then the action cannot be taken. In other words, restrictions are OR-ed together. Putting all of this together, a set of RestrictionProtos can be interpreted as an bool expression in disjunctive normal form: (A and B) or (D and E and F) or (G and H) The action is prohibited if this expression is true. Note that a restriction with no conditions is always true, i.e. its action is always prohibited. NOTE: RestrictionProtos are often compared against one another (e.g. to check for duplicate/redundant restrictions) by canonicalizing them via GetCanonicalRestriction() in google3/geostore/base/internal/restriction.cc. Any fields that don't contribute to the definition of a restriction in the real world should be bundled with the annotative fields near the bottom and excluded in GetCanonicalRestriction(). LINT. IfChange
*   autonomousDrivingProducts (type: list(String.t), default: nil) - The restriction only applies in these specific autonomous driving product scenarios. NOTE: This should only be set on restrictions with TRAVEL_AUTONOMOUS_VEHICLE travel mode.
*   intersectionGroup (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Actually required if style=STYLE_IN_OUT, otherwise forbidden. Typically the intersection group type is artifact, but either artifact or logical groups can be used for STYLE_IN_OUT restrictions.
*   restrictionToken (type: String.t, default: nil) - A token that can be used to identify the version of the data about this restriction.
*   schedule (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeScheduleProto.t, default: nil) - When specified, restriction applies only at particular times (operating hours or times of the year: reversing lanes, seasonal roads, no left turns from 3-5pm Mon-Fri except holidays). Otherwise, restriction is in effect at all times.
*   scope (type: String.t, default: nil) - The scope that the restriction applies to. - SCOPE_DIRECTION means the segment/sibling pair is restricted in the direction of the segment that contains this RestrictionProto. For segment/sibling pairs with pedestrian facilities (and thus side-of-road routing) the RestrictionProto restricts both facilities in the direction of the segment (assuming that the restriction applies to travel mode TRAVEL_PEDESTRIAN). - SCOPE_SIDE means the RestrictionProto applies only to the side of road that the containing segment represents. That sibling's pedestrian facility is restricted in both directions. Schema constraints: - SCOPE_SIDE must be set if and only if travel_mode == [TRAVEL_PEDESTRIAN] and the segment containing the restriction has the pedestrian_facility field set and is not set to PEDESTRIAN_FACILITY_UNKNOWN. Such restrictions must have no subpath. - All other restrictions must have this field set to SCOPE_DIRECTION (whether explicitly or implicitly). This distinction is necessary for cases such as pedestrian facility on one-way segment/sibling roads.
*   style (type: String.t, default: nil) - Restriction Style defines the semantics of the subpath field, as defined above in the documentation of subpath.
*   subpath (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - "subpath" specifies the GeoStore segments that this restriction applies to, according to the restriction_style field below. Segments that are referenced by this subpath field also refer to this feature back via the same subpath field. For all styles of restriction, all segments in the subpath must have identical copies of the restriction. In other words, restrictions are duplicated along every segment in the subpath. Note that subpaths of length 1 do not have any purpose and are disallowed. Note that it is possible to represent restrictions either using STYLE_CONTIGUOUS, or depending on the length of the subpath, one of the more specific STYLE_SINGLE, STYLE_TURN, or STYLE_IN_OUT. New code should use the more specific alternatives if possible, as they support instant updates. For restriction_style == STYLE_CONTIGUOUS (the default): "subpath" can either be empty, for a single-segment restriction, or it specifies exactly the sequence of segments which this restriction applies to. The subpath may be used to specify a turn restriction (a subpath of length 2) or to prohibit more complex maneuvers. For example, when merging onto a road from the right-hand side it may not be possible to make an immediate left turn due to insufficient time to cross the intervening lanes or the presence of a physical barrier. This would be indicated by a subpath restriction of length 3 or more. For restriction_style == STYLE_SINGLE: The subpath field of the Restriction must be empty. The restriction applies only to the segment it is attached to. There must not be an intersection group specified. For restriction_style == STYLE_TURN: The subpath field of the Restriction must contain exactly two segments. The first is called the "in_segment", the second is the "out_segment". They must be contiguous, i.e. the end intersection of the in_segment is the start intersection of the out_segment. The restriction applies only to a direct maneuver from the in_segment to the out_segment. Other paths from the in_segment to the out_segment are not restricted. There must not be an intersection group specified. For restriction_style == STYLE_IN_OUT: The subpath field of the Restriction must contain exactly two segments. The first is called the "in_segment", the second is the "out_segment". Note that the two segments define paths, but may not actually be one. The end intersection of the in_segment must be in an intersection group which also contains the start intersection of the out_segment. The in- and out-segments are not required to be adjacent, but may be. Either way, the restriction applies to any path from the in_segment to the out_segment through the intersection group, not just direct turns. The intersection_group must be specified. Note that clients which read restrictions and need to know which paths are restricted by a given IN_OUT restriction must expand the IN_OUT restriction by finding all paths through the intersection group from the in_segment to the out_segment.
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a restriction. Never set in MapFacts.
*   travelMode (type: list(String.t), default: nil) - Restriction applies only to the given travel modes. This field should always be set, but may be missing in old data. WARNING: Restrictions with no travel modes are DEPRECATED. Historically, no travel modes has meant "all travel modes", except they didn't really even mean that, because Pathfinder would use a complex set of heuristics to interpret the "correct" travel modes. Pathfinder currently (last updated August 2013) has heuristics to cope with incomplete data that reduce or extend application of the specified restrictions to pedestrians or bicycles. We are actively working to remove these heuristics and replace them with explicit, correct travel modes in the data. See b/8746491.
*   type (type: String.t, default: nil) - LINT.ThenChange(//depot/google3/google/geo/entities/v1/fields/segment.proto) clang-format on The type of restriction. This is not a condition, but rather tells you what kind of restriction it is. This field should always be set.
*   vehicleAttributeFilter (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreVehicleAttributeFilterProto.t, default: nil) - The restriction only applies to vehicles that meet all of the attributes defined here. If this is empty, it does not affect the scope of the restriction.

Metadata about a name. There are two metadata protos, whose content is meant to be similar but their usage different: NameEntityMetadata for readability and ConceptNameMetadata for size / decoding speed. NameEntityMetadata is propagated to GlobalNameInfo and EntityJoin tables, while ConceptNameMetadata is propagated from EntityJoins to the name matching tables and later to the Webref's/QRef's output. To add a new metadata field in the Names pipeline, and propagate it to EntityJoins and Names matching tables, it is necessary to: (1) Add the field to NameEntityMetadata, and a corresponding data representation in ConceptNameMetadata. (2) Populate the field in NameVariantSignals.name_metadata, from any source. This can be done in a corresponding NameProcessor. (3) Update the library name-metadata.h/cc to make sure that the metadata field is: a) merged correctly when merging two NameSignals; and b) transformed to the corresponding field in ConceptNameMetadata proto. Next available tag: 22.
*   isBypassedName (type: boolean(), default: nil) - There is a limit of entities per name for which we can keep name signals and score. This flag is set to true for names that by-passed per-name-scoring, as there were too many entities for the name.
*   isCompoundName (type: boolean(), default: nil) - This name is a generated compound name to pass primary pruning.
*   isDictionaryTerm (type: boolean(), default: nil) - This is set to true if the entity corresponds to a dictionary term.
*   isEventRetrievalKey (type: boolean(), default: nil) - If true, this name is an event retrieval key.
*   isGeneratedName (type: boolean(), default: nil) - This name is generated from other names.
*   isGeneratedStreetname (type: boolean(), default: nil) - This name is a generated street name.
*   isHierarchyPropagated (type: boolean(), default: nil) - This name is added by name propagation in hierarchy.
*   isIsbn (type: boolean(), default: nil) - This name is an ISBN.
*   isLyricsContent (type: boolean(), default: nil) - This name comes from recording lyrics content.
*   isPhoneNumber (type: boolean(), default: nil) - This name is a phone number.
*   isRefconName (type: boolean(), default: nil) - This name is used for refcon.
*   isReferenceName (type: boolean(), default: nil) - This name is a reference name, only for internal usage, this name should not go into matching table without support of other signals.
*   isRefpageUrl (type: boolean(), default: nil) - This name is the URL of a reference page.
*   isReverseUniquePropertyName (type: boolean(), default: nil) - This name is generated from a reverse unique property of the entity.
*   isStrongIdentifier (type: boolean(), default: nil) - This name is a strong identifier for this entity.
*   isSynonymOrFuzzyMatch (type: boolean(), default: nil) - Set if the name is coming from synonyms.
*   isTrustedAllcapsName (type: boolean(), default: nil) - If true, this name is a trusted name if it is in ALLCAPS.
*   isUnnormalizedName (type: boolean(), default: nil) - If true, do not do tokenization when compute fprint hash for this name.
*   notGeneratedName (type: boolean(), default: nil) - This name is clearly not generated(aka. at least one source of this name is not generated). This field is added for simplifying generated name tag while merging. Do not use this metadata directly.
*   originalNames (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefPreprocessingOriginalNames.t, default: nil) - Original versions of the name (before normalization). Used as query for the entity by Explicit Entity Search.
*   suppressTokenization (type: boolean(), default: nil) - Whether or not to suppress tokenization on this name.


The android app information of the provider. Like, Spotify. Next ID: 17 LINT. IfChange
*   androidIntent (type: String.t, default: nil) - Intent associated with the app. We include intents here as different versions of the same app may support different intents. In those cases, the package_name is not enough to identify the app and we should use the combination of package_name and android_intent. This field might contain sensitive data, if represents ClientOp with encapsulated PII such as user query.
*   appUniqueId (type: String.t, default: nil) - Store the app unique id endpoint. This will be passed over to app to fulfill the action.
*   dataMimetype (type: String.t, default: nil) - data_mimetype and account_type are the what AGSA uses to filter which contacts support this Android app in ContactProvider.
*   isBroadcastIntent (type: boolean(), default: nil) - If true, client should broadcast the intent instead of open the intent.
*   isDefault (type: boolean(), default: nil) - App is the default app for it's core functionality. For example, it will be true for Android messages if it is the default app to send and receive SMS on the phone.
*   mimetype (type: String.t, default: nil) - Store mimetype of this endpoint. We will use this as the differentiator for Assistant to know whether to use the RawContact for messaging, call or video call. For example, send message mimetype for whatsapp: "vnd.android.cursor.item/vnd.com.whatsapp.profile" voice call mimetype for whatsapp: "vnd.android.cursor.item/vnd.com.whatsapp.voip.call"
*   packageName (type: String.t, default: nil) - The android app package of the provider, like "com.spotify.music".
*   providerType (type: String.t, default: nil) - The OemProviderType is specific for OEM system Android apps. For example, in Auto Embedded, the OEM will have a system Radio/Media app. The system app’s capabilities/core functionalities are captured here. For physical media sources, the OEM may decide to implement one media app (thus, one package name) that handles multiple physical media sources. For these cases, each physical media source will be sent as different providers even though the package name is the same.
*   shortcutId (type: String.t, default: nil) - Id of the app's Android shortcut to be launched by Assistant. The client is expected to use the Android LauncherApps API to execute this shortcut which in turn will open the app. For example, Whatsapp may create an Android shortcut for a frequently messaged contact with an id "contact_123". This field will contain that id and the client can execute it to open up the chat with that particular contact. If this field is set, the package_name field must also be set since both will be used by the LauncherApps API for execution. If this field is set, the intent related fields will be ignored and not used as a fallback. Design: go/shortcut-id-in-provider-open-clientop This field should only be set for devices with Android API level >= 25 (since that is the version from which the LauncherApps startShortcut API is available)
*   targetClass (type: String.t, default: nil) - The fully qualified target class name of the provider, like "com.example.myapp.GetOrderService".
*   versionName (type: String.t, default: nil) - The android app version name, like "4.1.091.05.40d", "11.2.7.21.alpha". Android Docs: https://developer.android.com/reference/android/content/pm/PackageInfo#versionName

Signals associated with NTPRAnnotator annotations. Empty. The signal being present is enough for the conformance checking library to be able to check.




Additional animated image data stored in perdoc (ImageData); will only be stored for animated images.
*   aggregatedPornScores (type: GoogleApi.ContentWarehouse.V1.Model.ImageSafesearchContentBrainPornAnnotation.t, default: nil) - Aggregated porn scores for animated images. Aggregated using max sampling rate / max duration. Note the plan is to fold these scores into existing summarized scores, for cases where these scores are available. See tracking bug b/63580795.

A logical border is a grouping of border features, which together model a divide between two regions. The borders within this grouping share common attributes, such as the regions they divide, and may represent a conceptual group of borders, of which may be wholly disputed, wholly undisputed, or a mixture of disputed and undisputed. Note that any borders within this group may be part of multiple logical borders. A logical border is required to have a name describing what the grouping represents (e.g. "US - Mexico Border", "Kosovo - Serbia Border (Disputed)").
*   borderSegment (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - All the border segments which make up this logical border. Border segments must be TYPE_BORDER features which have the same left/right features. This is a many-to-many bidirectional relationship, so any border segment within this list might be part of another logical border.
*   status (type: String.t, default: nil) - The logical border status identifies its legal status. This is similar to the BorderStatus present within border segments, but applies to the group as a whole.

Represents the action triggered by Rule Engine when the rule is true.




A TriggerCondition is described as a set of states which must be met by the device. It also includes instructions to the Assistant on what kind of response to execute when the condition is not met.
*   requiredStateValues (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoArgSpec.t}, default: nil) - The map of state keys along with their values which must be returned by the device, for example to start the dishwasher you may require states: {"door": "CLOSED", "detergent_status": "READY"}.
*   status (type: String.t, default: nil) - Refers to a defined ConditionalResult keyed by its status. It could be a built-in or custom ConditionalResult for this Intent. Note: the states provided by the device MUST contain all of the states required by the ConditionalResult.





Contains anchor level features that apply to all anchor types. Next id: 22.
*   anchorQbstDistance (type: number(), default: nil) - QBST distance between the anchor and the top navboost query of the video if exists, or the video title otherwise.
*   asrAverageBabelSimilarityScore (type: number(), default: nil) - Average of babel similarity between the anchor and all asr sentences.
*   asrMaximumBabelSimilarityScore (type: number(), default: nil) - Maximum babel similarity between the anchor and the asr sentences.
*   bleurtScore (type: number(), default: nil) - The Bleurt inference score generated using the bleurt_features.
*   descriptionAverageBabelSimilarityScore (type: number(), default: nil) - Average of babel similarity between the anchor and all description sentences.
*   descriptionMaximumBabelSimilarityScore (type: number(), default: nil) - Maximum babel similarity between the anchor and the description sentences.
*   dolphinDescriptivenessScore (type: number(), default: nil) - The predicted descriptiveness and usefulness rating scores generated by the Unified Dolphin model. Rating template: experimental/video/video_anchors_oneside_without_thumbnail/template.jhtml
*   dolphinEnsembleScore (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDolphinEnsembleScore.t), default: nil) - If the dolphin model is an ensemble model, this contains the scores associated to each individual ensemble model.
*   dolphinFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDolphinFeatures.t, default: nil) - The features used to generate the Dolphin score.
*   dolphinScore (type: number(), default: nil) - The score generated by the Dolphin callout model.
*   labelPhraseEmbedding (type: list(number()), default: nil) - A phrase embedding for the anchor label. The model used to generate the embedding can be found in VideoAnchorSets: video_score_info.common_features.label_phrase_embedding_model
*   mumDescriptivenessScore (type: number(), default: nil) - The predicted descriptiveness of the anchor using the MUM unified scoring model.
*   mumUsefulnessScore (type: number(), default: nil) - The predicted usefulness of the anchor using the MUM unified scoring model.
*   retentionScore (type: number(), default: nil) - A score that is correlated with retention probability of the interval associated with this anchor (start time to end time). Retention probability of an interval is 1 - (probability the user does not watch the interval all the way through, given they started watching it). This score may be predicted by a model, or calculated from actual retention data.
*   timedLabelFeatures (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionLabelFeatures.t), default: nil) - For annotating labels and their timing and context info. For example, this is used for anchor labels within a passage.
*   titleAnchorBabelMatchScore (type: number(), default: nil) - Babel similarity between the anchor and the video title.




For legacy purposes, cdocs contain a repeated list of *Entry, whereas it's more convenient elsewhere to contain this information within its own protocol buffer.

This resource represents a long-running operation that is the result of a network API call.
*   done (type: boolean(), default: nil) - If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.
*   error (type: GoogleApi.ContentWarehouse.V1.Model.GoogleRpcStatus.t, default: nil) - The error result of the operation in case of failure or cancellation.
*   metadata (type: map(), default: nil) - Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
*   name (type: String.t, default: nil) - The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.
*   response (type: map(), default: nil) - The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.

Contains high level search query statistics of the document.
*   aggregatedQueryCount (type: float(), default: nil) - Total query count for the document from all the query terms. Can be used to estimate the popularity of the document.




A referent contains information about what a discourse context entity is referring to. It acts like a canonical mention of the entity.
*   distance (type: float(), default: nil) - Distance of this referent from the markables in the Document. Smaller values imply that the referent is more accessible to be an antecedent for a markable in the Document. The expectation is that this field would increase with every new Document in which this referent is not mentioned.
*   phrase (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t, default: nil) - Entity name phrase. The phrase indices are relative to the token array above. The phrase should normally cover all the tokens in the name and the head must be set to be the head token of the name.
*   prominence (type: float(), default: nil) - Prominence score for referent. This is roughly equivalent to the number of previous mentions of the referent.
*   token (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftToken.t), default: nil) - Tokenized representation for the canonical name of the referent entity.


Location of the camera @deprecated: Use location_created instead.

Details about personalization and contextual scoring decisions from Personalized Query Understanding (go/pqu). This message represents information about what kind of biasing was applied, including what type of data were used and how strongly. Intended to be used by client code for fine-tuning necessary ranking or triggering logic if it's not possible to rely on the aggregated annotation confidence alone. To minimize unwanted dependencies and incorrect usage of the data this proto has restricted visibility. Please reach out to refx-pqu@google.com if you want to have access. Next id: 2

This protocol buffer stores information related to temporary closure of a feature. The only allowed precisions for a date is PRECISION_DAY. DateTimeProto.seconds should have the lowest legal value for the desired date/time and precision. E.g. for PRECISION_MONTH, 2019-02-15 21:10:30 is not valid, it should be 2019-02-01 00:00:00 instead. NOTE: Each date is stored in UTC but should be interpreted as being in the local timezone. So clients should convert the DateTimeProto to local (civil) time using UTC+0, and then treat the result as local to the feature.
*   endAsOfDate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDateTimeProto.t, default: nil) - The latest when this closure may end, if the exact date is unknown. If set, the feature is operational again no later than this date.
*   startAsOfDate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDateTimeProto.t, default: nil) - The latest when this closure may start, if the exact date is unknown. If set, the feature is temporarily closed starting no later than this date.


Information on the catalog that this dataset comes from. Next ID: 5

These scores are for image scores in the context of a landing page, which is now a discouraged path of building image classifications. See go/orbit-for-images-v2 for an alternative.
*   intents (type: list(String.t), default: nil) - The unique identifier for an Asteroid Belt document intent is being reused here
*   scores (type: list(integer()), default: nil) - The intent scores, scaled to integers between 0 and 100 for compactness.

Contains information needed for end-to-end live experiments. For a cdoc generated by production pipeline, it includes experiment IDs that have selected current document. For a cdoc generated by experiment pipeline, it includes current experiment ID.
*   perLiveExperimentInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.CompositeDocLiveExperimentInfoPerLiveExperimentInfo.t), default: nil) - List of necessary information for each live experiments.

Contains past or forward revisions of this document.
*   agent (type: String.t, default: nil) - If the change was made by a person specify the name or id of that person.
*   createTime (type: DateTime.t, default: nil) - The time that the revision was created, internally generated by doc proto storage at the time of create.
*   id (type: String.t, default: nil) - Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
*   parent (type: list(integer()), default: nil) - The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the revisions field.
*   parentIds (type: list(String.t), default: nil) - The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are provenance.parent.revision fields that index into this field.
*   processor (type: String.t, default: nil) - If the annotation was made by processor identify the processor by its resource name.




Media item attached to an element of price list.
*   googleUrl (type: String.t, default: nil) - The FIFE url associated with the media. NOTE: This FIFE URL must be PII-free, see go/product-catalogue-photo-storage
*   mediaKey (type: String.t, default: nil) - The mediaKey associated with the media. NOTE: This media key must be PII-free, see go/product-catalogue-photo-storage

Resolved url and site spamscore for outlinks in updates (aka microposts).
*   aggregationFp (type: String.t, default: nil) - Representative id for an equivalence class of URLs. E.g. http://youtube.com/watch?v=12 and http://youtube.com/watch?v=12&feature=related have the same aggregation id since they're effectively the same webpage

All information about a single entity available to WebRef. Next available tag: 7
*   annotatedRelationship (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntityRelationship.t), default: nil) - Information about links (e.g. implications) between the annotated entities.
*   annotations (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityAnnotations.t, default: nil) - All annotations of this entity on the given document.
*   collections (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntityCollections.t, default: nil) - Information about the collections of this entity.
*   entityJoin (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityJoin.t, default: nil) - Metadata and raw signals used by the annotator. Intended for internal use. Steer clear of adding new dependencies on fields in this proto, especially external dependencies. If you are a Refx client and would like to consume entity metadata, consider querying TopicServer instead.
*   id (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntityId.t, default: nil) - An identifier (usually a MID) for the entity. Consider using GetWebrefEntityMid() in the adjacent webref-entities-util.h to read this.
*   mrf (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgument.t), default: nil) - MRF equivalent representations of this entity as a compound, one for each unique MRF representation. Populated for compounds. Each MRF expression contains a minimum FunctionCall structure wrapped in a nameless Argument without signals and range data. This is not meant to be directly usable as MRF, use QueryJoinToMeaningStructConverter to expand it into a usable form. References to entities are made as component_reference ArgumentValue. Each compound Mention of this entity (not all of its mentions need be compounds, some may be plain entity mentions) have one or more compound_value fields claiming these MRF expressions via their mrf_index. The compound_value has nested components, one for each unique component_reference.index in the MRF expression. The processing expectation is that each ArgumentValue which has a component_reference has its contents discarded and replaced with the MRF for the target entity and mention named by the compound_value.component. If the target is not a compound, the ArgumentValue becomes a simple mid value and the signals are taken from the entity and the mention. If the target is a compound itself, the expansion continues recursively. If the target is a compound with multiple MRFs, a cartesian product of recursive expansions may need to be produced. Along with the component_reference we also emit an example value, but this is purely for human consumption so it's easier to understand what the full compound is like. The processing expectation remains that the ArgumentValue containing a component_reference is completely discarded and rebuilt with the reference target value. If the target has more than one MRF expression, it's not specified which one will be used as an example, except that the choice is guaranteed to be deterministic from run to run.


A date range for an entity. E.g. lifespan of a person, release date of a movie, ...
*   confidence (type: number(), default: nil) - Indicates how confident we are this extracted range is relevant to a document (document to be infered from context).
*   end (type: String.t, default: nil) - End date extracted from the entity along end_source_property.
*   endSourceProperty (type: String.t, default: nil) - KG-property that links the entity to the end date.
*   sourceEntityMid (type: String.t, default: nil) - Entity from which this range was extracted.
*   start (type: String.t, default: nil) - Start date extracted from the entity along start_source_property.
*   startSourceProperty (type: String.t, default: nil) - KG-property that links the entity to the start date.


The identification of a Knowledge Graph (KG) entity in Legos.
*   debugName (type: String.t, default: nil) - DO NOT USE THIS FIELD. The entity name here can be random garbage and when it's actually a name it will be in a random language (most of the time English but not always). This field is going away soon. For a replacement you should probably use the following RPC: cs/symbol:Ytpedia.GetNames please read go/ytks-calling details on how to call it and don't hesitate to write to us for help with this (or in any case before starting to send real traffic to us) at: g/yt-knowledge-service
*   kgId (type: String.t, default: nil) - The ID of the Knowledge Graph entity. Note: this is the primary ID at generation time. See https://sites.google.com/a/google.com/knowledge-graph/data/primary_ids


Represents the output of the Rule Evaluator.
*   invalidRules (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1InvalidRule.t), default: nil) - A subset of triggered rules that failed the validation check(s) after parsing.
*   matchedRules (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1Rule.t), default: nil) - A subset of triggered rules that are evaluated true for a given request.
*   triggeredRules (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1Rule.t), default: nil) - List of rules fetched from database for the given request trigger type.





Constituency parse tree node with tokens as the leaf nodes.
*   child (type: list(integer()), default: nil) - An arbitrary number of children, ordered from left to right; empty for preterminals. Represented via indices into Document.constituency_node.
*   label (type: String.t, default: nil) - The label of the current node.
*   phrase (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t, default: nil) - A phrase that contains information about the span and the (optional) head token. For terminal nodes the head of the phrase holds the word.





This is the log version of apps.people.oz.external.mergedpeopleapi. RawDeviceContactInfo proto. Next ID: 3




Volume related access rights that are computed by Goovols Syncher from partner and book metadata. This complements VolumeAccessRights. Next available ID: 4 (kblass)
*   canFamilyShare (type: boolean(), default: nil) - Whether this book can be shared with family members.
*   panelizationFeatureInternalOnly (type: boolean(), default: nil) - Whether the panelization feature is enabled for internal users only.
*   viewableInternalOnly (type: boolean(), default: nil) - Whether the book is viewable for internal users only.


An optional message that may contain details of the signals computation.
*   isSmearedSignal (type: boolean(), default: nil) - Indicates whether the signal value is "smeared", e.g. extrapolated from other URLs.

Includes all partners that are either open now or supporting order ahead.
*   logOnly (type: boolean(), default: nil) - Indicates whether the partner is log only.


Encapsulates metadata about the query span resolved here.
*   meridiem (type: String.t, default: nil) - Simple enum container for exporting meridiem mentions. Note: this is marked as deprecated as we are moving to properly parse expressions with explicit meridiem information.
*   metadata (type: String.t, default: nil) - Encodes whether the datetime was phrased in a specific way, see enum above.
*   relative (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeRelativeDateTime.t, default: nil) - Expresses the relative DateTime query that gave rise to these grounded semantics.


the extra info response from ascorer used to build snippets in GWS experiments


Context which helps to determine the user's local time.
*   timeZone (type: String.t, default: nil) - The current time zone of the user. Represented as a valid time zone ID from Olson database, like "Europe/Zurich" (see http://google3/i18n/identifiers/data/timezones.txt).

A circle membership that the person has. A circle membership is created by adding a person to a circle by person-id or by email.
*   circleId (type: String.t, default: nil) - The circle that the person belongs to.

Packages entity id and score together for a given source.
*   customSource (type: String.t, default: nil) - The custom source should only be a-z[0-9] dashes, underscores, and colons. Special characters should be avoided.




Identifies the source of the Meta Content Tag segment in the Cdoc https://www.w3schools.com/tags/tag_meta.asp


Pointer to a single node in a target scale. pointer. Index fields should be annotated with a (pointer.to) annotation, indicating what scale they point at.
*   index (type: integer(), default: nil) - The index of the node that this pointer points to.

Store metadata information like annotation-id and product source for visible to guests contacts go/visible-to-guests.

A variety of opinions may be published as a single document. We have one OpinionInfo for each opinion About the "CONCURRING" opinion type: It means that a judge "concurs" to the conclusion (judegment) of the majority of the court, however, he may not agree with the argument in the primary opinion. If multiple judges "concur" or "dissent" the primary opinion, then one judge delivers their opinion, and other judges are said to "join" him.
*   DeliveredBy (type: GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t, default: nil) - if Type == PER_CURIAM, then DeliveredBy is unnecessary since it is delivered by the full court. Who delivered the opinion?
*   JoinedBy (type: GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t, default: nil) - Who agrees with the opinion

Contains information about on-device timers for devices that support timers.
*   stateFetchError (type: String.t, default: nil) - Indicates if an error occurred while fetching timer state. If this value is missing, it can be assumed that the state fetch was successful.


An entity level sentiment annotation containing the sentiment values aggregated over all mentions of an entity. Next tag: 7.
*   entityName (type: String.t, default: nil) - The representative entity name. This can be blank for cases when there is no explicit name like "I" or "it". The mentions' tokens can be used to get more details about each entity.
*   mid (type: String.t, default: nil) - MID for this entity, if available.
*   polarity (type: number(), default: nil) - Polarity of the sentiment. See above for detail.
*   score (type: number(), default: nil) - The per entity score between -1.0 and 1.0. Combines the signal from polarity and magnitude values.




The ContactEditContext message is a wrapper around the generic ContactMutationContext data to represent when and where a contact create was performed.


Conceptually, timers are clocks that count down from an initial duration and ring when they reach 0. In practice, as a timer is running, it holds a stable expiration time and computes the remaining duration using the current time. When a timer is paused, it holds a stable remaining duration.
*   expireTime (type: DateTime.t, default: nil) - The time the timer is scheduled to expire. google.protobuf.Timestamp is a Unix epoch time with a granularity of 1 nanosecond.
*   label (type: String.t, default: nil) - A user-provided name for this timer.
*   originalDuration (type: String.t, default: nil) - The duration of the timer when it was started. For the ADD_TIME action, this field contains the amount of time to add to the timer with the given timer_id.
*   remainingDuration (type: String.t, default: nil) - The remaining duration for the timer.
*   status (type: String.t, default: nil) - Describes the part of the lifecycle a timer is in.
*   timerId (type: String.t, default: nil) - A string key used as an identifier to this timer. This key needs to be unique amongst all timers on the device. The client can choose a mechanism of its choice to ensure this. If the server suggests a timer_id, the client can either use the suggestion or create a new unique timer_id of its choosing.

Metadata pertaining to nested Dynamic Depth metadata. Currently this message is used to indicate the presence of dynamic depth.


Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
*   exemptedMembers (type: list(String.t), default: nil) - Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
*   logType (type: String.t, default: nil) - The log type that this config enables.

This defines the per-doc data which is extracted from thumbnails and propagated over to indexing. It contains all information that can be used for restricts. Next tag id: 132
firstTimeSeenOnDocSec (type: integer(), default: nil) - The first time this image URL was seen on the containing web page. Only set during web indexing.  extendedExif (type: GoogleApi. ContentWarehouse.V1.Model.PhotosImageMetadata.t, default: nil) - The EXIF generated by photos backend team's (more specifically FIFE's) thumbnailer library. This exif model is more comprehensive since a dedicated team is constantly improving it and adding new fields over time. This is currently populated by moonshine for selected corpora.  largestFaceFrac (type: number(), default: nil) - Fraction of image covered by the largest face (should match largestFaceFraction, but without scaling). In perdocs, is set only if numberFaces > 0.  restrictStrings (type: list(String.t), default: nil) - A string representation of all the restricts associated with this image.  imageLicenseInfo (type: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageLicenseInfo.t, default: nil) - Indicates license info of this image, which will tell image search users how to use this image legally.  robotedAgents (type: String.t, default: nil) - CSV list of user agents for which this image should be considered roboted. Note: All images are crawled using googlebot-images, this exists for clients that require additional restrictions beyond googlebot-images such as news.  coloredPixelsFrac (type: number(), default: nil) - Fraction of the image that contains pixels over a certain saturation threshold: can be used to determine if the image is grayscale or not.  imageExactBoost (type: GoogleApi.ContentWarehouse.V1.Model.ImageExactBoost.t, default: nil) - A set of query fingerprints and confidence scores. There queries are supposed to be relevant to the image with high confidence.  numberFaces (type: integer(), default: nil) - Number of faces detected in the image  colorScore (type: list(number()), default: nil) - Colorness scores for the image. Each score represents the amount of a particular color in the image. At the current time, there are 12 colors, so there should always be 0 or 12 values in this array. The 12 colors are black, blue, brown, gray, green, orange, pink, purple, red, teal, white, yellow. The convention is that the scores are stored in alphabetical order, so the first score is black, and the last score is yellow.  indexedVerticals (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageDataVerticalIndexingInfoImage.t), default: nil) - Vertical indexing information for the document and associated image outlinks.  shoppingProductInformation (type: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryShoppingProductInformation.t, default: nil) - The Shoppable Images product information to be annotated in the Cdoc. All fields will be populated except the product location bounding box.  testingScore (type: integer(), default: nil) - This field is for testing purposes, more information in go/media-dirt-2022.  unavailableAfterSecs (type: String.t, default: nil) - Time in seconds since epoch after which this image should be considered unavailable.  isUnwantedContent (type: boolean(), default: nil) - Field to indicate the image is unwanted for search index. The data is propagated from amarna to alexandria to be annotated in the cdoc. Refer to image/repository/proto/unwanted_content.proto for more info.  finalPornScore (type: number(), default: nil) - A [0..1] porn score based on some image-level features (like content score, referrer statistics, navboost queries, etc.). See class RiflePornScorer for more details.  nearDupFeaturesSmallVersion (type: integer(), default: nil) - The following fields contain information about a smaller and less powerful version of the hash, needed for neardup retrieval. A compressed and an encoded version of the small hash are stored below. The smaller hash may have a few variants to increase recall. NOTE: This hash is generated by V2 hash computation. A compressed version of the small hash. Currently, a 4-byte fingerprint.  pornFlagData (type: GoogleApi.ContentWarehouse.V1.Model.PornFlagData.t, default: nil) - Used by the segindexer for combined www+image indices.  nimaAva (type: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryNimaOutput.t, default: nil) - Productionized Nima AVA score. Both this field and nima_vq were added on the top of nima_ava_score and nima_vq_score because the signals are already integrated with Batch Amarna in image/repository/schema/global_output_tags.h using NimaOutput.  ocrGoodoc (type: GoogleApi.ContentWarehouse.V1.Model.GoodocDocument.t, default: nil) - Pruned OCR Goodoc see vss_aksara_ocr_util.h for the fields copied.  isVisible (type: boolean(), default: nil) - True if the image is inlined on the page (typicially via ) or false if the image is linked to (via an href).  rankInNeardupCluster (type: integer(), default: nil) - Rank in near-dup cluster (go/image-rank-in-neardup-cluster). The rank is 1-indexed: rank 1 is the best.  isMultiframe (type: boolean(), default: nil) - True if the original image contains multiple frames (e.g., for animated or stereoscopic images).  h2i (type: number(), default: nil) - 'Hovers to Impressions' and 'Hovers to Clicks' ratios for an image. These are considered Search CPS Personal Data due to concerns that they may be used to reidentify or confirm the presence of specific singleton (unique) queries.  expirationTimestamp (type: String.t, default: nil) - The thumbnail is guaranteed to be kept in the serving system until the expiration timestamp has passed, in microseconds.  brainPornScoresVersion (type: String.t, default: nil) - A string that indicates the version of SafeSearch classifier used to compute brain_porn_scores.  clickMagnetScore (type: number(), default: nil) - A score in (0, 1] to indicate how likely this image is considered as a click magnet based on clicks received from bad queries.  smearedTopWebLandingPageDocids (type: list(String.t), default: nil) - Web docids that correspond to high ranked smeared landing pages for this image. Used for conditional retrieval of actionable landing pages for image search.  canonicalDocid (type: String.t, default: nil) - This is the image docid used in image search. For ImageData protos coming from Alexandria/Freshdocs, this is a 'required' field that MUST be populated.  contentFirstCrawlTime (type: integer(), default: nil) - Earliest known crawl time among all neardups of this image (go/imagecontentage).  whiteBackgroundScoreVersion (type: integer(), default: nil) - Image is likely an object on a white background (value on [0,1]).  isIndexedByImagesearch (type: boolean(), default: nil) - If this image was not selected for indexing by imagesearch, these fields say so and explain why.  personAttributes (type: GoogleApi.ContentWarehouse.V1.Model.LensDiscoveryStylePersonAttributes.t, default: nil) - Contains person attributes from the LookNet-Person model and the Style AI Iconic Person Scorer for the most iconic person in a style image.  brainPornScores (type: GoogleApi.ContentWarehouse.V1.Model.ImageSafesearchContentBrainPornAnnotation.t, default: nil) - A [0..1] SafeSearch scores based on image pixels, using Google Brain: porn, csai, violence, medical, and spoof. For porn only, if available prefer final_porn_score as it should be more precise than brain_porn_scores.porn_score.  nearDupFeaturesVersion (type: integer(), default: nil) - Image content derived data used for finding image near dups. NOTE: This hash is generated by V1 hash computation.  firstCrawlTime (type: integer(), default: nil) - Earliest known timestamp about this image. Today, this is the timestamp when the content key was generated for this image. The time is in seconds.  docid (type: String.t, default: nil) - fingerprint(non-canonicalized absolute image url) This is not the image docid. Use canonical_docid instead. For ImageData protos coming from Alexandria/Freshdocs, this is a 'required' field that MUST be populated. But once again, this is very likely NOT something you need. Use canonical_docid instead.  codomainStrength (type: integer(), default: nil) - Like is_visible, this is a property of the (web-doc, img_url) pair not just the image. A high codomain_strength indicates high confidence based on collected stats that the image is hosted on a companion domain. If not enough stats are available for codomain strength, this field may be absent in ImageData, and hence the CompositeDoc. Do not place negative values here. Permitted values range between 0 and image_quality_codomain::kMaxCodomainStrength defined in //image/quality/codomain/codomain-stats-utils.h.  adaboostImageFeaturePorn (type: number(), default: nil) - Warning: adaboost_image_feature_porn* and imageFeaturePorn fields are DEPRECATED in favor of brain_porn_scores. Please do not use them. Contact safesearch@ for transition advice.  lastCrawlTime (type: integer(), default: nil) - Most recent timestamp in seconds when this URL was crawled.  featuredImageProp (type: GoogleApi.ContentWarehouse.V1.Model.ImageMonetizationFeaturedImageProperties.t, default: nil) - Properties used in featured imagesearch project. inspiration_score indicates how well an image is related to products, or how inspirational it is.  flowOutput (type: GoogleApi.ContentWarehouse.V1.Model.ImageContentFlowProtoProd.t, default: nil) - The output of various features generated by the Flow framework, most importantly data from Starburst (go/starburst). Do NOT interact with the internals of this proto since they may change over time. Instead, use the existing interfaces that consume FlowProtoProd's directly, e.g., image/mustang/content/image_content_distance.h For more info, please contact image-content-core@.  onPageAlternateUrl (type: String.t, default: nil) - For an image not explicitly visible on this page, the following url is the one which most closely matches it.  imageContentQueryBoost (type: GoogleApi.ContentWarehouse.V1.Model.ImageContentQueryBoost.t, default: nil) - Image Content Scored per query boosts. Currently this is filled by the pamir algorithm and populates the pamir_section.  largestFaceFraction (type: integer(), default: nil) - Fraction of image covered by the largest face, scaled by 1000. Warning: Is DEPRECATED in favor of largest_face_frac. Do not use.  finalPornScoreVersion (type: String.t, default: nil) - A string that indicates the version of SafeSearch classifier used to compute final_porn_score.  imageRegions (type: GoogleApi.ContentWarehouse.V1.Model.ImageRegionsImageRegions.t, default: nil) - Regions detected within the image (go/images-region-search-edd). Regions contain bounding boxes circumscribing objects of interest in the image, along with object labels. Regions may overlap.  isIipInScope (type: boolean(), default: nil) - IIP in scope signal (go/iip). Set to true if the image is annotated with any iip_in_scope entities (go/iukp-trust-v2).  licensedWebImagesOptInState (type: String.t, default: nil) - Indicates the web-master opt-in state of this image, and will be used for Google products to decide usage rights like showing large previews.  packedFullFaceInfo (type: GoogleApi.ContentWarehouse.V1.Model.FaceIndexing.t, default: nil) - Encodes face number and largest face frac into a small package for storage in mustang. This is calculated directly from FaceDetectionResult.


The Directory proto group holds snippet and title metadata which is made available to the snippet code. The proto group was originally created for metadata coming from the Google Web Directory (gwd) project. It has since come to be used to hold metadata from gwd and other sources.
*   TitleScore (type: number(), default: nil) - Deprecated; do not use. There is no code populating these fields as of Oct 2017.







A road monitor is a device that observes traffic for road violations like speeding or running a red light. These are modeled within MapFacts so that navigation services can warn users when they drive along road segments that are monitored.
*   monitoredRoad (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The TYPE_ROAD segment features that this road monitor may observe.


Extra metadata for an aggregated or raw device contact.

Specifies the desired format for the server to use when it returns screen_out response.
*   fontScaleFactor (type: number(), default: nil) - The scale factor used to convert Scalable Pixel (SP) units to Density-independent Pixel (DP) units (DP = SP * scale factor). Fonts are measured in units of SP, and on some platforms such as Android the SP to DP scale factor can be affected by the font size a user selects in accessibility settings.

Email for Google product communication with the user. This is only allowed in ServiceData. It is purely synthesized and read-only, and contains at most one field. It proxies from RawCommunicationEmail and only includes the primary field if exists. Otherwise if RawCommunicationEmail does not have primary, this includes a field synthesized from valid Gaia primary account email. Otherwise if Gaia primary account email is invalid, this field is empty. See go/comm-email-use for more details.







Mentions of the entity in the document.
*   confidence (type: float(), default: nil) - Estimate of the confidence that this mention is in the correct cluster. Zero means this mention is probably in the wrong cluster, 1 means this mention is probably in the correct cluster. See nlp/saft/components/coreference/coreference-confidence.h for details about what "correct cluster" might mean.
*   resolution (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftMentionResolution.t, default: nil) - Mention-level resolution. This is used for encoding the meaning of the mention rather than the entity. For example, definite references and appositions are resolved to the mid for the concept rather than the entity.

States the cloud capabilities of the device, i.e. the endpoint(s) to use for cloud execution of Actions or Registration.
*   cloudEndpoints (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudEndpoint.t), default: nil) - The list of CloudEndpoints supported by this Device Model. Note that each should have a unique |name|. If any cloud endpoints are provided here, then the first one in the list will be used by default for all Cloud Execution. An Intent may override the default by providing an |execution_config|.







User-defined URL and its last access data for citation manager.

The configuration for a spanner database provisioning. Next ID: 8
*   createDatabaseOptions (type: GoogleApi.ContentWarehouse.V1.Model.CloudAiPlatformTenantresourceInfraSpannerConfigCreateDatabaseOptions.t, default: nil) - Input [Optional]. The options to create a spanner database. Note: give the right options to ensure the right KMS key access audit logging and AxT logging in expected logging category.
*   kmsKeyReference (type: String.t, default: nil) - Input [Optional]. The KMS key name or the KMS grant name used for CMEK encryption. Only set this field when provisioning new Infra Spanner databases. For existing Infra Spanner databases, this field will be ignored because CMEK re-encryption is not supported. For example, projects//locations//keyRings//cryptoKeys/
*   sdlBundlePath (type: String.t, default: nil) - Input [Required]. The file path to the spanner SDL bundle.
*   spannerBorgServiceAccount (type: String.t, default: nil) - Input [Optional]. The spanner borg service account for delegating the kms key to. For example, spanner-infra-cmek-nonprod@system.gserviceaccount.com, for the nonprod universe.
*   spannerUniverse (type: String.t, default: nil) - Input [Required]. Every database in Spanner can be identified by the following path name: /span//:

The set of information that helps the server identify the surface. This replaces the User-Agent string within the Assistant Server. Note: The SurfaceIdentity proto should only be used to derive the capabilities of a surface. It should not be accessed outside of the CapabilityBuilder or CapabilityChecker. IMPORTANT: The partial migration to the SurfaceIdentity and SurfaceVersion protos defined here is being rolled back (b/303012824). All existing references will be updated to point back to //assistant/api/core_types/surface_identity.proto. If you are adding a reference, use the SurfaceIdentity and SurfaceVersion protos defined there. NEXT ID: 6 LINT. IfChange
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The identifier of the device.
*   legacySurfaceType (type: String.t, default: nil) - DEPRECATED: The legacy device's surface type enum. NOTE: Prefer using the ontological surface_type field above. If you need to access the legacy surface type, please file a bug and add it in your code to migrate to ontological surface type.
*   surfaceType (type: String.t, default: nil) - The device's surface type. The types are defined at google3/assistant/api/core_types/surfaces.gcl.
*   surfaceVersion (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedSurfaceVersion.t, default: nil) - The version of the surface/client. This is different from the Conversation protocol version.




Message to represent a "feature property" as an abstract construct. Most feature properties are mapped one to one with the EditProto field types. However in some cases the EditProto field type granularity is too coarse to support use-cases that rely on feature properties (such as per-value rights tracking). When that is the case, the feature property is augmented with a secondary field.

The metadata returned with each transcode. Next available field: 9
*   expirationTimestampSec (type: String.t, default: nil) - Timestamp (measured in seconds since epoch) after which Amarna will delete the serving transcode.
*   genus (type: String.t, default: nil) - The Venom Genus that this transcode was produced for.
*   state (type: String.t, default: nil) - Indicates the state in Venom for this transcode type.
*   transcodeItag (type: integer(), default: nil) - transcode type which are available for the video.
*   videoId (type: GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId.t, default: nil) - The Venom ID that this transcode was produced for.
*   xtagsList (type: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiXtagList.t, default: nil) - Indicates xtags if present. Xtag makes the different transcode. For transcode "MP4_AVCBASE640_AAC/af=sq" (itag 18 with xtag), "af=sq" is the xtag part. This is a different transcode than "MP4_AVCBASE640_AAC" (itag 18).


Labels tagged by Device Targeting library (Lumos). See go/hgr-lumos-integration and go/lumos-feature-extraction for more details. Next ID: 2
*   isSelectedByLumos (type: boolean(), default: nil) - Indicate whether the device is selected by Lumos as the target device.





Semantic node for annotating semantic constructions in documents. A set of SemanticNode instances represents a directed acyclic graph with an adjacency list representation. Each node can optionally be connected to some existing type system, such as PropBank. Each node can optionally be connected to one or more concrete elements in a SAFT document, specifically, an entity mention, a measure and/or a token span (Phrase). Next available id: 23
*   arc (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftSemanticNodeArc.t), default: nil) - The arcs from this node. For example, if this node is the root of a subgraph representing a predicate-argument structure, this node will typically refer to the predicate, and there will typically be one arc per argument.
*   description (type: String.t, default: nil) - Human-readable description of the information in the subgraph represented by this node. This field is only meant for display purposes.
*   entity (type: integer(), default: nil) - The entity and mention fields specify a unique entity mention referred to by this semantic node.
*   implicit (type: boolean(), default: nil) - Indicates whether the semantic node is not explicit (grounded) in the text (e.g. pro-drop for a text author or an implicit predicate node for interpreting a compound noun), rather than any explicit phrase or text inside the document.
*   kind (type: String.t, default: nil) - Encodes the kind of this node and, possibly, the entire subgraph rooted at this node. For example, if this node represents a predicate-argument structure in PropBank, then this node's kind will be PROPBANK, its phrase field will be set to correspond to the span of tokens corresponding to the predicate (such as a verb) and it will have one arc per argument. If the kind is MONOTONIC this node corresponds to a semantic graph node, and arcs correspond to semantic graph edges outgoing from the node. If the kind field is not set, then this node is not directly connected to any type system. In such a case, this node may still optionally have a concrete "payload" in the form of references to an entity mention, measure or span of tokens (Phrase) in a SAFT document. The values or existence of the kind field need not be identical in any subgraph. For example, even if this node's kind field is not set, it may still be the destination node of an arc from some other node whose kind field is set.
*   measure (type: integer(), default: nil) - The index of the measure referred to by this semantic node.
*   phrase (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t, default: nil) - Phrase (span of text) for this node. This field does not need to be set, but if it is, this node has a textual "payload" corresponding to the specified token span. For example, if this node is the root of a subgraph corresponding to a predicate-argument structure, then the phrase field will be set to be the span of tokens corresponding to the predicate (e.g., a verb).
*   type (type: String.t, default: nil) - Arbitrary type string for this semantic node, or for the subgraph rooted at this node. This type string might come from an external resource, type system or ontology that contains a predefined set of types.
*   value (type: String.t, default: nil) - Arbitrary value string for this semantic node.


This message is defined to be a representation of events that could interact with datetimes expressions through composition by shifting or fetching. For "native" datetime events like sunset, sunrise, etc the type is enough, but this should be extended as needed to represent richer event information.

This is the log version of apps.people.oz.external.mergedpeopleapi. Phone proto. Next ID: 3
*   rawDeviceContactInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantLogsCommunicationRawDeviceContactInfoLog.t), default: nil) - This list provides account information from the raw contact which is the source of this field.
*   type (type: String.t, default: nil) - Label for phone number in the Contacts app. It can have standard values provided by the app e.g. MOBILE, HOME, WORK etc, but users are allowed to modify. So essentially it becomes user content.

Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:  A full date, with non-zero year, month, and day values.  A month and day, with a zero year (for example, an anniversary).  A year on its own, with a zero month and a zero day.  A year and month, with a zero day (for example, a credit card expiration date). Related types:  google.type. TimeOfDay  google.type.DateTime * google.protobuf.Timestamp
*   day (type: integer(), default: nil) - Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
*   month (type: integer(), default: nil) - Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
*   year (type: integer(), default: nil) - Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.




Signals associated with FreetextAnnotator annotations. Empty. The signal being present is enough for the conformance checking library to be able to check.

Metadata fields for LMS. See go/lms-online-restrictions for details.
*   modificationsAllowed (type: list(String.t), default: nil) - Int values corresponds to the values of image_repository.licensed.api.restrictions.Modification enum.

To tag which fetcher satisfied this fetch request with optional detail.
*   detail (type: String.t, default: nil) - Provides fetcher-specific detail about how source satisfied the request.
*   source (type: String.t, default: nil) - The fetcher that ultimately satisfied this fetch request.

Models a relationship between a feature and its entrance or exit.
*   featureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Feature ID of the related entrance. References should refer to TYPE_ENTRANCE or TYPE_COMPOUND features that are entrances or exits of the referencing feature.





This proto will be added as a field to part of a schema to indicate it is being remodeled.




Metadata related to KC attributes and Question & Answer triggering. Next available tag: 2.
*   equivalentAttributeId (type: String.t, default: nil) - Equivalent kc attribute id for the given entity if applicable. E.g. for Daughter (/m/029wnx) this will be 'kc:/people/person:daughter'.


TODO(b/169423976) Consider moving Branding out of user level settings into enterprise level settings. Partner branding fields used to customize the ui. Next ID: 7
*   displayNameForLanguage (type: map(), default: nil) - Brand display in the UI for languages that the enterprise has a localized name that is different from its global branding name. For example, Hilton is 'ヒルトン' in Japanese and '希爾頓' in Chinese. The keys are hospitality supported display locales, e.g. en, ja-JP, etc, defined in experiment parameter Hospitality__hospitality_display_supported_locales.


Represents a single host. Optionally, the MDB owner of the host can be specified.
*   hostOwner (type: String.t, default: nil) - If present, then any checks that compare this Principal to LOAS peer info must confirm the peer's machine owner is equal to 'host_owner'. If absent, then any peer machine owner is acceptable.

This message represents a source of shingles. Used by ShingleInfoPerDocData.
*   numShingles (type: integer(), default: nil) - Number of shingles originating from this source.

An experimental long snippet. The protocol allows any permutation of headers and plain text paragraphs, but typical responses are just paragraphs or alternating headers and paragraphs.

Hotel Type used by the hotels team to differentiate sub classes of accommodations. For any questions please contact hotel-search-quality@. Next ID: 48
*   other (type: boolean(), default: nil) - Any other lodging related type.







Information about a published version of the document. Not all references/documents will have this because some will be vendor and/or media neutral.
*   ArguedBefore (type: list(GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t), default: nil) - One entry per judge who listened to the case in this court
*   CertiorariCourtName (type: String.t, default: nil) - For an appeal, the name of the lower court that sent this up Abbreviation form? Verbose form?
*   CourtTerm (type: String.t, default: nil) - Usually the name of a month. Not sure really what it means.
*   DecidedDate (type: GoogleApi.ContentWarehouse.V1.Model.LegalDate.t, default: nil) - Various dates related to the generation of document most of these are opinion-centric
*   MemoID (type: String.t, default: nil) - Not sure what this is. But I've seen it.
*   Syllabus (type: String.t, default: nil) - A summary of the document or a syllabus for this document

Properties of the surface that are not hardware related or feature specific.
*   prefersGlanceableUi (type: boolean(), default: nil) - Indicates if the surface prefers glanceable UI when rendering Assistant response. (see go/mobile-dr-hbird-glanceable-comms-cuj for more context).
*   responseDisplayFormat (type: String.t, default: nil) - If this field is unset, the response format is unknown
*   supportsMultiResponse (type: boolean(), default: nil) - If true, the client supports receiving multiple responses. See go/multiple-response-in-media-use-cases for more details.

ClientServiceInfo is meant for trawler/harpoon clients which are in turn services to store some data specific to their clients. E.g., Kodachrome may serve multiple other clients. In this case they can store their client name here. Webmirror may also store the feed name here even though a feed is technically not a service client. ClientServiceInfo is in nature similar to ClientInfo, except it's stored in FetchReplyData (i.e., trawler logs), whereas ClientInfo is copied to FetchReply (outside FetchReplyData), thus it's not stored in trawler logs.
*   DelegatedProjectName (type: String.t, default: nil) - Project delegation name to support bandwidth enforcement. Harpoon will call SetDelegatedUser() with the specified DelegatedProjectName and a domain associated with the RequestorID provided in the client capatibility file.

The configuration of exporting documents from the Document Warehouse to CDW pipeline.
*   docAiDataset (type: String.t, default: nil) - Optional. The CDW dataset resource name. This field is optional. If not set, the documents will be exported to Cloud Storage only. Format: projects/{project}/locations/{location}/processors/{processor}/dataset
*   documents (type: list(String.t), default: nil) - The list of all the resource names of the documents to be processed. Format: projects/{project_number}/locations/{location}/documents/{document_id}.
*   exportFolderPath (type: String.t, default: nil) - The Cloud Storage folder path used to store the exported documents before being sent to CDW. Format: gs:///.
*   trainingSplitRatio (type: number(), default: nil) - Ratio of training dataset split. When importing into Document AI Workbench, documents will be automatically split into training and test split category with the specified ratio. This field is required if doc_ai_dataset is set.

Each SupportTransferRule proto represents a single STBR (go/stbr) rule. These rules are attached to entities (called STBR sources). Each rule attached to an STBR source talks about a single entity (called STBR target). If an STBR source gets annotated, its attached rules result in creation of annotations for corresponding STBR targets. An STBR source might have more than one STBR rule attached to it. STBR rules allow us to address cases where otherwise annotations for what people say do not match what people mean. For example, a query [france vs spain] uses names of countries while in sports context the query would actually be about national sports teams of those countries. In other words, STBR rules have meaning of "in this particular context (see domain + target_collection fields below) a mention of this particular STBR source (the entity this rule is attached to) actually should be treated as that STBR target (see the target field below)". To describe the meaning of STBR settings (proto fields below), we are going to use a hypothetical example of an STBR rule making Search stack treat annotations for /m/France as annotations for /m/Louis_XIV, since he was the one saying "I am the state". In this example /m/France is going to be the STBR source. NOTICE: When adding new fields also update client::support_transfer::SortDeterministically to ensure deterministic sorting of the SupportTransferRule objects. Next available tag: 11. LINT. IfChange
*   allowWildcardIntents (type: boolean(), default: nil) - If set to true, allow STBR targets to trigger intents like ShowEntity that do not have explicit lists of allowed collections, accepting entities with any collections instead. This setting together with target_collection define what intents are allowed to be triggered by the STBR target. Be careful with setting this option to 'true', as in the case of our example the query [france] would result in the knowledge panel for the monarch. Louis XIV might've wanted such a behaviour, but you are probably not him.
*   domain (type: String.t, default: nil) - Name of Aqua grammar domain this STBR rule is restricted to. If the domain is set to anything other than "default", the STBR rule is only going to result in an annotation for the STBR target inside of the Aqua domain of the corresponding name. If there is no such Aqua domain, the rule is going to be ignored. The default value of string "default" for domain makes it possible for the STBR rule to be used inside Loose Parser.
*   isReverseLink (type: boolean(), default: nil) - Whether this rule points from an STBR target to its STBR source. This field is an internal implementation detail that is not configurable by customers. Inside QRewrite we have to keep track of relations between entities. Among other things it is useful to remember which STBR target a given STBR source came from. For that purpose we attach an STBR proto to the STBR target, reversing the rule, i.e, putting STBR source's mid as the target etc. For this reversed rule we set is_reverse_link to true.
*   mentionsOnly (type: boolean(), default: nil) - STBR doesn't just create annotations for STBR targets. It also can modify search result support (useful in PostRef) in order for web pages supporting the STBR source to also support the STBR target. Otherwise in PostRef annotations for STBR targets are going to be demoted, resulting in the STBR rule potentially not affecting anything. Regarding treatment of this result support, STBR has 3 possible modes that for historical reasons are represented as 2 booleans - mentions_only and support_share. No more than one of these bools is supposed to be set to 'true' for a rule. Setting both to 'true' at once would lead to undefined behaviour. These 3 modes are: 1. (default) All the support gets assigned to the STBR target. The STBR source is left with no support. To be extra sure, interpretations that still managed to get triggered by STBR source are suppressed later unless STBR target has no interpretations of its own. In other words this is "we are pretty sure that if France is mentioned in a query that might be talking about a person, we want to treat the query as if it is about Louis XIV". This mode would result in a query [age of france] being treated as [age of louis xiv], while [population of france] still being about the country unless [population of louis xiv] matches some intents. For this mode both mentions_only and support_share should be set to 'false'. 2. Support is shared between STBR source ans STBR target. That allows both STBR source and STBR target to trigger some intents with KScorer later deciding which intent is better. In other words, this is "when it is not clear whether a query is about France of Louis XIV, provide KScorer with both options and let it decide". For this mode mentions_only should be set to 'false' and support_share should be set to 'true'. 3. While annotations for the STBR target are created, no support is given to those annotations. This is more like "we are mostly sure that a mention of France is about the country, but just for a rare case it is about the monarch, we would like to have Louis XIV annotated". For this mode mentions_only should be set to 'true' and support_share should be set to 'false'.
*   target (type: String.t, default: nil) - Mid of the STBR target, e.g. "/m/04pwg" for Louis XIV.
*   targetCollection (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefKGCollection.t, default: nil) - Collection that is going to be assigned to the target when the annotation for the target is created. This setting together with allow_wildcard_intents define what intents are allowed to be triggered by the STBR target. At the moment those annotations get created, we can not afford to fetch information about the STBR target from Topic Server, but the target mid by itself doesn't mean much for the Search stack. Setting up the collection for that annotated mid allows us to provide at least some information to the stack on how to treat the mid. This collection together with domain and allow_wildcard_intents fields (see below) defines what intents can be triggered by annotations created for this STBR target. Intents that accept only entities of specific collections can only be triggered if the value of this field matches one of the allowed collections for that intent. In our example, KGCollection.debug_id might be "/collection/people" if we care about context of the monarch as a person, e.g. if we would like to understand queries like [how many children does france have] as [how many childred does lous xiv have]. Or, if we would like to be more restrictive and to only apply the rule to contexts that only make sense for monarch, e.g. [how long did france reign], we might decide to use more specific "/collection/monarchs" instead.
*   userCountry (type: String.t, default: nil) - The user country this rule is for. Rules only take effect if the country is not set, set to an empty string or matches the country that is detected for the user - like the country user issued the query from. E.g. "US" for the United States.
*   userLanguage (type: String.t, default: nil) - User language this rule is for. Rules only take effect if the language is not set, set to an empty string or matches the language that is detected for the user's query. E.g. set it to "en" if you want the STBR rule to only work for users working from computers with English being set as the main language. Keep it unset if you want the rule not to depend on local language settings of user's computer.

A RawGConceptInstanceProto contains all data required by both internal and external clients. We store the 'public' data in a GConceptInstanceProto and the 'private' data inside of RawGConceptInstanceProto. NOTE: this doesn't really match the design we want anymore. Please talk to the Geo Schema team if you are planning to make use of the "private" fields below.
*   instance (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreGConceptInstanceProto.t, default: nil) - This is the 'public' section of the GConceptInstance.
*   isAddedByEdit (type: boolean(), default: nil) -  DEPRECATED  Was this GConcept explicitly added by an edit? Examples of gconcepts not added by edits include those inferred through geo ontology and those mapped from legacy category forms by the feature updater. Note that it is possible for both is_added_by_edit and is_inferred to be true - it means this gconcept is added by an edit and there is also another more fine-grained gconcept added by an edit.
*   provider (type: String.t, default: nil) -  DEPRECATED  These two fields combined describe the source of a GConceptInstance. They are based on geostore/base/proto/datasourceprovider.proto. Their use has been deprecated. Use the FieldMetadataProto inside instance instead.










A SpecialRestriction is a standardized UserRestriction which lives in a table maintained via CDD.


Stores an ordered list of ranges of content from the original, processed, and intermediate content, such that: 1. The original content can be reconstructed from the ranges of type ORIGINAL_AND_PROCESSED, ORIGINAL_ONLY, and ORIGINAL_AND_INTERMEDIATE. 2. The processed content can be reconstructed from the ranges of type ORIGINAL_AND_PROCESSED and PROCESSED_ONLY. 3. The intermediate content (if present) can be reconstructed from the ranges of type ORIGINAL_AND_INTERMEDIATE and INTERMEDIATE_ONLY.
*   sourceType (type: String.t, default: nil) - The source of this range of content. Present iff 'type' is PROCESSED_ONLY or INTERMEDIATE_ONLY. Note: 'source_type' is not present for ORIGINAL_AND_PROCESSED, ORIGINAL_ONLY, and ORIGINAL_AND_INTERMEDIATE because for those range types the source of their content is the original crawled content.
*   sourceUrl (type: String.t, default: nil) - The source URL of this range of content. Present iff 'source_type' is present and 'source_type' is FRAME or FLASH or IFRAME.
*   text (type: String.t, default: nil) - The content of the range, compressed with 'text_compression_method'. Present iff 'type' is ORIGINAL_ONLY or ORIGINAL_AND_INTERMEDIATE or INTERMEDIATE_ONLY. Useful to reconstruct the original content or the intermediate content. Note: 'text' is not present for ORIGINAL_AND_PROCESSED and PROCESSED_ONLY because the processed content is already stored separately (in the contents column, and in CompositeDoc.doc.Content.Representation).
*   textCompressionMethod (type: String.t, default: nil) - Method used to compress the 'text' field. May be present only when the 'text' is present.

Features generated by Device Targeting library (Lumos). See go/hgr-lumos-integration and go/lumos-feature-extraction for more details. Next ID: 3

Defines a set of restrictions on particular device features for a certain set of users. Design: go/home-ft-settings-storage PRD: go/home-family-tools-prd
*   enabled (type: boolean(), default: nil) - Enables/disables all the filters at the same time. For new devices or non-Cast devices this is always false.
*   featureFilters (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsFeatureFilters.t, default: nil) - The filters (feature restrictions) to apply when enabled is true.
*   targets (type: list(String.t), default: nil) - The set of users of this device that will have these settings applied. Must have at least one element.

A rule that defines a Cluster based on a relation. Given a relation (a link type) R, then: For each entity B that has incoming links of type R This defines an instance of this rule, with argument=B We create a Set S We make B a child of S For each entity A that has a link R to B, we make A a child of S Next available tag: 6
*   relation (type: String.t, default: nil) - The topic_property_name for the link that defines the relation, e.g. "/tv/tv_series_episode/series". Can start with a "!" to indicate that this link is reversed during extraction and we want the reversed case. Required.

For detailed info, please see go/naive-image-selection
*   webRelevanceScore (type: float(), default: nil) - score calculated in image selection phase, higher imagelink_selection_score more relevant the link is related to the web page

Category that this app falls into.





A message encapsulating all "/collection/personal_memory" annotations from QRef annotator. These annotations are present in personal_summary_node_child proto field of input QRefAnnotation proto. NEXT ID TO USE: 5
*   freebaseMid (type: String.t, default: nil) - The mid of the entity in freebase associated with this span.
*   personalEntityChild (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryPersonalEntity.t), default: nil) - Every PersonalEntity might itself rescursively contain related Personal Entities, e.g. for, "my father's mother" a parent Personal Entity for 'Mother()' contains a child Personal Entity of the form 'Mother(Myself)'.


Additional information returned to client, such as debugging information.
*   requestId (type: String.t, default: nil) - A unique id associated with this call. This id is logged for tracking purpose.

Custom opaque type used by actions-on-google in-dialog queries. See go/3p-custom-intents-wrt-meaning-catalog




LINT. IfChange Specifies identifier of a device AKA surface. Note there may be multiple device ids for the same physical device E.g. Allo app and Assistant app on Nexus. Note: DeviceId usage is complicated. Please do not depend on it for surface specific logic. Please use google3/assistant/api/capabilities.proto instead. IMPORTANT: When checking for equality between two DeviceIds, you should always use an isSameDevice{As} function to check for equality, as deep equality between DeviceId's is not guaranteed.  C++: http://google3/assistant/assistant_server/util/device_id_util.cc;l=23;rcl=421295740  Dart: http://google3/assistant/context/util/lib/device_id.dart;l=26;rcl=442126145 * Java: http://google3/java/com/google/assistant/assistantserver/utils/DeviceIdHelper.java;l=9;rcl=390378522 See http://go/deviceid-equality for more details. IMPORTANT: The definition of DeviceId proto is being moved to //assistant/api/core_types/device_type.proto. All existing references will be updated to point to the new location. If you are adding a reference, use the new one instead. Next ID: 14
*   agsaClientInstanceId (type: String.t, default: nil) - The client_instance_id on devices with GSA. See 'client_instance_field' in go/androidids.
*   alloDeviceId (type: String.t, default: nil) - Allo Id. Corresponds to the GBotRequest.Sender.sender. NOTE(dychen): This may change to standard android/ios physical device ids in order to enable shared data (e.g. installed app on physical device shared between Allo and Opa apps on Nexus).
*   canonicalDeviceId (type: String.t, default: nil) - A unique device ID for Assistant devices as proposed by go/ocelot-team to solve the device id fragmentation problem. The value of this id is the HomeGraph id of the device. See go/ocelot-track-0-registry-design. New surfaces should use the canonical_device_id instead of using other ids, and the registration should utilize the DeviceDataLayer (go/ddl-v0). Please contact the assistant-state-management@ team for guidance. Note: We didn't reuse |home_graph_device_id| because in Assistant code base |home_graph_device_id| is common to associate it with 3P devices. See go/project-yellowstone for more context.
*   castDeviceId (type: String.t, default: nil) - If set, indicates that the device is a cast device, and contains the UUID of the cast device. Corresponds to the device_id field of the CastDevice proto.
*   clientInstanceId (type: String.t, default: nil) - DUSI (go/dusi) is used as the identifier here. This identifier is unique to the user and device. This will help identify which device or application the user's request originated from. This is not to be confused with the client_instance_id that android devices provide. This is currently used by surfaces that use the assistant-legacy-nexus and assistant-legacy-clockwork pipelines. DUSI is created and set in S3. This field is only filled for GAIA requests.
*   connectedDockId (type: String.t, default: nil) - A device ID produced by a connected dock, which is registered in HomeGraph.
*   deviceConfig (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedDeviceConfig.t, default: nil) - The unique DeviceConfig to the specific third party device. It is also used by Android Auto Embedded first party device. See go/opa-ids.
*   deviceType (type: String.t, default: nil) - DEPRECATED. assistant.api.core_types.governed.SurfaceIdentity.surface_type field should be used instead. The device's surface type. This is the string version of surface_type. The server should use the SurfaceType value derived from this string. If the device_type isn't supported within the SurfaceType enum, it will be set as UNKNOWN. Developers should use the enum in ServerParams instead of this string. WARNING: Clients are not actually setting this field. This field will be removed once references to it within the code base have been removed.
*   homeGraphDeviceId (type: String.t, default: nil) - The unique device ID for HomeGraph devices. This is the HomeGraph ID, created when the device is registered into HomeGraph. It is immutable for the same device unless it is completely deleted and recreated. See go/home-graph for details.
*   libassistantDeviceId (type: String.t, default: nil) - The unique ID for libassistant based devices. See go/libassistant-id for details.
*   multiHotwordArbitrationDeviceId (type: String.t, default: nil) - If set, indicates that the device is participating the multi-hotword arbitration and the id is an UUID to distinguish it from other devices. It should also be consistent between requests from a single device within a session (or short duration).
*   opaIosDeviceId (type: String.t, default: nil) - The unique device ID for the Assistant App on iOS. See go/opa-ios-design for details.
*   quartzDeviceId (type: String.t, default: nil) - The unique ID of a Quartz device. See go/quartz-design-doc for more details. Quartz ID is a hash of (android_id + gaia).

Extension data for use in Youtube Product Profile.
*   channelData (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiChannelData.t), default: nil) - Information about a channel created by the user. A user can create multiple Youtube channels.
*   failure (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure.t, default: nil) - Failure type if there is an error when fetching product profile data.

The serving cluster id metadata. Why we cluster the documents. The default value is UNKNOWN. Serving-Side Clustering is used for pages which represent the same content but are not identical (e.g. translated pages, or paginated content). Those documents are not dup-clustered in Alexandria so that all documents (and their tokens) are available to search queries. However, those documents are assigned the same Serving-Time-Cluster-ID (on the same reasontype), which during serving guarantees that only one of them is shown to the user.
*   clusterId (type: String.t, default: nil) - The unique id to distinguish members in cluster. It could be generated in different ways according to reason, e.g. LINK_REL_NEXT_PREVIOUS: it is the fingerprint of the URL of index 0; PAGE_PARAMETER_INFO: it is the fingerprint of pagination pattern (pagination_pattern_fp field in PageParamInfo message).
*   indexForDebugging (type: integer(), default: nil) - The member index of this document in cluster. Starts from "0". Note that indices of pages in a cluster may not be consistent with each other, because we may update them at different points in time. Currently only used for debugging.
*   reason (type: String.t, default: nil) - The reason why this document is clustered into this cluster.

How a volume may be viewed in a particular locale. Next available ID: 25 (ikkwong)
*   accessRights (type: GoogleApi.ContentWarehouse.V1.Model.OceanVolumeAccessRights.t, default: nil) - These capture "commercial" contract related access rights provided by partners for a volume.
*   allowAddingFrontmatterToPreview (type: boolean(), default: nil) - Are we allowed to add all the front matter to the preview in addition to the preview amount that is from percent_book_shown? This means the front matter becomes freely previewable and does not count towards the previewable amount based on the percentage.
*   allowContinuousBrowse (type: boolean(), default: nil) - By default, we allow continuous browse. PFE provides a means for partners to opt out entirely or just specific books.
*   allowRetailSyndication (type: boolean(), default: nil) - whether OFE should display this volume in syndicated search results
*   bibkey (type: String.t, default: nil) - The bibkey upon which this viewability information is based.
*   canDisplayAds (type: boolean(), default: nil) - Whether we can show ads with this book in this locale.
*   canDownloadEpub (type: boolean(), default: nil) - In future, we will generate epub iff can_download_epub = true irrespective of viewability or download pdf state.
*   canDownloadPdf (type: boolean(), default: nil) - In future, we will generate PDF iff can_download_pdf = true irrespective of viewability.
*   canShowLibraryLinks (type: boolean(), default: nil) - Whether to show library links for the books in this imprint.
*   canShowPhotos (type: boolean(), default: nil) - Whether we can show photos for this book in this locale.
*   canUseMetadataCover (type: boolean(), default: nil) - It should be OK to use metadata covers normally, but we allow publishers to explicitly disallow them.
*   clientId (type: String.t, default: nil) - The client who provided the rights for this bibkey, and who should receive revenue derived from this book in this locale. This will only be present when we receive explicit rights from a publisher.
*   computedAccessRights (type: GoogleApi.ContentWarehouse.V1.Model.OceanVolumeComputedAccessRights.t, default: nil) - Volume related access rights that are computed by Goovols Syncher from partner and book metadata. This complements VolumeAccessRights. This message is used to capture "commerical" contracts that are computed from other sources. Any future computed rights that are not related to volume access should go into a new message.
*   displayDetails (type: GoogleApi.ContentWarehouse.V1.Model.OceanVolumeDisplayDetails.t, default: nil) - Volume display specific attributes are kept in display_details
*   metadataViewMayIncludeInfoFromScans (type: boolean(), default: nil) - This only applies when view_type == VIEW_METADATA and controls whether we're allowed to include scanned info (keywords, toc, etc). in the metadata-view. For books in metadata view because they have been opted out, this would be false.
*   metadataViewSampleAllowed (type: boolean(), default: nil) - This only applies when view_type == VIEW_METADATA and controls whether we're allowed to include a text sample even for a metadata view book.
*   percentBookShown (type: integer(), default: nil) - How much of the book can be viewed in this locale. Will be 100 for VIEWFULL; 0 for VIEW_SNIPPET, VIEW_NONE and VIEW_METADATA; and some value between 0 and 100 (exclusive) for VIEW_PARTIAL.
*   publicDomain (type: boolean(), default: nil) - If present, this is the rights policy's determination of the public domain status. (Of course, this determination is generally conservative (i.e. false negatives are likely), though exactly how conservative may depend on parameters to the rights policy.) If absent, public domain status can be inferred from view_type and view_reason, but that isn't quite perfectly reliable: view_type should always be VIEW_FULL for public domain, but view_reason might be REASON_PUBLIC_DOMAIN (definitely public domain, obviously), some other value, or absent. In the future, new viewabilities should always have this field whenever possible.
*   viewReason (type: String.t, default: nil) - The reason for the view_type.
*   viewType (type: String.t, default: nil) - The viewability specified for this locale.




This variant defines the frame to be the first frame of the video's generated preview.
*   xtagList (type: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiXtagList.t, default: nil) - All xtags used in the generation of the preview. The same frame generated from the same preview with different xtags will likely have different bytes (such as, for example, resulting from a different aspect ratio).


Deprecated in b/122464133. No data returned for this field.
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.

Used when the field is accessible to a membership that the person has.




This proto is filled with n-gram data during model building.
*   pluralProb (type: number(), default: nil) - Probability that the n-gram is a plural form of a word. This information is extracted from SAFT annotations of queries. See HasPluralProperty().

Annotators whose semantics are represented via a protocol message should add to that message a field or extension of this type and set it using Annotator::PopulateAnnotationEvalData to enable span-based evaluation metrics in training. Evaluation is done based on token spans. The byte span aligns with the token span and is used when saving examples. Background: In some settings, the examples used to induce/train a grammar do not specify complete semantics of an annotation. For example, some examples that come from Ewok specify only the span associated with each annotation. This message allows evaluation metrics to test the span by embedding it in the semantics. LINT. IfChange
*   additionalSpans (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t), default: nil) - Additional spans after the first. Empty in all additional_spans.
*   startByte (type: integer(), default: nil) - Byte position within the utterance. Safe to use across different components of the NLU stack as long as said components have access to the same query.
*   startToken (type: integer(), default: nil) - Token position. This is cleared when normalizing examples for storage because tokenization changes over time. DO NOT use these two fields across components that use different tokenizations.

A message representing an intent to use for intent scoring if the root intent is invalid.
*   intent (type: String.t, default: nil) - The intent name of the fallback intent.


Information about a category annotation on a name.
*   mid (type: String.t, default: nil) - The mid of the entity representing the category.





Pattern for a WEEKLY recurrence. You must specify at least one week_day.
*   weekDay (type: list(String.t), default: nil) - Set of weekdays the recurrence applies to.

Describes ingredient level settings. Clients are authoritative in defining Settings. See go/venom-trustme for how Settings and ProcessingCharacteristics work together. If your Settings extension contains PII fields, please 1) Annotate them appropriately with DataPol, and 2) Add your BUILD target to google3/video/assets/venom/proto/settings/BUILD:pii See google3/video/assets/venom/proto/settings/ for extension messages.

Information about a rating provided for a product. This can represent an aggregated rating if count is set. Next Id: 7
*   count (type: String.t, default: nil) - Number of ratings/reviews aggregated to create this product rating. If there are no ratings yet, this field will be explicitly set to zero, so whether this field is set should be checked using has_count.
*   minValueMillis (type: String.t, default: nil) - The lower and upper bounds of the rating values that could be submitted for the product. (Note that it is not the min/max ratings submitted for the product, it is the min/max that can hypothetically be submitted.)
*   value (type: float(), default: nil) - The value of this rating normalized between 0 and 5. This will not be set if count is set to 0.
*   valueMillis (type: String.t, default: nil) - The non-normalized aggregated value of the ratings for this product.

////////////////////////////////////////////////////////////////////////////// RestrictDefinition: the set of conjunctions and disjunctions that define a single OR-of-ANDs-of-ORs restrict definition.
*   conjunctions (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamConjunction.t), default: nil) - conjunctions - each conjunction is an AND-of-ORs; if any of these conjunctions match, then the entire restrict matches.
*   disjunctions (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamDisjunction.t), default: nil) - disjunctions - each disjunction is an OR clause.
*   subsKey (type: String.t, default: nil) - subs_key - ignore. Only used for testing.




The App annotator annotates potential app name in the parser's input and outputs the proto with the details about app(s).
*   appInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfo.t), default: nil) - The app_info is to store specific information about installed/uninstalled apps annotated by app annotator servlet. It contains app name, package name, confidence, and source.

Prediction of a style image type: Stage, Stock, Street or Outfits. Check http://go/styleai-indexing-g3doc#style-image-type-classifier for more details about the Style AI Style Image Type Classifier.

Signals to be used by the Prefulfillment Ranker. Derived from the ParsingSignals and GroundingSignals carried by the FunctionCall. LINT. IfChange Next ID: 69
generatedByLegacyAquaDomain (type: boolean(), default: nil) - Whether or not the intent was generated by a legacy Aqua domain that PFR should care about.  isTvmIntent (type: boolean(), default: nil) - Whether the intent is a media object tvm intent.  numConstraintsSatisfied (type: float(), default: nil) - Sum of the number of constraints satisfied for each variable. Depending on the match score for a constraint, this number can be fractional and is in the range [0, num_constraints]. Populated by the Grounding Box.  isFeasible (type: boolean(), default: nil) - Feasibility of fulfilling the binding set. Eg: For PlayMedia, this is equivalent to playability. More details: go/hgr-feasibility-feature.  rankerName (type: String.t, default: nil) - Used in HGR to modify the ranker based on input experimental flag and intent name.  verticalConfidenceScore (type: number(), default: nil) - Horizontal feature that stores information about confidence scores for each resolution within the binding set.  numGroundedArgs (type: float(), default: nil) - Number of grounded arguments the intent has, populated by the Grounding Box.  isValidSmarthomeIntent (type: boolean(), default: nil) - Whether the intent is a Smarthome-domain intent with valid device arguments.  maxHgrScoreAcrossBindingSets (type: float(), default: nil) - The maximum score assigned by the Horizontal Grounding Ranker (HGR) across all of the intent's binding sets.  groundingProviderFeatures (type: GoogleApi.ContentWarehouse.V1.Model.AssistantGroundingRankerGroundingProviderFeatures.t, default: nil) - Grounding Provider related ranking features, including general Grounding Provider ranking features(shared among multiple GPs) and specific Grounding Provider ranking features(provided by a specific GP).  isNspIntent (type: boolean(), default: nil) - Whether this interpretation was genearted by NSP.  kscorerRank (type: integer(), default: nil) - The rank order of the interpretation as determined by kscorer. The kscorer-determined dominant interpretation, if any, gets a rank of 0. The remaining N interpretations get a rank of 1 through N.  nspRank (type: integer(), default: nil) - Rank of the intent as reported by NSP.  isSageIntent (type: boolean(), default: nil) - Whether this intent was generated by Sage.  numGroundableArgs (type: float(), default: nil) - Number of groundable arguments the intent has, populated by the Grounding Box.  isPlayGenericMusic (type: boolean(), default: nil) - Whether the intent is a PlayGenericMusic-type intent.  intentName (type: String.t, default: nil) - intent_name is used by PFR ensemble model. See go/pfr_ha_launch_doc  bindingSetInvalidReason (type: String.t, default: nil) - BindingSet level invalid reason. This is only useful when the bindingset is invalid after running the horizontal check in HGR. More details: go/gb-infeasible.  isFullyGrounded (type: boolean(), default: nil) - Whether the intent is fully grounded.  usesGroundingBox (type: boolean(), default: nil) - Whether the interpretation should run through grounding box or not.  deepMediaDominant (type: boolean(), default: nil) - Whether the intent is dominant according to NSP deep-media.  isHighConfidencePodcastIntent (type: boolean(), default: nil) - Used for PFR manual rule to prefer high confidence podcast intent (e.g. topical, genre) over generic podcast intents.  intentNameAuisScore (type: float(), default: nil) - QUS intent-based ranking signals. Assistant User Interaction Score which is aggregated using intent name.  platinumSource (type: boolean(), default: nil) - Whether the intent comes from the Sage IntentGenerator's "platinum" source, signifying high-confidence in quality.  numConstraints (type: float(), default: nil) - Sum of the number of constraints used by the Grounding Box to ground each variable.  searchDispatch (type: String.t, default: nil) - The determination made by the SearchDispatchingConfig as to whether and how this interpretation should be dispatched to Search.  isScoreBasedIntent (type: boolean(), default: nil) - Whether this intent is a score-based intent, relying on PFR for scoring and pruning to the top intent.  fulfillableDominantMedia (type: boolean(), default: nil) - Whether this is a fulfillable, dominant Media intent.  isPodcastIntent (type: boolean(), default: nil) - Whether the intent is a podcast intent.  intentType (type: String.t, default: nil) - intent_type differentiates between intents that share the top level intent name. For eg: for TV_FALLBACK_SEARCH_INTENT, the top level intent name must be "Find_media" and the media_object argument within it must be of type "Media_unspecified".  numVariables (type: float(), default: nil) - Signals as proposed in go/improved-grounding-signals. Number of arguments, possibly nested, that the Grounding Box tried to ground.  isPodcastGenericIntent (type: boolean(), default: nil) - Used for PFR manual rule to prefer high confidence podcast intent (e.g. topical, genre) over generic podcast intents.  topHypothesisConfidence (type: number(), default: nil) - Average of per-word confidence for top speech recognition hypothesis. The value is from RecognizerHypothesisLog: http://google3/logs/proto/speech/service/recognizer_log.proto?l=848&rcl=281400256  isVideoIntent (type: boolean(), default: nil) - Whether the intent is a media object video intent.  pq2tVsAssistantIbstCosine (type: float(), default: nil) - Cosine similarity between predicted query-to-term model and assistant intent-type-based salient terms. This is intended to be only used for ACE ranking and only populated for assistant traffic.  groundabilityScore (type: float(), default: nil) - Grounding Signals. Score indicating how grounded the intent is, populated by the Grounding Box.  phase (type: String.t, default: nil) - Query understanding phase the intent was produced in.  hasAnswerGroup (type: boolean(), default: nil) - Whether the interpretation has a Search answer group object, signifying it came from Search resolution.  smarthomeIntentMetadata (type: GoogleApi.ContentWarehouse.V1.Model.AssistantPfrSmartHomeIntentMetadata.t, default: nil) - SmartHome intent metadata used for the SmartHome business-rules twiddler.  maskCandidateLevelFeatures (type: boolean(), default: nil) - This feature is always false / no-op in serving time. In training time, this feature may be set true on specific examples for weighted training where when this signal is true, only cross-intent level features are used for training and other candidate level features are masked (set as missing).  numVariablesGrounded (type: float(), default: nil) - Number of arguments, possibly nested, that the Grounding Box was able to ground. This includes ambiguously grounded arguments.  inQueryMaxEffectiveArgSpanLength (type: number(), default: nil) - This is a cross-intent feature which is calculated by iterating all intent candidates. This feature should be populated in post-IG stage (before GB).  intentNameAuisScoreExp (type: float(), default: nil) - Assistant User Interaction Score which is aggregated using intent name from exp laelaps.  isSageDisabledIntent (type: boolean(), default: nil) - Whether the intent is an intent marked disabled by the Sage IG.  isSageInNageIntent (type: boolean(), default: nil) - Whether the intent is produced by the Sage IntentGenerator invoked by the NSP intent-generator (thus, Sage-in-NSP-invoking_Sage, or Sage-in-Nage).  calibratedParsingScore (type: float(), default: nil) - A parsing score that is independently calibrated by each parser/IG.  bindingSetValidity (type: String.t, default: nil) - BindingSet level validity. When one of the GPs returns invalid resolution, or the combined bindingset is invalid, this enum will indidate the validity. More details: go/gb-infeasible.  pq2tVsIbstCosine (type: float(), default: nil) - Cosine similarity between predicted query-to-term model and intent-type-based salient terms. This is intended to be used as a backoff to pq2t_vs_qibst_cosine if it is missing.  parsingScoreMse8BucketId (type: integer(), default: nil) - A ID corresponding to which bucket a given parsing score belongs in.  isMediaControlIntent (type: boolean(), default: nil) - Whether the intent is a media control intent.  effectiveArgSpanLength (type: number(), default: nil) - The total effective length of the spans for the arguments used to construct the parse. May include vertical specific adjustments. Eg: For the query [delete my 7 p.m. alarm called chicken] and intent Delete_alarm(alarm_object=RD(category=AlarmObject( label="chicken", trigger_time_datetime=<< 7 PM >>))), the effective argument span is "7 p.m." + "chicken" (total length of 13).

Metadata keeper for an annotated range of a segment. Next available tag: 3.
*   beginOffset (type: integer(), default: nil) - Start index of range (within the segment) being annotated.
*   tokenCount (type: integer(), default: nil) - Number of tokens in the range being annotated.

Represents the action responsible for adding document under a folder.
*   folders (type: list(String.t), default: nil) - Names of the folder under which new document is to be added. Format: projects/{project_number}/locations/{location}/documents/{document_id}.


Container information for deduping. When two fields have the same value and only differ by field.metadata a service implementation can choose to avoid duplicating the fields and instead set field.metadata.other_deduped_containers This type can include information on the dedupe type (for example, strict value match vs. lenient value match)

Represents the result of executing an action.

Identifies a coreference mention (pronoun or nominal) resolved to an entity.
*   category (type: String.t, default: nil) - Categories can be either a $PronounMention or $NominalMention.
*   rawText (type: String.t, default: nil) - The substring of the raw query spanned by this annotation.
*   referentText (type: String.t, default: nil) - The name of the entity this mentions refers to.

Features for queries generated using document navboost data with timed anchors.
*   anchorText (type: String.t, default: nil) - The anchor text used in the generated query.
*   navboostText (type: String.t, default: nil) - The navboost query used in the generated query.
*   source (type: String.t, default: nil) - How the navboost-anchor query was constructed.


Image content based multipliers. Current usage is in the pamir_section.

All the substring that were matched for the given query against the current field. Represents a substring of another string.
*   endIndex (type: integer(), default: nil) - Index right after the last character that matches the query. length = end-start, we have substring = [start, end).
*   startIndex (type: integer(), default: nil) - Index of the first unicode character that matches the query.

Data representing a comment moderated restriction. A moderated comment is hidden from all viewers except for comment author. A comment can be moderated due to multiple moderated restrictions from multiple issuers. Each is represented by a CommentModeratedRestriction entry which is uniquely identified by the external comment id and the create time in the storage. Conceptually, there should be exactly one moderated restriction for a specific reason per issuer per reviewable value and this constraint will be enforced in the Comment API endpoints. For more context see go/yt-comment-restriction-data-model ## Next id: 11. ## Spanner primary key attributes
*   autoModEnforcements (type: list(GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement.t), default: nil) - Live chat auto moderation only. The HOLD decisions and whether they are enforced correspondingly.
*   createTime (type: DateTime.t, default: nil) - Required. The creation time of this restriction.
*   externalCommentId (type: String.t, default: nil) - Required. The external ID of the comment that this restriction described.
*   issuer (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsApiCommentRestrictionIssuer.t, default: nil) - Required. The system who moderated the comment. For CommentModeratedRestriction all issuer enums apply."Issuer" is different from the grouping for permission check, which will be enforced via Boq Scaffolding RpcSecurityPolicy.
*   reason (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsApiCommentRestrictionReason.t, default: nil) - Required. The specific restriction reason why the comment is moderated. When Automod issues multiple HOLD decisions for a chat message, they always share the same reason.
*   reviewable (type: boolean(), default: nil) - True if moderation comes from T&S, Automod, and some of channel owner settings and comments will be put into "Held For Review" queue for channel owner review. After any creator review, this restriction will remain in this status to capture the original restriction. True maps to ModerationState=HOLD in Stanza. False if moderation results from channel owner manual opertation or author in hidden user list, and maps to ModerationState=REJECTED in Stanza.
*   status (type: String.t, default: nil) - Required. For moderated restriction on comment and live chat but not issued by Automod, the field should be always set to ACTIVE. For Automod moderation on live chat, the restriction is active as long as one of the HOLD decisions is enforced. Can only be changed by upcoming QPS threshold configuration changes and backfills.
*   updateTime (type: DateTime.t, default: nil) - The timestamp when this restriction is updated.


Message containing information about the localized URL linked to from this document in a localized-variation-context.

This describes the alarm sound resource enum and the alarm sound label for the on device alarm sound. On-device ringtones are product specific, hence Opal/UI layer will be responsible for populating this metadata at creation/edit. The enum map will be used to convert to an internal resource id used by libassistant for accessing the asset which are not exposed to UI.
*   onDeviceAlarmSound (type: String.t, default: nil) - Opal/UI layer will set this bit based on the user selection.
*   onDeviceAlarmSoundLabel (type: String.t, default: nil) - A string label to identify the alarm sound name. Opal/UI layer will set this as per product definition. This will be used to display the name of the selected ringtone.
*   ttsServiceRequestBytes (type: String.t, default: nil) - This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular dependency issue in libassistant protos. It is a serialized proto of type speech.s3.TtsServiceRequest. This request will contain an ssml with the url to the ringtone files hosted on gstatic.


Represents the action responsible for remove a document from a specific folder.
*   condition (type: String.t, default: nil) - Condition of the action to be executed.
*   folder (type: String.t, default: nil) - Name of the folder under which new document is to be added. Format: projects/{project_number}/locations/{location}/documents/{document_id}.


Metadata about MDVC (go/mdvc). Next available tag: 18.
*   dimension (type: list(String.t), default: nil) - Undergoing migration into the PerVertical message. Avoid using it. Concept ids of MDVC dimensions of this concept.
*   expandedOutputConceptId (type: list(String.t), default: nil) - Undergoing migration into the PerVertical message. Avoid using it. List of encoded mids to be expanded in WebRef/QRef output whenever this entity gets annotated. Will be populated in the annotators once static data is deprecated. b/78866814.
*   generalization (type: list(String.t), default: nil) - Undergoing migration into the PerVertical message. Avoid using it. Concept ids of MDVC generalizations of this concept.
*   isSynthetic (type: boolean(), default: nil) - True iff the topic is synthetically created during by MDVC extraction.
*   resolutionPriority (type: integer(), default: nil) - Undergoing migration into the PerVertical message. Avoid using it. Resolution priority for this entity. In case a query has many possible resolutions, only the ones with the highest resolution priority are annotated.

HotwordThresholdAdjustmentFactor contains threshold_adjustment_factor, and it's validity. value should only be considered when is_valid = true.
*   isValid (type: boolean(), default: nil) - Currently, is_valid is set to false whenever the TAF is not an Autotune aware value. This includes hotword sensitivity users, or devices not eligible for autotune.





A way to specify a simple partitioning of a BoundingBox into a sequence of sub-boxes. +----------------------------------------------------+ | | | | | | | span(0) | (1) | (2) | (3) | (4) | | | | | | | +----------------------------------------------------+ This representation can, for example, be used to store coarse Symbol boundaries within a Word (see Word. CompactSymbolBoxes below) instead of per-Symbol BoundingBoxes, for saving space.
*   span (type: list(integer()), default: nil) - "span" is width or height, determined by "direction". If there are k partitions, then there are k - 1 "span" values, one for each except the last symbol (which is redundant).


If we detect any server or content based redirect, we will store the characteristics in this message.
*   delay (type: integer(), default: nil) - The time difference between page loading and redirect occurrence. When missing, it means the redirect happens immediately (i.e. delay = 0). In seconds.
*   frameTargetDeniesFraming (type: boolean(), default: nil) - Populated for SINGLE_FRAME and SINGLE_IFRAME redirects only and indicates that the target url requested not to be framed, by virtue of using the "X-Frame-Options" HTTP header.
*   isDownload (type: boolean(), default: nil) - Indicates corresponding redirect is a download. This field is only set when rendering redirect chain is used. This field represents the value of corresponding "RedirectEvent.target_content_downloaded" field.
*   isRenderingRedirect (type: boolean(), default: nil) - Indicates corresponding redirect is from rendering if set to true.
*   metaRedirectFromTrawler (type: boolean(), default: nil) - If set, it means that the redirect of type META was detected by Trawler (as opposed to the content processor.) Only makes sense when type is META.

UNSUPPORTED. This message is never populated and is no longer used.




This protocol buffer is included from feature.proto as an optional message. Political features represent the different ways that people are divided into geographical regions.
*   capital (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Many political regions have a conceptual center (capitals of a country or a top-level division are examples). If set, the target feature must be a TYPE_LOCALITY feature.
*   claim (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Feature IDs of the features claimed by this feature's government that are not necessarily included in the feature's geometry.
*   grossDomesticProductUsdMillions (type: float(), default: nil) - The Gross Domestic Product of the political region measured in millions of current United States dollars. It must not be negative.
*   literacyPercent (type: number(), default: nil) - Percentage of population that are literate within a political region. It must be between 0 and 100.
*   population (type: String.t, default: nil) - The number of people in this political region. This field is intended to store accurate population, not an estimation such as representative value for population range. It must not be negative.

As video mutations are reconciled by Venom, we can tell if the ingredient did or did not reach certain objectives. When processing has completed, all objectives will have a corresponding transition. All transitions are reset for every mutation, but will take into account assets outside of that mutation. For example, if Asset X fails, and was part of "OBJECTIVE_PRIMARY_ASSETS_DONE", a rerun of Asset Y is destined to result in OUTCOME_FAILED, regardless of the fate of Asset Y. Some phenonema have effects on most or all Objectives. For example, a bad input file will result on OUTCOME_INFEASIBLE across the board (eventually, for now it's just GO_LIVE and DO_ALL, work in progress), and a failure to produce Format 18 will cause OUTCOME_FAILED across most Objectives.
*   objective (type: String.t, default: nil) - The objective this transition is about. REQUIRED.
*   outcome (type: String.t, default: nil) - Whether the objective is reached or not. REQUIRED.
*   reason (type: String.t, default: nil) - An optional debug string indicating the reason for this transition. This is typically omitted for OUTCOME_SUCCESS. e.g. "The video's content is invalid due to failed blobstore cloning."

A logical entity in the abstract is just a group of links to the goodoc. Depending on the kind of item, a separate proto file should extend this to define the logical structure for that kind. For example. newspapers.proto defines the logical entity for newspapers. LogicalEntity is also used within some SemanticLabels, for example, for a table-of-contents link.

Represents a measurements, which is one of the possible Value types. A measurement value like "5.2 meter^2 / second" would be represented as: magnitude: 5.2 unit { unit_mid: "/m/mid_for_meter" power: 2 } unit { unit_mid: "/m/mid_for_second" power: -1 }
*   unit (type: list(GoogleApi.ContentWarehouse.V1.Model.FreebaseMeasurementUnit.t), default: nil) - Repeated units are interpreted as a product. i.e. (meter ^ 1) * (second ^ -2)





A border represents a line of division between two features of the same type (i.e. United States and Mexico, but not California and Mexico). Borders are only used for features that tile an area. For example, country features have borders with one another because they tile an area of land. Country features do not have borders with province features because those two types of features may intersect with each other. The geometry of a border will often be similar (or derived from) the geometry of the two features that it separates. However, it is useful to have borders represented by stand-alone features for map-styling purposes. Ideally, the geometry in a border feature would be exactly the same as the common edges of the polygonal geometry of the two features. This may not always be true in practice. At some point in the future we would like to build a network of borders for features that are supposed to tile with each other. The network would be composed of different border types meeting at endpoint intersections. In the process of building this network, we would perform small geometry corrections to ensure that the borders align properly at all zoom levels. Border features are intended primarily for map drawing, and they would rarely be useful for geocoding. One exception would be for famous borders like the "Mason Dixon Line" or the "Berlin Wall." The standard feature properties have the following interpretations: name - Borders rarely have names unless they notable in their own right (e.g. "Mason Dixon Line", "Berlin Wall"). point - A border should not have point geometry. polyline - A border should have a single polyline that represents the division between the two features. polygon - A border should not have polygon geometry.
*   featureIdLeft (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The ids of the area features to the left and right of the border, relative to the start and end of this borders' polyline geometry. These features should have the same type as the "type" attribute above. These ids are not required because the corresponding features may be nonexistent or difficult to obtain.
*   logicalBorder (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The logical borders which this border is a part of.
*   overrideStatus (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreOverrideBorderStatusProto.t), default: nil) - List of border status overrides. Due to legal reasons, we may be required to display some borders differently on some domains for instance.
*   status (type: String.t, default: nil) - The border status identifies the legal status of the border line.
*   type (type: integer(), default: nil) - The type of the features this border separates. Should always be a subtype of TYPE_POLITICAL. NOTE: as of December 2019, we currently require this to be equal to TYPE_COUNTRY or TYPE_ADMINISTRATIVE_AREA1. In the future, we may support TYPE_BORDER for lower types of political features.

Alarms are clocks that ring at a specified time on one or more days. The client schedules a time to ring based on the date/time pattern. When it rings, it may be rescheduled off the original time by snoozing or it may be replaced by the next occurrence.
*   alarmId (type: String.t, default: nil) - A string key used as an identifier to this alarm. This key needs to be unique amongst all alarms on the device. The client can choose a mechanism of its choice to ensure this. If the server suggests an alarm_id, the client can either use the suggestion or create a new unique alarm_id of its choosing.
*   alarmSource (type: String.t, default: nil) - The entity that created this alarm. Note this may be different from the device that reported this alarm. In particular, this field is meant for remote alarms which have been synced to the current device by the Clock app. Synced alarms exist in each device's Clock app and can be managed by either device; this field indicates their origin.
*   datePattern (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t, default: nil) - For single alarms: the one date the alarm should next be scheduled for.
*   label (type: String.t, default: nil) - A user-provided name for this alarm.
*   recurrencePattern (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1AlarmRecurrence.t, default: nil) - For recurring alarms: a description of the dates when the alarm should recur.
*   scheduledTime (type: DateTime.t, default: nil) - When SCHEDULED or SNOOZED, the absolute time the alarm will fire next. When SNOOZED, this time includes the additional time added by snoozing the alarm. When FIRING, the absolute time the alarm had been scheduled to fire. When DISABLED, this field is undefined and should be ignored.
*   status (type: String.t, default: nil) - Describes the part of the lifecycle that an alarm is in.
*   timePattern (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t, default: nil) - The time of day the alarm should be scheduled for. This value does not change when an alarm enters the SNOOZED state; instead the scheduled_time field should be adjusted to the new alarm time.




Usage information. This is currently used for device contacts. Next ID: 3

Provider annotation annotated from the query. These fields contain the detailed information for the provider. (e.g. for Youtube, package_names contains "com.google.android.youtube", localized_names contains "youtube", and lang contains "en" from "en-US" which depends on user's setting.)

Specification of which music features can be used.
*   availableProviders (type: list(String.t), default: nil) - Providers available at the time user updated settings.
*   providerFilterState (type: String.t, default: nil) - Represents the state for the music provider filter.
*   whitelistedProviders (type: list(String.t), default: nil) - Contains the list of whitelisted music providers.




This proto is a lightweight version of ShoppingAnnotation in docjoin attachment. We're doing a deep copy of protos defined in ShoppingAnnotation so that we can control individual fields that will sit in Muppet. Data here will be used for scoring organic shopping web results and previews. Many shopping related signals, e.g., product review score, are also served from this attachment. DEPRECATED: Please use UDR (go/udr) instead.
*   multiProductScore (type: integer(), default: nil) - From MagicPageTypeAnnotation.multiplicity.confidence_score * 100 Deprecated as of July 2020 when dataset_model_multi_product_score and dataset_model_single_product_score were added.

A collection of lines that a human would perceive as a paragraph.
*   detectedLanguages (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentPageDetectedLanguage.t), default: nil) - A list of detected languages together with confidence.
*   provenance (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentProvenance.t, default: nil) - The history of this annotation.


A proto for storing inferred and reconciled metadata for Science Search. Next available tag: 74
*   datePublished (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDate.t, default: nil) - The date when the dataset was published.
*   locationReconciledForName (type: boolean(), default: nil) - Indicates if the location has been reconciled for the dataset name. This is used by LocationExtender to avoid re-annotating the dataset name.
*   isAccessibleForFree (type: String.t, default: nil) - Indicates if the dataset is available for free or behind a paywal http://schema.org/isAccessibleForFree
*   coverageStartDate (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDate.t, default: nil) - The start and end date that the dataset covers. If the dataset covers a single timepoint, then start and end dates are the same. Use the ISO 8601 format for dates (e.g., 2006-05-23).
*   descriptionInHtml (type: list(String.t), default: nil) - Description of the dataset converted to HTML.
*   versionsSimhash (type: String.t, default: nil) - A simhash value of the fields used for identifying versions of a dataset. This will be used by the VersionClusterInfoWriter.
*   doiFromCitation (type: list(String.t), default: nil) - DOI(s) extracted from the citation field. In contrast to the "doi" field these DOIs identify the articles related to the dataset rather than the dataset itself.
*   versionClusterInfo (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchVersionClusterInfo.t, default: nil) - Information on the version cluster that the dataset is a part of. This field is populated during the indexing time; the field is populated only if the dataset is part of a version cluster.
*   fieldOfStudy (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchFieldOfStudyInfo.t), default: nil) - Field of study: a general, high-level classification of the dataset. This is only populated during indexing time and it is only populated if the classification_source is KNOWLEDGE_GRAPH or it's above inference threshold.
*   dateCreated (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDate.t, default: nil) - The date when the dataset was created.
*   sameAs (type: list(String.t), default: nil) - Ids for other instances (not different versions) of this dataset.
*   numberOfScholarCitations (type: integer(), default: nil) - The number of articles that reference this dataset.
*   isInferred (type: boolean(), default: nil) - Indicates whether the metadata was inferred using an ML model rather than from the schema.org fields. Use optional so that explicitly setting to false will ensure the value is passed along to the KG instead of being indistinguisable from being unset and thus not set in the KG. This field was originally non-optional; changing to optional is backwards compatible, but protos created prior to being optional won't have has_is_inferred() (go/proto-proposals/proto3-presence#wire-format-semantic-changes).
*   alternateName (type: list(String.t), default: nil) - Alternate names and acronyms for the dataset.
*   doi (type: String.t, default: nil) - The DOI for the dataset. We assume that there is only one.
*   name (type: list(String.t), default: nil) - The names of the dataset.
*   fingerprint (type: String.t, default: nil) - The fingerprint of basic fields from DatasetMetadata, including: - name - description DEPRECATED
*   isBasedOn (type: list(String.t), default: nil) - A resource (most likely another dataset) from which this dataset is derived or from which it is a modification or adaption. http://schema.org/isBasedOn
*   hasTableSummaries (type: boolean(), default: nil) - Indicates if the dataset has table summaries. This field is only populated during indexing time.
*   replica (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchReplica.t), default: nil) - The info of replicas of this dataset.
*   spatialCoverage (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchLocation.t), default: nil) - Locations that describe spatial coverage of the data. If the data covers multiple locations then each value corresponds to one such location, describing its coordinates, mid, etc.
*   catalog (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchCatalog.t, default: nil) - Catalog that this dataset is a part of.
*   numberOfDatasetsAtSourceUrl (type: integer(), default: nil) - The number of datasets at the same source url as this dataset.
*   indexInCluster (type: integer(), default: nil) - Index of this dataset in its cluster of replicas.
*   dateUpdated (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDate.t, default: nil) - Most recent of the three dates (published, created, modified)
*   basicFieldsHash (type: String.t, default: nil) - A hash of the fields copied by BasicMetadataExtender and the importers. See cs/research/science_search/backend/extender/basic_metadata_extender.h for the list of fields.
*   scholarQuery (type: String.t, default: nil) - Query string to send to Scholar to obtain the best approximation of citations to the dataset.
*   compactIdentifier (type: list(String.t), default: nil) - Compact Identifiers (for example "RRID:SCR_002088") that can be resolved by Identifiers.org or N2T.net meta-resolvers.
*   sourceUrl (type: String.t, default: nil) - Source url from which we gathered the metadata
*   identifierFromSource (type: list(String.t), default: nil) - An identifier as provided by the dataset itself.
*   imageUrl (type: list(String.t), default: nil) - The image urls provided by the dataset (e.g., for thumbnail images).
*   relatedArticleUrl (type: String.t, default: nil) - The url for the article that (likely) describes this dataset.
*   sourceUrlDocjoinInfo (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchSourceUrlDocjoinInfo.t, default: nil) - All the information extracted from docjoin, for the source_url of this dataset, aka DatasetMetadata.source_url.
*   hasCroissantFormat (type: boolean(), default: nil) - Indicates if the dataset has croissant format (https://github.com/mlcommons/croissant).
*   id (type: String.t, default: nil) - A unique id for the dataset. For the data from Spore, this is the spore id, such as, for example "http://accession.nodc.noaa.gov/8500223#__sid=js0" REQUIRED
*   dataDownload (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataDownload.t), default: nil) - The dataset in downloadable form. There can be multiple data download entries for different file types.
*   languageCode (type: String.t, default: nil) - The 2-letter language code for the source page for the dataset. Same as the language code in source_url_docjoin_info. Populated only when generating output for indexing.
*   compactIdentifierFromCitation (type: list(String.t), default: nil) - Compact Identifier(s) extracted from the citation field. Like in the case of DOI(s) those identify the articles related to the dataset rather than the dataset itself.
*   datasetClassificationFieldsHash (type: String.t, default: nil) - A hash of the raw metadata fields used by the QualityExtender.
*   sourceOrganization (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchOrganization.t), default: nil) - Source of the dataset: unifies provider, creator, author, publisher etc.
*   datasetClassificationScore (type: float(), default: nil) - Probability that the entity is in fact a dataset (in contrast to spam or website labelled as dataset that does not describe a dataset).
*   variable (type: list(String.t), default: nil) - Variables that the data in the dataset captures (e.g., pressure, salinity, temperature). For now, these are just strings.
*   versionEmbeddingFieldsHash (type: String.t, default: nil) - A hash of the raw metadata fields used by the VersionEmbeddingExtender.
*   versionEmbeddingVector (type: list(number()), default: nil) - An embedding for the dataset to be used by the VersionAggregator.
*   authorList (type: String.t, default: nil) - A string representation of the authors of the dataset, collected from author and creator in raw metadata. The exact format (e.g., comma-separated, etc.) is up to the extender that populates this field. The assumption is that this string may appear in the UI "as is".
*   scholarlyArticle (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchScholarlyArticle.t, default: nil) - For tables and figures, contains all of the metadata for a scholarly article that was the source of this table or figure. This field is populated only if metadata_type is 'TABLE' or 'FIGURE'.
*   measurementTechnique (type: list(String.t), default: nil) - A technique or technology used in a Dataset corresponding to the method used for measuring the corresponding variable(s) (described using variableMeasured). http://schema.org/measurementTechnique
*   dateModified (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDate.t, default: nil) - The date when the dataset was modified.


A TokenSynonym contains information about synonyms of a Token's ngram. The synonyms were the ones used during parsing for token explanation in place of the original ngrams. Example 1: [present population of nyc] We can generate interpretation kc:/location/statistical_region:population by converting "present" to its synonym "current", which is a context phrase for the intent. The ngram for this token would be "present" and the string "current" would be stored in synonym_ngram. Example 2: [nys important cities] We can generate interpretation kc:/location/us_state:cities by converting "important" to its synonym "major" or its synonym "biggest", because both "major cities" and "biggest cities" are attribute phrases for the intent. In this case, the ngram in this Token is "important cities", and the token_synonyms (specifically, the synonym_ngram field) would store "major cities" and "biggest cities", since those are the actual synonym ngrams that match the attribute phrases. For context phrases, we generally should have only one matched_squery_synonyms, since we try to find the best synonyms to use using the context phrase score. However, for attribute phrase we don't really have enough info to determine which synonym is better if they both trigger the same intent, and hence we will propagate both synonyms.

Trawler can add a policy label to a FetchReply. The two main cases are: - "spam" label added for specific spammer IPs listed in trawler_site_info, which most crawls auto-reject. - "roboted:useragent" (e.g. "roboted:googlebot") if InfoOnlyUserAgents field is set in FetchParams




A representation of a range of time with start and end datetime specified.


Sorry, but the page you were trying to get to, does not exist. You may want to try searching this site using the sidebar
or using our API Reference page
to find what you were looking for.

The identity to configure a CloudSQL instance provisioned via SLM Terraform.
*   cloudSqlInstanceConnectionName (type: String.t, default: nil) - Output only. The CloudSQL instance connection name.
*   cloudSqlInstanceName (type: String.t, default: nil) - Input/Output [Optional]. The CloudSQL instance name within SLM instance. If not set, a random UUIC will be generated as instance name.
*   kmsKeyReference (type: String.t, default: nil) - Input [Optional]. The KMS key name or the KMS grant name used for CMEK encryption. Only set this field when provisioning new CloudSQL instances. For existing CloudSQL instances, this field will be ignored because CMEK re-encryption is not supported.
*   slmInstanceName (type: String.t, default: nil) - Output only. The SLM instance's full resource name.


Signals from LightweightToken. The span for an argument may have been extended to include lightweight token markers such as FROM or TO. This signal provides the semantics for the range extension.
*   type (type: String.t, default: nil) - The type of the lightweight token match.

translated author names. we usually get these for non-english papers which provide english title/author/abstract info


If the single date (plus the precision mark) is still not good enough, we will use the following fields for a date range. In this case, the fields above may all be empty.




Sections to be added to the dynamic repository the docservers build. 'tokens' is either a sequence of tokens encoded using the TokenSequenceEncoder (MDU), or a TokenspaceRepository (depends on what's set in section_type. If 'doc' is present, then the contents of these sections override what was created by parsing 'doc'.
*   fieldName (type: list(String.t), default: nil) - List of field repository (subsection) names within the section.

Click / impression signals for craps. The tag numbers are the same as they were in the original CrapsData (below). This is deliberate.
*   absoluteImpressions (type: float(), default: nil) - Thus far this field is only used for host level unsquashed impressions. When compressed (e.g., in perdocdata.proto, CompressedQualitySignals), this value is represented individually and thus is generally incompatible with the other values which are compressed as click-ratios.
*   unicornClicks (type: float(), default: nil) - The subset of clicks that are associated with an event from a Unicorn user.
*   unsquashedClicks (type: float(), default: nil) - This is not being populated for the current format - instead two instances of CrapsClickSignals (squashed/unsquashed) are used. We are migrating to the new format where this field will be populated.
*   unsquashedImpressions (type: float(), default: nil) - This is not being populated for the current format - instead two instances of CrapsClickSignals (squashed/unsquashed) are used. We are migrating to the new format where this field will be populated.

Please read go/people-api-howto:age on how to get age data. Message for the Person.age_range_repeated field. Replaces the existing Person.age_range field.
*   ageInYears (type: integer(), default: nil) - Please read go/people-api-howto:age on how to get age data. Age of the user. The field is set based on profile storage fields such as account birthday. If the source fields are not present, age_in_years will be left unset.
*   ageOfConsentStatus (type: String.t, default: nil) - Deprecated. Use go/supervised-accounts#capabilities-for-child-accounts instead. Denotes whether the user is under the region based Age of Consent. The user's region is based on ClientUserInfo.GlobalTos.AgreedLocation The age is inferred from Birthday field or CertifiedBornBefore field. The region based AoC is specified at go/aoc.
*   ageRange (type: String.t, default: nil) - Deprecated. Please read go/people-api-howto:age on how to get age data. Age range is populated based on account_birthday and certified_born_before, which may not be set for dasher users.

The features supported by the ActionV2 protocol. Note that after we move on to ConversationProto for all surfaces we can remove this message.
*   expressUrlInSettingsResponseSupported (type: boolean(), default: nil) - This flag is used to work around a bug in AGSA 6.8 that got away. The bug prevents users from accessing their shopping list if the URL of the shopping list is not a keep.google.com URL. This will happen when switch the backend that stores the shopping list from Keep to a backend maintained by the Google Shopping Express team.
*   reconnectClientInputSupported (type: boolean(), default: nil) - Whether client supports reconnect client input in action v2 payload. This capability is needed to determine if client supports parsing client input payload from actionv2 proto for workflow purposes. See go/personal-workflow. OWNER:nyzstar,vvvemuri.
*   simpleActionV2PuntSupported (type: boolean(), default: nil) - Whether or not the surface supports a simple UnsupportedAction instead of a ModalState punt card for rendering. For ActionV2 punt cards, the ModalState extension on the ResourceSet is the canonical way of building punt cards. However, while most all devices support the ActionV2 protocol, not all devices handle the ModalState rendering as part of the ActionV2. For these devices, we want to build a modified ActionV2 for punt cards which omits this ModalState. At present, this is only Android Wear and should not be used for other devices if they support ModalState or Conversation protocol.
*   supportedActionType (type: list(String.t), default: nil) - A list of all the action types supported by the client. These should be the string representation of majel.ActionTypes within "quality/majel/api/proto/action_v2.proto".
*   takeScreenshotSupported (type: boolean(), default: nil) - Checks if screenshots can be taken on the client. This field is set on the client from AGSA 7.2 onwards.
*   voiceDelightImmersiveUiSupported (type: boolean(), default: nil) - If IMMERSIVE_ACTIONS UiType is supported by the client.
*   voiceDelightStickersSupported (type: boolean(), default: nil) - If Voice Delight Stickers are supported by the client. In order to support Voice Delight stickers, the client should know how to extract sticker_url from VoiceDelightSystemInteractionSegment.
*   voiceDelightSuggestionsSupported (type: boolean(), default: nil) - If Voice Delight Suggestion Chips are supported by the client. In order to support Voice Delight Suggestion Chips, the client should know how to extract suggestions form VoiceDelightSystemInteraction.ResourceSet.





See go/zwieback. New uses of Zwieback sessions must be approved via go/zwieback-request.

A message holding the equivalent of the content light level information in HEVC or its representation in matroska/webm. This gives coarse stats on the luminance levels in the content and may be used as a hint by algorithms & displays to tone map.
*   maxContentLightLevel (type: integer(), default: nil) - Defines the maximum content light level (in cd/m^2) over the entire video.
*   maxFrameAverageLightLevel (type: integer(), default: nil) - The maximum (over entire video) of the frame average light level.

A url to the person's calendar. As of 03/2018 is not supported for user Profile.
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   type (type: String.t, default: nil) - The type of the calendar URL. The type can be free form or one of these predefined values:  home  freeBusy * work

Represents all information we have about a specific/localized link. Next available tag: 11.
*   aggregatedScore (type: number(), default: nil) - The score aggregated from all sources.
*   isPreferredDirection (type: boolean(), default: nil) - The EntityJoin keeps bi-directional links, but for some applications we only need them in one direction. This value indicates whether this is the preferred direction to keep. (We usually prefer keeping the link from the less common to the more common entity for performance reasons). For categorical links the preferred direction is from child to parent.
*   metadata (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityLinkMetadata.t, default: nil) - The metadata associated with the link.





Sum of individual score components within a moving thumbnail. Used as input for weight fitting.




Book editions metadata for a book entity. This metadata is a pair of "/book/book_edition" mid and its ISBN number.

Specifies the NLU level that Google performs, which determines the request format sent to the 3P cloud.
*   nluLevel (type: String.t, default: nil) - Specifies the NLU level for the intent.

A segment path describes a path through a short set of segments. The segment path can be used for any purpose. At the moment, only TYPE_ROAD_SIGN features can have associated segment paths: The segment path lists the segments that refer to the sign. These are the segments for which the sign is applicable. The sign's physical location is independent of the segments in the path.
*   subpath (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Specifies a sequence of feature ids of GeoStore segments. The feature ids are ordered. The path "AB" is not the same as the path "BA". The segments along the path are assumed to be connected via the appropriate intersections. The segment features that are referenced by this subpath refer to this feature back via the road_sign field in segment proto extension.

Represents the unparsed portion of an address with an associated language.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. We place extra restrictions on languages in addition to what the III library requires. See http://go/geo-schema-reference/feature-properties/languages.md
*   line (type: list(String.t), default: nil) - These lines are in display order.

Contains information about on-device fitness activities for devices that support fitness.

Additional metadata for a signup email. This will only be set if the email's classification is SIGNUP_EMAIL.
*   primary (type: boolean(), default: nil) - This is considered to be the primary signup email. At most 1 signup email will have this set.


Mapping of time/character correspondences. Used to map found snippets to the time and thumbnail nearest that snippet.


Contains information about the partial updates present in a partial CompositeDoc.
*   goldmineAnnotatorNames (type: list(String.t), default: nil) - List of goldmine annotator updates present in the enclosing partial cdoc.
*   imagesSignalNames (type: list(String.t), default: nil) - List of images signal updates present in the enclosing partial cdoc. Images signal name for a images signal is the unique name for the signal according to SignalSpec.
*   lastFullIndexingInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.CompositeDocPartialUpdateInfoLastFullIndexingInfo.t), default: nil) - Contains last full indexing information for partial updates.
*   shouldLookupDocjoinsTier (type: integer(), default: nil) - Which tier we should do cdoc lookup to merge partial cdocs. This uses the integer value of indexing.selection.CorpusId. NOT intended for other usage.
*   signalNames (type: list(String.t), default: nil) - List of signal updates present in the enclosing partial cdoc. Signal name for a signal is unique name for the signal according to SignalSpec.

A structure that represents a comment. Fields 1 through 6 are designed to store responses from the 3P YouTube Data API (see https://developers.google.com/youtube/v3/docs/comments). Field 7 is used to store the Google-internal representation of the comment; if it is populated, then all other fields may be empty. Next ID: 8
*   commentId (type: String.t, default: nil) - The ID that YouTube uses to uniquely identify the comment.
*   likeCount (type: integer(), default: nil) - The total number of likes (positive ratings) the comment has received.
*   miniStanza (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsClusteringMiniStanza.t, default: nil) - The MiniStanza object that represents the comment. If populated, all other fields in this message may be empty.
*   publishedAt (type: String.t, default: nil) - The date and time when the comment was orignally published, specified in ISO 8601 format.
*   textOriginal (type: String.t, default: nil) - The original, raw text of the comment.
*   updatedAt (type: String.t, default: nil) - The date and time when the comment was last updated, specified in ISO 8601 format.

This protobuffer stores bad SSL certificate information for a canonical URL, and meant to be included in DocJoins and push to serving time.
*   urlWithBadSslCertificate (type: String.t, default: nil) - The URL where the bad SSL certificate really comes from. Present iff it is different from the source URL, i.e. a redirect target of the source URL).

Additional shopping identifiers related to an entity or IQL function call. This must be passed along to the shopping backend (go/o4) to aid in fulfillment. Because the shopping data models do not always line up 1-1 with KG entities and are not always reconciled with each other, the message may contain multiple ids. Next id: 8 LINT. IfChange
*   aspectClusterIds (type: list(String.t), default: nil) - A shopping aspect cluster id. These are attributes mined from mentions in web articles.
*   brandEntityId (type: String.t, default: nil) - Brand entity id. Brands are fully reconciled with KG entities so there should never be ambiguity as to which brand applies (those would be separate MIDs).
*   bxCategoryIds (type: list(integer()), default: nil) - A category in the shopping browseonomy, a taxonomy of product types that can be found at go/bx. This field is expected to contain the deepest node in the browseonomy that the intent or argument pertains to, which may be an internal node. It does not contain the entire path of categories.
*   merchantIds (type: list(String.t), default: nil) - List of merchant customer account IDs associated with a merchant entity in KG. NOTE: Soon to be deprecated, see go/merchant_mids_in_indexer design
*   merchantSourceIds (type: list(String.t), default: nil) - A shopping merchant source id, i.e. the key used to identify Shopping Merchants as they are imported into KG. For reference, these IDs are populated in:  CommerceDB under BusinessIdentification.knowledge_graph.source_id  KG using the /shopping/merchant/id predicate
*   tagIds (type: list(String.t), default: nil) - Moka attributes of a product. This includes color tags but currently not brand. We allow the possibility for multiple tag ids, as multiple Moka tag ids may map to the same mid, and we may not be able to find a single matching Moka tag. Also, cross-category Moka colors intentionally map a single color mentioned in the query to an expansion of many tags representing points in LAB color space (although this representation is expected to change).

Message to represent a user's set of preferred pronouns, see go/pronouns-backend.


Aggregated set level rating score, used in training pipeline, etc.
*   averageSetNavigationUsefulness (type: number(), default: nil) - Average score of how useful the set is for navigation.

Protocol buffer describing a curve that connects two externally specified endpoints.


Represents an information which is very close to composite doc, but compresses how the anchors are represented to save space. Next available tag: 17.
*   anchors (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSimplifiedAnchors.t, default: nil) - The composite doc anchors trimmed and transformed in a smaller data structure and aggregated (if they have the exact same text).
*   cdocContainer (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - IMPORTANT: do not access this field directly, use the simplified-cdoc-access library functions to get the composite doc out of this proto.
*   documentMentionSpans (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRefconDocumentMentionSpans.t, default: nil) - The composite doc spans which were annotated with entities by Webref.
*   forwardingDups (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSimplifiedForwardingDup.t), default: nil) - Forwarding dups generated by merging existing forwarding dups within cdoc_container and URLs from ReferencePageCandidateList. Populated only before writing to online CDocs Spanner table and used for keeping an index on non canonical URLs in table. [!] Do not use unless fetching CDocs from Enricher's online Spanner CDocs database knowledge-enricher-cdocs-spanner.
*   matchingMetadata (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefPreprocessingUrlMatchingMetadata.t, default: nil) - Metadata related to why this doc was matched to its owning entity.
*   url (type: String.t, default: nil) - The URL, populated independently of whether we have a CompositeDoc proto. If the cdoc exists, the url is the same as CompositeDoc.doc.url.

Additional ranges covered by the mention. Next available tag: 5




This message describes roughly what a surface is capable of doing and metadata around those capabilities. These capabilities are determined based on: - device hardware - software - status (e.g. volume level, battery percentage) These capabilities refer to the surface and not the physical device. The list of supported surfaces can be found in the assistant.api.core_types. SurfaceType enum. A surface's capabilities can differ from the device's. An example would be ANDROID_ALLO running on Pixel. Allo does not support AudioInput while the Pixel does. In this case, audio_input will be set to false for Assistant Allo requests while it might be set to true for OPA_NEXUS requests. Next ID: 37
*   supportedLocale (type: list(String.t), default: nil) - Locales supported by assistant settings for speaking and display. This is independent from device language that is defined in device setting. New locales are added based on rollout, whitelist and app version releases because older versions does not have model support. Currently supported locale list differs by surface type.
*   cast (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCastCapabilities.t, default: nil) - These capabilities are scoped to the cast abilities of this device.
*   notificationCapabilities (type: String.t, default: nil) - DEPRECATED: Use SystemNotificationRestrictions instead. Specifies whether the surface is able to display notifications. This field is superficially similar to ProactiveNotificationOutput, but unlike that field which tracks a per-user preference on the OPA side, this field captures whether the surface is capable of displaying notifications.
*   software (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSoftwareCapabilities.t, default: nil) - These capabilities are scoped to the software available on the device as well as the set of supported Assistant features.
*   outputRestrictions (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOutputRestrictions.t, default: nil) - These are user configured restrictions indicating what the device is allowed to output from the privacy point of view.
*   notificationOutputRestrictions (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiNotificationOutputRestrictions.t, default: nil) - Settings, that reflect whether a specific notification type is allowed for current device, e.g. if the user opted out from notification category or category group. This settings are server-side stored and evaluated unlike SystemNotificationRestrictions field.
*   surfaceTypeString (type: String.t, default: nil) - DEPRECATED. surface_identity field below already contains this information. The device's surface type. This is the string version of the assistant.api.core_types.SurfaceType enum. The server should not use this field, rather it should use the SurfaceType value derived from this string.
*   movement (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiMovementCapabilities.t, default: nil) - These capabilities are scoped to abilities of the device to move around.
*   surfaceIdentity (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceIdentity.t, default: nil) - The set of information that helps the server identify the surface.
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - This is the same device id that is specified in the conversation protocol and should be unique to each device/user/model combination. For example, if a request is coming from a watch through AGSA the watch and AGSA should have different device_ids. Note: this field should only be used to determine which device the capabilities belong to and not to access the id of the device. Instead DeviceProperties should be used and accessed through ParamsAccessor.
*   callCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCallCapabilities.t, default: nil) - The call capabilities of this device. go/call-capabilities
*   jwnCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiJwnCapabilities.t, default: nil) - Indicates if the client supports Javascript Whatsnext (go/jwn). Also contains the Jwn libraries present on the client along with their versions.
*   location (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLocationCapabilities.t, default: nil) - These capabilities are scoped to the location abilities of this device.
*   safetyRestrictions (type: String.t, default: nil) - Indicates if the client has safety related restriction.
*   screen (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilities.t, default: nil) - These capabilities are scoped to the ability to see and interact with the Assistant through a screen. If the device has no screen it should send an empty ScreenCapabilities. Sending no ScreenCapabilities will cause this to be overridden with the surface default.
*   audioInput (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAudioInput.t, default: nil) - These capabilities are scoped to the ability to gather audio. It includes information like the type of audio that can be gathered (e.g. public, private).
*   camera (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCameraCapabilities.t, default: nil) - These capabilities are scoped to the camera abilities of this device.
*   hasVoiceTelephony (type: boolean(), default: nil) - Indicates that the device has connection to cellular network that allows it to make voice calls. This is distinct from device just being capable of voice telephony, because the device can be capable yet miss the suitable SIM card (for example, it could miss SIM card altogether, or have data-only SIM card).
*   loggingOnlyData (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLoggingOnlyData.t, default: nil) - Data which is produced for logging and debugging. Servers MUST NOT use this for any other purposes, such as branching on it.
*   audioOutput (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAudioOutput.t, default: nil) - These capabilities are scoped to the ability to play audio. It includes information like the type of audio that can be played (e.g. public, private).
*   systemNotificationRestrictions (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSystemNotificationRestrictions.t, default: nil) - Restrictions related to system-level notifications. This field is superficially similar to ProactiveNotificationOutput, but unlike that field which tracks a per-user preference on the OPA side, this field captures system level notifications restrictions. This field is not stored and is merged to capabilities from conversation params. It exists mostly for logging purposes of android channel state and global app-level notification opt out.

The SnapshotDocument contains a list of TextNode's. Each node contains a string of text of the webpage, its bounding box in the agove snapshot image, and its font size (in number of pixels in the snapshot, which could be a fraction number since the snapshot image is typically shrinked). This list of text nodes are extracted from the output from the rendering service: htmlrender_webkit_headless_proto. Document The extraction is done by TrimDocument defined in ./shared/doctrimmer.cc
*   inLink (type: integer(), default: nil) - One if the current text node is within a link; otherwise zero/not present.
*   maxSplit (type: integer(), default: nil) - A value in the range [0,7] (zero if not present) indicating the most "powerful" splitting tag since the last text node. See "enum Category" in mustang/snippets/taginfo.h.

NOTE: BoundingMarkerProto could be compared against one another by canonicalizing them via GetCanonicalBoundingMarker() in google3/geostore/base/internal/lane.cc. Any fields that don't contribute to the definition of a bounding marker in the real world should be bundled with the annotative fields near the bottom and excluded in GetCanonicalBoundingMarker(). LINT. IfChange
*   boundingMarker (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - References to any gcid:physical_lane_marker features that bound this lane or lane connection.
*   boundingMarkerToken (type: String.t, default: nil) - A token that can be used to identify the version of the data about this bounding marker.
*   flowlineAdjacencyBeginFraction (type: float(), default: nil) - Which part of the flowline does this association refer to? These should be between 0 and 1. These are optionally set, but can be approximated geometrically if they aren’t set. NOTE: These refer to the geometry of this feature.
*   markerAdjacencyBeginFraction (type: float(), default: nil) - Which part of the marker track does this association refer to? These should be between 0 and 1. These are optionally set, but can be approximated geometrically if they aren’t set. NOTE: These refer to the geometry of the marker feature.
*   side (type: String.t, default: nil) - Which side of the flowline does the marker occur on.

Signals for $QRefImpliedEntities that are merged into entity arguments during parsing.
*   annotatedSpan (type: String.t, default: nil) - A copy of the span of canonical (raw) parser input text corresponding to this annotation. Copied from QRefAnnotation.annotated_span.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field is used inside Aqua for evaluation purposes.
*   isUngroundedValue (type: boolean(), default: nil) - TODO (b/143536264): Create a new ImpliedTokens message and remove this. Whether the implied entity is ungrounded value, set to true when the entity doesn't have a KG mid.
*   mid (type: String.t, default: nil) - The KG mid of the implied entity.
*   qrefConfidenceScore (type: number(), default: nil) - The QRef confidence (in [0, 1]) of the entity being correctly annotated.
*   shoppingIds (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t, default: nil) - All ShoppingIds for this implied entity that need to be copied to IntentQuery (FunctionCall) if this implied entity is used in intent generation. See go/iql-shopping-ids for details.




Contains the coordinates of the normalized bounding box.
*   h (type: number(), default: nil) - The vertical height of the bounding box (ymax - ymin + 1), normalized by image height with range [0,1].
*   w (type: number(), default: nil) - The horizontal width of the bound box (xmax - xmin + 1), normalized by image width with range [0,1].
*   x (type: number(), default: nil) - The x coordinate (xmin), normalized by image width with range [0,1).
*   y (type: number(), default: nil) - The y coordinate (ymin), normalized by image height with range [0,1).

CandidateFeature contains a pair of feature name and score for a snippet candidate.
*   name (type: String.t, default: nil) - Name corresponds to the names in WebChooserScorer::FeatureNames.

Represents a reference that may be part of a larger compound reference. For example, "my brother's birthday" will have a subreference that may have references for "my brother".
*   personalReferenceTypes (type: list(String.t), default: nil) - Type of reference. There may be multiple for a single reference (e.g. relationship and contact).
*   referenceScore (type: number(), default: nil) - Highest reference score for any references merged in this span.
*   relationshipLexicalInfo (type: GoogleApi.ContentWarehouse.V1.Model.CopleyLexicalMetadata.t, default: nil) - Only set for unresolved relationship references and can be used to get the canonical word for the relationship (e.g. "mother") in TTS.




Contains the source and type information related to a personal entity, for example if it's an hotel or a restaurant (type) and if it comes from gmail, calendar, etc. (source). Next ID: 13
*   contactAnnotationId (type: String.t, default: nil) - Annotation ID of a contact annotation, e.g. a relationship set via Assistant. This ID is generated by People Write Server. It is used to delete Contact Annotations via People API.
*   emailIdentifier (type: String.t, default: nil) - Only used if personal_data_provenance == PERSONAL_SOURCE_GMAIL. Used to create a link to the source email in the form: mail.google.com/mail/u/0/?extsrc=sync&client=h&plid={email_identifier}
*   eventId (type: GoogleApi.ContentWarehouse.V1.Model.EventIdMessage.t, default: nil) - Populated for some footprints data sources; uniquely identifies the footprint that generated the personal data that this provenance is attached to.

A RoadSignProto holds the details of a road sign. Currently this is simply a list of the items that appear on the sign and their relative position.
*   component (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRoadSignComponentProto.t), default: nil) - The list of components for a single road sign. A sign may be composed of multiple components, each with its own position and content.


Generic clip information contains a key string and a value string.


This proto is used as the key for official pages data. WARNING WARNING WARNING WARNING WARNING PAY ATTENTION HERE! The query field contains a specially NORMALIZED query, NOT a raw one. You can get a normalized query in several ways: 1. from an squery with NormalizedQueryFromSquery 2. from a CJK-segmented and punctuation-stripped query with NormalizeText (NOTE: navboost queries are already CJK-segmented and punctuation-stripped, you can just pass them to NormalizeText) 3. from user text/query with CanonicalizeText (this will do the CJK segmenting, punctuation stripping and character normalization for you) All of these functions are in ./utils/external-utils.h

For crowding in news we need to keep data about the last X clustering iterations around.
*   ClusterId (type: String.t, default: nil) - Fingerprint combination of all urls in a cluster
*   ClusterSize (type: integer(), default: nil) - This is the X in the "and X related >>" link on headlines and search results
*   ClusterTimeStamp (type: integer(), default: nil) - When was this clustered (needed for keeping last X iterations around and discarding earlier ones)

------------------------------------------------------------------------------ Proto message containing the trusted genome entities that belong to an app. Document type: ANDROID_APP See go/gd-server-design for more info. ## Next tag: 4
*   testCode (type: list(String.t), default: nil) - The list of test code, used to log when serving. The test code is set in both control and experiment annotations when they are different.
*   trustedGenomeHierarchy (type: list(GoogleApi.ContentWarehouse.V1.Model.VendingConsumerProtoTrustedGenomeHierarchy.t), default: nil) - The list of trusted genome hierarchy. One trusted_genome_hierarchy may contain one or multiple entities. This is required for TG 2.0 tags.

A BestLocaleProto holds information about the best-match locale for a feature. Clients may use this information to determine the appropriate local name of a feature.
*   locale (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The ID of the best-match TYPE_LOCALE feature for this feature.
*   localizationPolicyId (type: String.t, default: nil) - The ID of the localization policy to apply when selecting a name for a feature. This field should always be set. If feature_id is also defined, this field should have the same localization policy ID as the referenced locale feature. Localization policy IDs are arbitrary identifiers (up to some number of bytes; see geostore/base/public/constants.h) that uniquely distinguish a set of language-selection rules.
*   metadata (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t, default: nil) - Field-level metadata for this best locale.

Stores the pronunciation as phoneme for the given word/text. Next ID: 8
*   learningSessionId (type: String.t, default: nil) - All pronunciations with the same learning_session_id were learnt in the same learning flow, e.g. multiple name segments learnt simultaneously from a recording in the Your People UI.
*   locale (type: String.t, default: nil) - The locale used when learning the pronunciation. BCP-47 language code, e.g. "en-US".
*   phonemes (type: String.t, default: nil) - Phoneme sequence representing how the user pronounces |token|. Format is specified by the phonology_type type field, e.g. go/psampa is the preferred phonology type used by the TTS team.
*   spellingHint (type: String.t, default: nil) - An optional user-specified spelling of this token, to improve pronunciation learning success rate. E.g. the token may be "Jana" and the spelling hint "jah-nah".
*   token (type: String.t, default: nil) - Corresponds to a word segment of the contact name. E.g. for a contact with given name "John Doe", last name "Smith" and nickname "Best Dad", |token| can be any of {John, Doe, Smith, Best, Dad}.





Features used by the PrefulfillmentRanker's scorer exclusively to break ties.


The quantification of device(s) in the query. For example, "three speakers", "all TVs", etc. Usually, we should have either lexical field or number field. However, there are some special words which we will set both fields. For example, "all 3" will have the semantic: {lexical=ALL, number=3}. Note that "both" is simply modeled as {lexical=ALL}.





Time range (start time and end time). Used to indicate the times in which a LiveResult is considered "hot" and thus a potential for boosting. Specified as Unix time (seconds since midnight, January 1, 1970). Time zone is same as that for query_start_time (i.e., GMT). Next ID: 3
*   startUnixTime (type: String.t, default: nil) - Start and end times should always appear. Marked as optional to avoid breaking code.


Bounding box coordinates are relative to the width and height of the image. For example, if image is 100x200 and NormalizedBoundingBox is , the bounding box coordinates will be (10, 40) to (50, 180). Note parts of the bounding box may fall outside the image.


Constraint for cuisine type, such as "chinese", "italian", "thai", "burgers", etc.

This class holds the EXIf/IPTC meta data Next Id: 104
*   deprecatedCity (type: String.t, default: nil) - Location from IPTC @deprecated: Use iptc.location instead.
*   gpsDop (type: float(), default: nil) - Dilution of precision. HDOP/PDOP depends on measure mode. Find out more at http://en.wikipedia.org/wiki/Dilution_of_precision_(GPS)
*   cameraSerialNumber (type: String.t, default: nil) - This is the extracted serial number from EXIF (the source depends on camera, most of the cameras store it in makers note tag).
*   lensId (type: String.t, default: nil) - Device - Lens We use this extended id to identify a lens uniquely. Canon: "%d %d %d"=.. Nikon: "%.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X" Don't change the format of the internal lens id because we use them to look up the lens names.


The overall Conversation Protocol version. As we make fundamental changes to Conversation protocol that are non-backwards compatible, we will increment the protocol version. By default, all clients will support version 0. All versions are documented at go/conversation-versions.
*   supportsConversationProtocol (type: boolean(), default: nil) - Whether conversation protocol is supported explicitly. If true, SingleDeviceCapabilityChecker::SupportsConversationProtocol will always return true.

Proto populated into shards and copied to superroot. Message storing a versioned TopicEmbeddings scores. This is copied from TopicEmbeddings in docjoins.
*   siteFocusScore (type: number(), default: nil) - Number denoting how much a site is focused on one topic.
*   siteRadius (type: number(), default: nil) - The measure of how far page_embeddings deviate from the site_embedding.

Aggregated signal used by NumericSignalAggregator. Next field id: 25
*   m2 (type: float(), default: nil) - State variables for West & Chan variance algorithm used to be stored here directly. Now they are stored inside RunningMeanAndVarianceInternalState.
*   meanScore (type: float(), default: nil) - Overall stats that are only available in final aggregation results. The aggregated score.
*   numUrlsMatched (type: String.t, default: nil) - Final Stats that are also available in intermediate output. Number of Urls matching the class.
*   numUrlsWithSignal (type: String.t, default: nil) - Not every matching url has a signal.
*   patternLayer (type: String.t, default: nil) - Experimental layer of the corresponding pattern.
*   patternsUsedInMediation (type: list(String.t), default: nil) - Optionally populated in mediators. A list of patterns that actually contributed to the final mediated signal.
*   percentile (type: list(float()), default: nil) - Score percentile of matching urls. If present, it has N entries for buckets of roughly equal number of urls. N is specified the aggregation. The value is the min score in that bucket.
*   signalId (type: integer(), default: nil) - For debugging purposes, this is an id of the signal associated with this AggregatedScore. For pattern score, this may be the length of the pattern.
*   singleUrlScore (type: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorUrlScore.t, default: nil) - If this field presents, it is for a single url. No other field should appear.
*   totalScore (type: float(), default: nil) - summation varaible used to get mean
*   totalScoreSqr (type: float(), default: nil) - summation variable for calculating deviation note, these are now only used for legacy and debugging purposes

Deprecated in b/122464133. No data returned for this field.
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   type (type: String.t, default: nil) - These fields may give away the sexual orientation of the user.

Represents a piece of text with an associated language.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. We place extra restrictions on languages in addition to what the III library requires. See http://go/geo-schema-reference/feature-properties/languages.md

This protocol buffer holds related data for features of type TYPE_PEAK and TYPE_VOLCANO.
*   prominenceMeters (type: float(), default: nil) - Topographic prominence in meters: the height of the peak’s summit above the lowest contour line encircling it and no higher summit.

The cast app information of the provider.
*   castAppId (type: String.t, default: nil) - The cast app id. |cast_app_id| is the ID of the cast app used on the current device and |content_app_id| is the ID of the app that provides the actual content. For example, in a group playback, on a follower device, the |cast_app_id| is the follower cast app ID and the |content_app_id| is the leader cast app ID.
*   contentAppId (type: String.t, default: nil) - The id of the cast app that provides the content in a group. The field will always be filled. In the case of a group playback and the current device is a follower, the |cast_app_id| has the ID of the follower app, and |content_app_id| has ID of the actual content app. In all other cases, |content_app_id| and |cast_app_id| will be the same.

Quantized/compressed feature vector (8 bit per value). Can be decoded by multiplying data_factor to each data byte.

General message used to store metadata about references to personal entities, even if those entities cannot be resolved.
*   referenceScore (type: number(), default: nil) - The strength of the personal reference. For example "my flight" may receive a high reference_score, whereas "the airport" may receive a low score.
*   references (type: list(GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReference.t), default: nil) - A list of all references made. Empty if no personal references exist. Multiple references can be present when multiple references were made in a single query, or the type of reference was ambiguous.
*   subreferenceMetadata (type: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata.t, default: nil) - Subreference metadata for all compound references on this span.


Store all app unique info that are needed for app action fulfillment.
*   appUniqueId (type: String.t, default: nil) - Store the app unique id endpoint. This will be passed over to app to fulfill the action. For example, app_unique_id for Whatsapp will be "11234567890@s.whatsapp.net"
*   contactInfoSource (type: String.t, default: nil) - Where this contact info was retrieved from. Note: only added for Assistant usage, and will not be populated by PAPI. This is due to the coupling between Assistant Proto, and PAPI proto. (//depot/google3/quality/qrewrite/servlets/proto/focus_name.proto)
*   displayAppUniqueId (type: String.t, default: nil) - Store third party endpoint that is displayed to users. For example, display_app_unique_id for Whatsapp will be "Message +11234567890".
*   label (type: String.t, default: nil) - Store third party endpoint label. For example, "HOME", "WORK"
*   mimetype (type: String.t, default: nil) - Store mimetype of this endpoint. We will use this as the differentiator for Assistant to know whether to use the RawContact for messaging, call or video call. For example, send message mimetype for whatsapp: "vnd.android.cursor.item/vnd.com.whatsapp.profile" voice call mimetype for whatsapp: "vnd.android.cursor.item/vnd.com.whatsapp.voip.call"




An entity key with an obfuscated gaia id that can be used externally.




This protocol buffer is used to represent telephone numbers and related information.
*   contactCategory (type: String.t, default: nil) - Disambiguates between the types of information or service a caller might seek when contacting this phone number.
*   isSharedNumber (type: boolean(), default: nil) - True if this phone number is not unique to this establishment and might be shared with other features. In case an establishment shares a phone number with a business chain of which it is a member, and the number canonically belongs to that chain, it should be marked as shared for the establishment but not shared for the chain.
*   number (type: GoogleApi.ContentWarehouse.V1.Model.TelephoneNumber.t, default: nil) -  DEPRECATED  This is deprecated in favor of phone_number below. An internationalized representation of a phone number. See //location/country/telephonenumber.proto
*   phoneNumber (type: GoogleApi.ContentWarehouse.V1.Model.I18nPhonenumbersPhoneNumber.t, default: nil) - An internationalized representation of a phone number. See //java/com/google/i18n/phonenumbers/phonenumber.proto
*   serviceLocationFeature (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The features from which this phone number can be called from. For instance, if a phone number can only be called from Europe, this field will contain a reference to the TYPE_CONTINENT feature of Europe. This field is analogous to http://kg/schema/common/phone_number/service_location. The only valid destination feature types are TYPE_CONTINENT and TYPE_POLITICAL. If empty, this phone number can be called from anywhere in Earth (this is the case for the majority of phones).


IMPORTANT: This proto is being migrated to ProviderId. If you are adding new field, please add to ProviderId as well.
*   androidPackageName (type: String.t, default: nil) - Unique package name that identifies a Android app of the provider.
*   castAppId (type: String.t, default: nil) - Unique app id that identifies a Cast app of the provider.
*   chromeOsPackageName (type: String.t, default: nil) - Unique package name that identifies a ChromeOS app of the provider.
*   homeAppPackageName (type: String.t, default: nil) - Unique package name that identifies a Home app of the provider.
*   iosBundleIdentifier (type: String.t, default: nil) - Bundle identifier that identifies an iOS app of the provider.
*   kaiOsPackageName (type: String.t, default: nil) - Unique package name that identifies a KaiOS app of the provider.
*   kgProviderKey (type: String.t, default: nil) - Each onboarded provider has a unique provider key. KG provider keys are string identifiers used to identify a provider in some Media backends since mids, names, etc can change.
*   mid (type: String.t, default: nil) - The MID of the provider. A MID is a unique identifier issued by Knowledge Graph for all entities contained in its graph.
*   providerVariant (type: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderVariant.t, default: nil) - Provider variant corresponding to the current MediaProviderId.


A set of metadata about a list item that is passed on to Muppet from indexing.
*   urlFoundOnPage (type: boolean(), default: nil) - DEPRECATED. No longer populated, and not used anywhere.


A rate which applies based on the precise times of utilization. Defines a rate, as well as restrictions on the start and end times which must be satisfied in order to be eligible for the rate. See go/rate-schema for more details.
*   durationBasedRate (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDurationBasedRateProto.t), default: nil) - The rates for this rule. Each duration_based_rate defines the costs associated with a particular duration of a stay. There must be at least one rate with range_start_seconds set to 0 and there cannot be gaps between durations (i.e. there should be no interval uncovered between 0 and the largest range_end_seconds of any duration-based rate).
*   taxIncluded (type: boolean(), default: nil) - If true, tax is included in the prices in this rate. If false, additional taxes may apply.
*   validStartWithin (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeScheduleProto.t, default: nil) - Time period during which utilization of this rate must start in order to be eligible for the rate. If not set, there is no restriction on the time when the utilization starts.




Note: OpaqueType is deprecated and addition of new fields is not allowed. Refer to go/opaquetype for details. If you think this is the only way to implement your feature, attend an office hours (go/meaning-help) and discuss with the MRF team. An OpaqueType configures a value whose type is only interpretable by _specific clients of the intent catalog. This means horizontal 'features' like pretty printing, correct logging, intent blacklisting and signal aggregation will not work for opaque value types. It has a field for each type in IntentQuery that is not covered by a non-opaque type (specifically: protocol messages). The fields are themselves messages declared in this file. The specific opaque value types must be empty messages. If you find a need to add any fields to these messages, make them non-opaque and implement all of the code to treat them as first class types. It is allowable for a value to have more than one of the opaque types. See http://go/opaque-type-for-value-type. LINT. IfChange Next Id: 32
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

A calendar alias wrapper used for query annotation. Aliases values are defined in the extension with build visibility restrictions as they may contain data from an account other than the user's primary account. This proto is used as an metadata output from the QRewrite annotation. It can be used for calendar aliases from different sources i.e. aliases based on the domain of the account associated with the calendar (go/calendar-aliases-annotation).


Identifies the segment index for Webref SegmentTypes not covered by other *Indices messages.

A single cost which will apply based on the duration of utilization. The cost may apply once, or repeatedly on some interval, to account for the total utilization. If the duration expressed by range_start_seconds and range_end_seconds do not cover the entire duration of the utilization (i.e. from 0 to some time greater than the total utilization time), this must be combined with other DurationBasedRateProtos such that the entire duration of the utilization is accounted for. See go/rate-schema for more details.
*   isFree (type: boolean(), default: nil) - If true, represents that the rate is free; i.e. the price is 0 in any currency. If this is true, price must be empty.
*   periodicitySeconds (type: integer(), default: nil) - The billable unit of the rate; i.e. after having utilized the service for exactly periodicity_seconds, the total cost should increase by ‘price’. For example, if the rate expresses a price per hour, then periodicity_seconds should be set to 3600. If this is unset, then the rate does not vary based on duration, and price represents a flat cost. May only be set if price is nonempty.
*   price (type: list(GoogleApi.ContentWarehouse.V1.Model.FreebaseTopic.t), default: nil) - The total price, in each applicable currency, of utilizing the service for periodicity_seconds, or for the entire duration expressed by range_start_seconds and range_end_seconds if periodicity_seconds is 0. Each entry should have an ID of /measurement_unit/money_value and consist of two properties: one with an ID of /measurement_unit/money_value/amount and a float value with the amount, and another with the ID /measurement_unit/money_value/currency and an ID value with the MID of the proper currency. May only be set if is_free is false.
*   rangeStartSeconds (type: integer(), default: nil) - Lower bound for durations to match, inclusive. Required; a value of 0 expresses that the price applies from the start of the utilization period.








Describes an individual road lane. Not only driving lanes, but also parking and biking lanes are covered by this. Note that we may eventually add curbs and walking to this schema. MOTIVATION/DESIGN DISCUSSION The intent of this schema is to model a schematic representation of the road for a bunch of use cases within GMM, navigation, map tiles. For rendering, we do not want to represent the geometry of each lane exactly, but do want to model types/width/gaps/lane markings so that a schematic rendering can be made. For navigation, we model lane connectivity and restrictions per lane, so that Pathfinder can potentially pick routes based on lanes, and definitely use the lanes to better describe the path to the driver. This schema is driven by the GT team, which is likely to be the only provider of this data. It is based on compromises that we are working out with other teams, based on what our operators can reasonably collect and what is useful. See docs here: https://docs.google.com/a/google.com/document/d/11XJ1WvqS5Sm7MxWXzzc3tnsk49VhrR3BYFjiRMAzYm0/edit?hl=en_US https://docs.google.com/a/google.com/document/d/1nzdupynTUKE8xY8JcfvQbU-KWtCJ6IwHiTaCxuq40EM/edit?hl=en_US Note: Some lane information (width, surface type, etc) may duplicate or contradict information stored at the segment level.
*   boundingMarker (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreBoundingMarkerProto.t), default: nil) - References to any gcid:physical_lane_marker features that bound this lane.
*   conjoinedCategory (type: String.t, default: nil) - If the current lane is part of a merge/split area, indicates the type (split or merge) and whether the current lane is on the left or right or in the middle of the merge/split area, as seen in the direction of traffic. See go/lane-split-merge-schema
*   distanceToNextLane (type: number(), default: nil) - Gap between this lane and the next in meters. This is relevant when the divider is physical, or a wide painted area. For regular painted single or double lines, there is no gap. This distance is duplicated between the innermost lanes for each side. Note that this is not used to describe smallish islands - this is only for long-running gaps. In particular, this models the median width, the gap between HOV lanes/regular lanes on freeways, and the road verge between a curb and sidewalk. Note on split roads: We can model any split road with a median as a single sibling pair with this distance set to the width of the median, or as two one-way sibling pairs.
*   flow (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFlowLineProto.t, default: nil) - The most logical path for the center of an object to travel along within the lane. Typically, this is the lane's center line, but doesn't have to be.
*   laneConnection (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLaneProtoLaneConnection.t), default: nil) - Connections to lanes of other segments at the end of this segment. These connections model the connectivity where you don't have to do a lane change maneuver. If any lane connection is present, assume that all others are forbidden. Also note that segment level restrictions do apply if present, and can disallow some turn even if the lanes are connected. For instance, this can happen with timed or vehicle type based restrictions on the segment. If lane connectivity implies a segment-level restriction (can't transition to some target segment), that restriction will also exist as a segment level restriction. In effect - PathFinder does not have to look at lane connectivity to figure out segment connectivity. Example: Typically, lanes are just connected to one other lane. Example: A splitting lane is connected to the two resulting lanes. Example: At an intersection, a lane is connected to crossing lanes according to how lanes are painted across the intersection. In the common case, the target segment will be connected to the same intersection as this segment. That will however NOT be true for complex intersections where there is an intersection group. The connections will be across the whole group, connecting to one of the outgoing segments from the group. This is analogous to how we do turn restrictions around intersection groups.
*   laneDividerCrossing (type: String.t, default: nil) - clang-format on Whether the divider to the inside of this lane can be crossed. Note that we assume this is symmetric, and that this also describes whether someone in the next inside lane can cross to this one. The "inside" lane is the one with a lower lane_number. Note on lane markers: We do not model the painting, but only the resulting legality. There are many painted marker styles and colors that lead to the same legality. We expect Paint or Driveabout to render lanes stylized, with solid meaning "can't cross", and dashed meaning "can cross". Note on varying legality along segment: ALLOWED takes precedence - even if some small portion has a restriction (such as right before an intersection) , the lane change will be ALLOWED.
*   laneFollowsSegmentBeginFraction (type: number(), default: nil) - These indicate for what portion of the segment the lane's flowline exactly follows the segment, and the lane is of constant width. This will be set to not include the whole segment where there is a split/turn/merge at either end of the lane. The painting of the lane should completely synthesize the lane geometry outside of this portion, connecting it to neighboring lanes to make graphical nice.
*   laneNumber (type: integer(), default: nil) - Lanes are numbered from inside of the road outward, i.e. the lane next to the center line is lane 0. The lanes then stack outwards, towards the side that one drives on this segment (right or left). NOTE: do NOT use the lane_number as index for lookup. Lane_number is not guaranteed to match the segment.lane repeated field index.
*   laneToken (type: String.t, default: nil) - A token that can be used to identify the version of the data about this lane.
*   restriction (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t), default: nil) - Restrictions that apply to this lane only. Examples include HOV lanes. If a lane restriction implies a segment-level restriction (can't route on the segment at all), that restriction will also exist as a segment level restriction. In effect - PathFinder does not have to look at lane restrictions to figure out segment restrictions.
*   shared (type: boolean(), default: nil) - True if this lane is usable in both directions (left-turn lane, reversing lane, one-lane road, etc). To get the total number of lanes for a road, add up the lanes in each direction counting 0.5 for each shared lane.
*   stopLine (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - References to any gcid:physical_lane_marker features that intersect this lane, with the implication that a moving vehicle should stop there.
*   surface (type: String.t, default: nil) - clang-format on LINT.ThenChange(//depot/google3/geostore/base/proto/segment.proto) Unlike the surface in SegmentProto, this field does not have a default value. This is because the lane-level surface overrides the segment-level surface. The lane's surface should be unset unless explicitly overriding the segment's surface.
*   width (type: number(), default: nil) - Width of this lane in meters. In many cases, we will collect this data by dividing the total road width by the number of lanes. On accuracy: This is a rough average width along this segment. If and when we wanted to be more accurate, we'd extend this schema to have full polygons for segments/lanes rather than just this average width.


The ContactDeletionContext message is a wrapper around the generic ContactMutationContext data, and will include any needed delete specific data. NOTE: Before using this message please review go/people-api-contact-deletion-context

For each of the output fields generated by the embedded content system, the Unix timestamp of when it was most recently generated. Used for controlling the frequency of generation (and thus exporting) of the fields which are expensive to generate and/or the consumers of which are not able to handle the high load of daily/hourly updates. If a timestamp corresponding to an output field is missing, it means the last attempt to generate this field failed (which could be mean that the document was not important enough for this field to be generated, or that we hit a bug in WebKit). In case we choose not to regenerate the field (because the latest generation timestamp is too fresh) the corresponding timestamp doesn't change. Next tag available: 8

Metadata on source assertions that isn't part of the user-visible Triple payload, and that doesn't really represent data provenance, but that's used to affect the way Livegraph and possibly other horizontal KG infra systems process the triple. Read: fields below really shouldn't be part of the cross-system Triple proto at all. But because Triple is used both as an internal and an external KG API, we at least want to "hide" those fields that ought to be purely part of the internal source
*   directWriteRecordIds (type: list(String.t), default: nil) - If one triple is directly-written after recon by LG without going through Composer, we add the record id it's from. Otherwise, it's empty. Note: 1) LG will dedup record ids before updating it. So this field shouldn't see duplicated record ids. 2) This is used internally by LG only. So if set by clients, they will be dropped by LG.
*   lgInternalWriterId (type: String.t, default: nil) - Identifies the LG internal writers that asserted the triple. This is the same as 'origin_id' in LG. This will only be populated by the LG writers to FactStore
*   provenanceOnlyAddition (type: boolean(), default: nil) - Whether this provenance is a provenance only addition or not. A provenance is considered an "addition" if it belongs to a triple that we expect FactStore to contain on its own (i.e through some inference), and thus we will not attempt to write it explicitly. This is a composer only populated field. Clients are not expected to populate this field.
*   triangulationKey (type: list(String.t), default: nil) - Triples typically have a single triangulation key. This field supports > 1 keys to allow staged transition to a different key scheme. To successfully triangulate in the Livegraph Composer, the triple must have >=3 instances and each triple instance having a pairwise disjoint set of triangulation keys. The triangulation keys supplied for a single input triple are treated part of the same set, so a single triple cannot self-triangulate, regardless of how many triangulation keys it has. Note2: If a triple has multiple provenances, each one is expected to set the same triangulation_keys.
*   weakData (type: boolean(), default: nil) - WARNING! The feature is still under active development and the exact semantics may be subject to change pending KE Design Review. Data marked as weak will be less preferred to regular data which does not have the marker. This allows ingesting data with a lower chance of negatively affecting existing features and products, at the cost of potentially not showing the data when competing data is available. Specifically, weak data is less preferred by conflict resolution inside of Livegraph composition. Additionally, RefX triggering will prefer to trigger based on signals computed from regular data. Aside from data providers choosing to mark their data as weak, Livegraph and RefX are the only horizontal systems expected to use this information. Please contact livegraph-team@ if you see a need for this to change. See go/weak-data for more information.

This message stores the status and reason why Amarna was unable to provide perdoc information for an image.

Deep-linking data is used to construct a deep-link URI for an activity or frame's embed, such that on click, the user is taken to the right place in a mobile app. If the app is not installed, the user is taken to the app store. If not on mobile, an analogous web uri is used.
*   client (type: list(GoogleApi.ContentWarehouse.V1.Model.EmbedsPackagingServiceClient.t), default: nil) - The data for a Google API Console client is entered by a developer during client registration and is stored in PackagingService.
*   deepLinkId (type: String.t, default: nil) - The ID for non-URL content. Embeds may either have no analogous web presence or prefer a native mobile experience if supported. In the case of no web presence, instead of setting the "url" field of an embed, such developers will set this field and other content fields, e.g. thumbnail, title, description. If set, this field is used to construct the deep-link URI. Note that the native experience is preferred over the web link and the web link is used as a fallback.
*   url (type: String.t, default: nil) - Analogous web presence. Used as desktop fallback or when no native link data is present.


A collection of data corresponding to a single title candidate. This will be used as: - a collection of signals to score and select titles in production - an input for training title models NOTE: When adding a floating point value for Ranklab purposes, use float32 instead of float64, because some of the Ranklab library still does not fully support float64. Next ID: 68
*   widthFraction (type: number(), default: nil) - A rendered width of this title divided by the max allowed width for title. Takes values in [0, 1].
*   goldmineOtherBoostFeatureCount (type: integer(), default: nil) - The number of BoostFeatures present in AlternativeTitlesGeneator but not populated above.
*   queryMatch (type: integer(), default: nil) - The number of (different) terms with a query match. It may include the match with any SQuery node (e.g., synonyms).
*   docLang (type: String.t, default: nil) - Document language for this title. It is used for model inference and hence flattened into RanklabTitle instead of RanklabDoc.
*   baseRank (type: integer(), default: nil) - The ranking index of this candidate (starting from 0) in base.
*   goldmineAdjustedScore (type: number(), default: nil) - The score for text computed in Goldmine (AlternativeTitlesAnnotator) with additional scoring adjustments applied. Currently includes Blockbert scoring.
*   goldminePageScore (type: number(), default: nil) - The score for the text computed in Goldmine (AlternativeTitlesAnnotator).
*   isTruncated (type: boolean(), default: nil) - Whether this title candidate is truncated or not.
*   percentTokensCoveredByBodyTitle (type: number(), default: nil) - Numbers of tokens covered by body title, in range of [0, 1]. Not set if body title is considered "bad".
*   sourceTitleTag (type: boolean(), default: nil) - =============================================================== Title candidate's original source information. They are populated only for non-production environment for debugging purposes.
*   goldmineAnchorFactor (type: number(), default: nil) - =============================================================== Internal boost feature signals used to compute goldmine_page_score. They are exposed only for debugging purpose.
*   text (type: String.t, default: nil) - Title text to display. Populated for debugging purpose only, and won't be used for model inferences. This represetns the exact display text in SERP, with modifications like truncations or site-title appending involved.
*   isValid (type: boolean(), default: nil) - Whether a title is valid (i.e., not empty).
*   testRank (type: integer(), default: nil) - The ranking index of this candidate (starting from 0) in test.
*   queryMatchFraction (type: number(), default: nil) - A number of matched query terms divided by the number of all terms in query. Synonyms or other terms that appear in squery but not in the raw query are excluded. Takes values in [0, 1].
*   dupTokens (type: integer(), default: nil) - Numbers of duplicated tokens. For example, duplicated tokens for a title "dog cat cat cat" is 2 (for 2 extra "cat").
*   perTypeQuality (type: String.t, default: nil) - How good or bad this title is as a data_source_type title type.
*   perTypeRank (type: integer(), default: nil) - Rank of this title among titles of the same data_source_type.
*   percentBodyTitleTokensCovered (type: number(), default: nil) - Numbers of body title tokens covered by this title, in range of [0, 1]. Not set if body title is considered "bad".

Extension data for use in Maps Product Profile.
*   failure (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure.t, default: nil) - Failure type if there is an error when fetching product profile data.
*   followeeCount (type: String.t, default: nil) - Number of people the user is following.
*   followerCount (type: integer(), default: nil) - Number of people who are following the user.
*   profilePhotoUrl (type: String.t, default: nil) - The user's profile photo that might have a badge rendered at the corner if the user is eligible for a badge.
*   topicExpertise (type: list(String.t), default: nil) - A topic that creator has expertise in. This will be in the format: emoji associated with the topic, display name of the topic, topic score
*   userCaption (type: String.t, default: nil) - A user's caption displayed under the user name on their profile page i.e. 'Local Guide Level 8'

---------------------------------------------------------------------- PartialResponse is used with streaming responses in LargeFileFetchAdapter. Rather than fitting entirely in a single FetchReply, there is a series of FetchReplies until IsFinalResponse. Each group of responses will have a unique FetchID to link them.
*   BodyLocation (type: String.t, default: nil) - If set, indicates where the fetched body is, e.g. a CNS file path. FetchReply.Body should be empty in this case. In the case where client does not support streaming but the content is too large to be accumulated in memory, we keep writing the streaming chunks to some storage unit and notify client when it is done.
*   ChunkNumber (type: integer(), default: nil) - Fetch number in this series of fetches
*   ContentRange (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerContentRangeInfo.t, default: nil) - If there is a Content-Range header, the ranges in it
*   ETag (type: String.t, default: nil) - Any ETag seen in the headers
*   FetchID (type: String.t, default: nil) - ID which links all partial fetches for this url
*   IsFinalResponse (type: boolean(), default: nil) - Is this the final response for this fetch?

A message to describe the trace events returned by Chromium.




The options to create a spanner database. KMS key access audit logging and AxT logging will be associated with the given resource name, resource type and service name. Please ensure to give right options to enable correct audit logging and AxT logging.
*   cmekCloudResourceName (type: String.t, default: nil) - The cloud resource name for the CMEK encryption. For example, projects//locations/
*   cmekCloudResourceType (type: String.t, default: nil) - The cloud resource type for the CMEK encryption. For example, contentwarehouse.googleapis.com/Location
*   cmekServiceName (type: String.t, default: nil) - The service name for the CMEK encryption. For example, contentwarehouse.googleapis.com

This message contains a set of cluster ids used to de-dup at serving time. A document could be clustered into different clusters according to different properties.
*   clusterId (type: list(GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerServingTimeClusterId.t), default: nil) - The exact cluster metadata for each individual cluster if any.

Analog to freebase::Value TODO(b/144526840) This representation has several quality and performance issues. Next available tag number: 12
*   boolValue (type: boolean(), default: nil) - Present when value is bool.
*   compoundValue (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCompactKgTopic.t, default: nil) - Compound values are those that contain either a number of simple valued facets (such as a latitude/longitude pair), or "mediator" topics representing multi-dimensional relationships between topics. See metaweb/data/topictable/topic.proto for more details.
*   datetimeValue (type: String.t, default: nil) - Present when value is datetime.
*   enumValue (type: String.t, default: nil) - Present when value is enum.
*   floatValue (type: float(), default: nil) - Present when value is float.
*   idValue (type: String.t, default: nil) - Present when value is an id.
*   intValue (type: String.t, default: nil) - Present when value is int.
*   serializedProtoValue (type: String.t, default: nil) - Present when value is a serialized protocol buffer.
*   textValue (type: String.t, default: nil) - Present when value is text.
*   uriValue (type: String.t, default: nil) - Present when value is URI.
*   uriValueFprint32 (type: integer(), default: nil) - 32-bit fprint of uri. Can be used instead of uri_value to save space. See GetNormalizedUriFprint32().

Information about a plus page and the entity it represents.
*   applicationId (type: String.t, default: nil) - Int64 ID of packaging-service entry; if set, the plus page is associated with a third-party application.

Modifiers decorate a Meaning Expression (i.e. intent FunctionCall) with signals that depend on the source language's grammar and syntax. See go/intent-modifiers for details. NOTE: Modifiers don't necessarily impact go/intent-resolution semantics. LINT. IfChange
*   alternateLanguage (type: String.t, default: nil) - Language of all of the non-annotation tokens of the query interpretation, if it is different than |language|. This can happen with English smearing, e.g. [height rousseau] will trigger as "fr" when issued in fr/FR, but really the language is "en". This can also happen when we have extra information about the language model, e.g. language="zh", alternate_language="zh-Hant".
*   mood (type: String.t, default: nil) - Since there's only IMPERATIVE, consider using Marker.command instead.
*   polarQuestion (type: boolean(), default: nil) - Whether or not the question is a polar (yes/no) question.
*   sentiment (type: GoogleApi.ContentWarehouse.V1.Model.SentimentSentiment.t, default: nil) - Sentiment analysis attached to an intent implies the sentiment user expressed behind that query. This is generated by the Empathetic Servlet in the QRewrite.

Properties of the thumbnail image to show for an anchor.
*   imagesearchDocid (type: String.t, default: nil) - Serving docid for the thumbnail in the images-tbn tables.
*   isThumbnailMissing (type: boolean(), default: nil) - Set to true when no thumbnail could be generated for this anchor.
*   servingMetadata (type: GoogleApi.ContentWarehouse.V1.Model.ImageBaseThumbnailMetadata.t, default: nil) - Metadata about the anchor thumbnail computed by Amarna, including dimensions and the size in bytes.
*   timestampMs (type: integer(), default: nil) - Millisecond timestamp of the frame used for the thumbnail.


An arc contained by a source node pointing to a destination node in a directed acyclic graph.
*   description (type: String.t, default: nil) - Human-readable description of this arc's type (for display purposes).
*   implicit (type: boolean(), default: nil) - Indicates the arc is for an implicit semantic relation between nodes, for example one that does not correspond to a grammatical relation in the text.
*   semanticNode (type: integer(), default: nil) - Index of the semantic node pointed to by this arc.
*   type (type: String.t, default: nil) - Arc type (akin to an edge label, or semantic operator).







Data stream description with no PII. Currently used by originals replacement pipeline to exclude all clips that have data streams. Fields in proto are used to exclude clips with certain types of data streams.
*   hasCameraMotionMetadata (type: boolean(), default: nil) - Whether the data stream has camera motion metadata (dynamic) or not (static). Some Wally/VR180 videos do.
*   hasOzoAudio (type: boolean(), default: nil) - If true, source contains metadata for OZO spatial audio support. See b/62393568 for more information about the OZO spatial audio format. Note that SpatialAudioMode is independent of this format.




Represents the matching information for a field when there is a query.
*   match (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiMatchInfoLookupTokenMatch.t), default: nil) - The list of matches ordered by most relevant matching for autocomplete coming first.
*   query (type: String.t, default: nil) - The query token we are matching against.


Represents the profile of the user who has signed in onto this device. Next id: 5
*   castLinkingTime (type: DateTime.t, default: nil) - Time of linking of the device with the user provided by Cast.
*   names (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiName.t), default: nil) - Supports features which depend on profile name, when no matching contact is found.


This proto contains the information of a calendar event, including title, start time, end time, etc. LINT. IfChange(CalendarEvent) NEXT_ID: 26
*   attendees (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee.t), default: nil) - Attendees invited to the event, usually includes also the organizer.
*   backgroundColor (type: integer(), default: nil) - The background color of the event, in RGB format.
*   creator (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee.t, default: nil) - The person who created this event.
*   end (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDateTime.t, default: nil) - The end time of the event. Start and end time must either both be date or both be datetime. End is exclusive, ie. the first day / first second when the event is over.
*   eventId (type: String.t, default: nil) - Optional event id provided by assistant server. Needs to be unique, at least on a per-user and calendar level, ideally globally unique. If none is given, the server will assign an id.
*   flairName (type: String.t, default: nil) - The flair name, calculated according to the event title (go/as-cal-flair). With the flair name, background images can be got from gstatic (go/scs): https://ssl.gstatic.com/tmly/f8944938hffheth4ew890ht4i8/flairs/
*   foregroundColor (type: integer(), default: nil) - The foreground color of the event, in RGB format.
*   guestsCanInviteOthers (type: boolean(), default: nil) - Whether the guests can invite other guests.
*   guestsCanModify (type: boolean(), default: nil) - Whether the guests can modify the event.
*   guestsCanSeeGuests (type: boolean(), default: nil) - Whether the guests of the event can be seen. If false, the user is reported as the only attendee to the event, even though there may be more attendees.
*   habitId (type: String.t, default: nil) - Optional id of the Habit (Calendar Goal) this event is linked to
*   htmlLink (type: String.t, default: nil) - Absolute link to this event in the Calendar web UI.
*   organizer (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee.t, default: nil) - The organizer of this event.
*   otherAttendeesExcluded (type: boolean(), default: nil) - Whether not all attendees are included in the attendee list. This is set when the attendees list has been truncated (e.g., when the number of attendees is beyond the maxAttendees limitation).
*   participationResponse (type: String.t, default: nil) - The user's response (the owner of this copy of the event) to this event.
*   recurringEventId (type: String.t, default: nil) - If this is an instance of a recurring event, recurring_event_id identifies the recurring series as a whole.
*   rooms (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventRoom.t), default: nil) - Meeting rooms associated to this event.
*   start (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDateTime.t, default: nil) - The start time of the event. This event is an all-day event if start has no time_of_day.
*   summary (type: String.t, default: nil) - The title of the event.


Representation of a phrase in the document with a particular annotation. Provides the ability to annotate arbitrary spans in the document. This is intended for representing spans that SAFT does NOT consider to be mentions of entities within a SAFT document.
*   phrase (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t, default: nil) - Contains start and end pointers to the token array for this span.




Geo-specific information about the entity. Next available tag: 34.
*   addressSynonyms (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefGeoMetadataProtoAddressSynonym.t), default: nil) - This field is only provided through the online qref interface (QrefMetadata). This is a fairly simple extraction from the /geo/type/feature/address_proto_blob triple.
*   areaKm2 (type: float(), default: nil) - Area in km^2 of the feature if the feature has polygon. Only set by qrefmetadata.
*   bound (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRectProto.t, default: nil) - The tight bounds of this feature. Note that these are different from the FeatureProto.bound field.
*   countryCode (type: String.t, default: nil) - Country code of the country of the entity. Only available in qref-metadata.
*   location (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - The geographic location (center) and geometry of this entity. See geostore.FeatureProto for more details.
*   name (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreNameProto.t, default: nil) - The best name from Oyster for this entity. Is only included for some types of entities, and is a trimmed version of the proto (some fields are cleared).
*   oysterId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The oyster id of the entity
*   stableIntegerCountryCode (type: integer(), default: nil) - Numerical country code, converted with i18n/identifiers/stableinternalregionconverter.h. It is the same as country_code, but it is available in the annotator model (and takes less space).
*   timezone (type: String.t, default: nil) - Timezone if the feature is contained inside one.
*   wpLocation (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWikipediaGeocode.t), default: nil) - Information about the geographic location (center) extracted from the wikijoins.




A PriceListSectionProto is used to store a section of a PriceListProto. For example, for a PriceListProto representing a food menu, a PriceListSectionProto represents a menu section. Each PriceListSectionProto contains a repeated list of items for sale; these items can be products or services. Right now every section should contain items of one type.
*   callToAction (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCallToActionProto.t, default: nil) - Call to action for the section.
*   foodItem (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFoodMenuItemProto.t), default: nil) - To store food and drink items when the containing PriceListSectionProto is a food menu section.
*   item (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreComposableItemProto.t), default: nil) - To store any items when the containing PriceListSectionProto is not food / legacy services.
*   itemType (type: list(String.t), default: nil) - This has to have at most one value.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. We place extra restrictions on languages in addition to what the III library requires. See go/geo-schema-reference/feature-properties/languages. When set, represents the language of the section and its items. Any section and item level name infos must match this language. Optional.
*   media (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProto.t), default: nil) - One or more media items (photos, videos, etc.) describing this section / category.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - The repeated name_info field is for price list sections listed in multiple languages. When a price list section has no names or descriptions, the size of the repeated field name_info may be 0. There should be at most one name_info for any given language.

Message containing the processed provider signals. This message is consumed by systems outside of the Provider GP, such as the HGR. For use of provider signals within the Provider GP, please refer to the CTF-governed PackedProviderSignals defined in: cs/google3/assistant/context/proto/packed_provider_signals.proto;rcl=486224300;l=68
*   isDefaultProvider (type: boolean(), default: nil) - Whether the provider is the default provider for the BII and entity type. Also known as the 'preferred_provider'.
*   isForegroundProvider (type: boolean(), default: nil) - Whether the provider is currently open in the foreground on the device.
*   isInAppProvider (type: boolean(), default: nil) - Indicates that fulfillment on this provider will happen within the provider app
*   isInstalled (type: boolean(), default: nil) - Whether the provider is installed, or otherwise reachable, from the device.
*   isLastUsedProvider (type: boolean(), default: nil) - Whether the provider was the last-used provider for this intent on the device. Also known as the 'sticky_provider'.
*   isQueryRestrictedProvider (type: boolean(), default: nil) - Whether the provider was specified by the query.
*   providerSelectionResult (type: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionResult.t, default: nil) - The result of running provider-selection on the provider candidate. This is populated by the Signal Extractor after the PSL has been run.
*   providerTypeSignal (type: String.t, default: nil) - Contains the "fulfillment type" of provider eg whether it's 0p or System API provider.


Article IDs associated with an article (e.g., PMID, DOI, PMC).


This proto holds IPTC metadata. http://www.iptc.org/cms/site/index.html?channel=CH0099 Proto field name is same with IPTC property name except which is clearly stated. Next Id: 64
*   acquireLicensePage (type: String.t, default: nil) - Page URL about how to acquire this licensable image.
*   digitalSourceType (type: String.t, default: nil) - See go/gi-annotations-indexing for more information.
*   imageSupplier (type: String.t, default: nil) - PLUS field, not used.
*   licenseUrl (type: String.t, default: nil) - License URL about how to distribute the image.




Settings related to speech detection. See go/hotword-settings-on-cloud for more info. Next ID: 16
*   continuedConversationEnabled (type: boolean(), default: nil) - Indicates whether Continued Conversation is enabled for this device.
*   dspAvailable (type: boolean(), default: nil) - Whether the device has DSP chip to enable always on hotword detection.
*   hotwordInNavigationEnabled (type: String.t, default: nil) - Whether hotword has been enabled by the user during navigation.
*   hotwordSetting (type: String.t, default: nil) - Stores hotword setting status for the locales which don't support voice match.
*   lockscreenEnabled (type: boolean(), default: nil) - Whether pin/pattern lockscreen has been enabled by the user.
*   opaEligibilityState (type: String.t, default: nil) - Stores if Assistant is available for the user's device/locale, where Enabled means it is available and disabled means it is not.
*   opaEligible (type: boolean(), default: nil) - Stores if Assistant is available for the user's device/locale. Deprecated as bools do not give accurate true/false ratios due to old clients reporting the default value.
*   sdkVersion (type: integer(), default: nil) - Stores the Android SDK version. This comes from android.os.Build.VERSION.SDK_INT.
*   speakerIdModelPresent (type: boolean(), default: nil) - Whether speaker ID model is present for the user.
*   speakerIdRecognitionEnabled (type: boolean(), default: nil) - Indicates whether the user has enabled speaker-id (fromAnyScreen/alwaysOn) for this device. Deprecated - use voice_match_setting instead
*   trustedVoiceEnabled (type: boolean(), default: nil) - Indicates whether the user has enabled trusted voice for this device.
*   userMigratedToDeclined (type: boolean(), default: nil) - Stores if user was migrated from undecided to declined as apart of Mariko project. Used for potential growth targeting.
*   voiceMatchSetting (type: String.t, default: nil) - Stores the hotword/voice match setting status for the locales which support voice match.


Accumulated coverage data for an url using a constant half-life time. Next tag: 28
*   chances (type: float(), default: nil) - Numbers below are all total in the decayed manner. To get rate of impression/clicks, divide by chances.
*   coverageTimestamp (type: String.t, default: nil) - Epoch seconds at which this weighted coverage data was calculated.
*   firstBaseCoverageTimestamp (type: String.t, default: nil) - Epoch seconds at which this url first gets coverage in BASE.
*   firstCoveragePagerankNs (type: integer(), default: nil) - The pagerank when the url was serving for the first time.
*   firstCoverageTimestamp (type: String.t, default: nil) - Epoch seconds at which this url first gets coverage data.
*   intervalData (type: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAdaptiveIntervalData.t, default: nil) - Interval Data to track the average time between clicks_total, clicks_good, and ctr_weighted_impression.
*   lastDwellDateInDays (type: integer(), default: nil) - Indicates the date when this document received the last KnowledgePanel or WebAnswer dwell. Note: The date is identified in terms of number of days since Epoch.
*   lastGoodClickDateInDays (type: integer(), default: nil) - Indicates the date when this document received the last good click. Note: The date is identified in terms of number of days since Epoch.
*   lastImpressionDateInDays (type: integer(), default: nil) - Indicates the date when this document received the last impression. Note: The date is identified in terms of number of days since Epoch.
*   lastLuDwellDateInDays (type: integer(), default: nil) - Indicates the date when this document received the last LocalUniversal dwell. Note: The date is identified in terms of number of days since Epoch.
*   lastPseudoImpressionsDateInDays (type: integer(), default: nil) - Indicates the date when this document received the last pseudo-impression. I.e., when it was retrieved as a result but GWS would not show it because of the document's age in the index. Note: The date is identified in terms of number of days since Epoch.
*   totalChances (type: String.t, default: nil) - Total number of chances on this urls (not decayed).
*   urlfp (type: String.t, default: nil) - Temporary variable, only used during mapreduce.


An image with regions within it. NEXT_ID: 11
*   finalPornScore (type: number(), default: nil) - The final_porn_score for the image.
*   finalViolenceScore (type: number(), default: nil) - The final_violence_score for the image.
*   flowOutput (type: GoogleApi.ContentWarehouse.V1.Model.ImageContentFlowProtoProd.t, default: nil) - The output of various features generated by the Flow framework, most importantly data from Starburst (go/starburst).
*   has300kThumb (type: boolean(), default: nil) - True if the image has a 300k thumb.
*   hasNavboost (type: boolean(), default: nil) - True if the image has navboost.
*   isIuInappropriate (type: boolean(), default: nil) - True if the image is iu-inappropriate.
*   pedoScore (type: number(), default: nil) - The pedo_score of the image.
*   precomputedRestricts (type: GoogleApi.ContentWarehouse.V1.Model.PrecomputedRestricts.t, default: nil) - The precomputed restricts for the image.
*   racyScore (type: number(), default: nil) - The racy_score of the image.


Used to describe clock capabilities of the device (for example, capabilities related to maximum number of supported alarms and timers that can be created on the device). Fields may be populated by clients or be backfilled by SAL (in case of Timon, for example).
*   maxSupportedAlarms (type: integer(), default: nil) - Maximum number of alarms that can be created on the client.
*   maxSupportedExtendedTimerDuration (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t, default: nil) - Maximum extended timer duration supported by the client. The extended timer duration is the total start-to-finish duration after an AddTimeToTimer operation. E.g. if a user sets a timer for 30 minutes, and later adds 10 minutes, the extended duration is 40 minutes.
*   maxSupportedTimerDuration (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t, default: nil) - Maximum duration of timers that can be created on the client.
*   maxSupportedTimers (type: integer(), default: nil) - Maximum number of timers that can be created on the client.
*   preferredStopwatchProvider (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t, default: nil) - The preferred provider to use for stopwatch related functionality.
*   restrictAlarmsToNext24h (type: boolean(), default: nil) - Whether the client restricts alarms to ring within the next 24 hours.


This proto contains the sentiment and emotions that the user is exhibiting at the time of the query. NEXT ID: 4
*   polarity (type: String.t, default: nil) - Polarity represents the sentiment towards the subject.
*   userEmotions (type: GoogleApi.ContentWarehouse.V1.Model.SentimentSentimentEmotions.t, default: nil) - The emotions that the user is feeling.

Status of a project, including the project state, dbType, aclMode and etc.
*   documentCreatorDefaultRole (type: String.t, default: nil) - The default role for the person who create a document.
*   location (type: String.t, default: nil) - The location of the queried project.
*   qaEnabled (type: boolean(), default: nil) - If the qa is enabled on this project.


Fetcher -> FetchClient FetchReplyData is the metadata for a reply from a FetchRequest. For metadata + document body, FetchReply is further below. NOTE: FetchReplyData (and FetchReply) is the output interface from Multiverse. Teams outside Multiverse/Trawler should not create fake FetchReplies. Trawler: When adding new fields here, it is recommended that at least the following be rebuilt and pushed: - cron_fetcher_index mapreduces: so that UrlReplyIndex, etc. retain the new fields - tlookup, tlookup_server: want to be able to return the new fields - logviewer, fetchutil: annoying to get back 'tag88:' in results -------------------------- Next Tag: 125 -----------------------
FetchPatternFp (type: String.t, default: nil) - With the introduction of fetch pattern based hostload exceptions, one hostid may have multiple hostload buckets, each with its own hostload. In this case, FetchPatternFp will be set to identify the hostload bucket within the hostid. Note this field is only meaningful for the HostBucketData which is recorded only when the client requests to have as part of reply. However, this field is useful for certain stats gathering, so we choose to always record it if its value is available during the fetch.  LastUrlStatus (type: GoogleApi. ContentWarehouse.V1.Model.TrawlerFetchStatus.t, default: nil) - Crawl status of the last url on chain  FlooEgressRegion (type: String.t, default: nil) - If present, fetch was conducted using floonet and this is the location of floonet egress point we used.  PostData (type: String.t, default: nil) - If the fetch uses HTTP POST, PUT, or PATCH protocol, and WantPostData is true, the POST data will be copied here. This is only for initial hop. If there are redirects, HTTP POST will be changed to GET on subsequent hops, and the PostData will be cleared. There is only one exception, if the HTTP response code to the POST request is 307 (a new code introduced in RFC7321, sec. 6.4.7), we will preserve the request method and the PostData for the next hop.  HopRobotsInfo (type: integer(), default: nil) - Extra information in robots.txt for this page (integer: or'ed together of type trawler::RobotsInfo) on a per-hop basis (initial hop)  DNSHost (type: String.t, default: nil) - Sometimes the hostid and destination IP in the FetchReplyData are not for the hostname in the url. If that's the case DNSHost will be the host that we have used when resolving hostid and DNS. Right now there are two cases: (1) malware team provides a proxy IP:Port to us, so DNSHost will be the proxy IP; and (2) PSS team provides a reference DNS host; so DNSHost will be the reference DNS host.  ID (type: String.t, default: nil) - Same as the ID of the matching request (used for matching internal fetchclient data in request/reply)  HSTSInfo (type: String.t, default: nil) - Set to: o HSTS_STATUS_NONE if there was no HSTS policy match for the URL's host. o HSTS_STATUS_AVAILABLE if there was an HSTS policy, but the URL was not rewritten from HTTP to HTTPS because enable_hsts was not set in client capability config. o HSTS_STATUS_REWRITTEN if the HSTS policy was followed and url was rewritten from HTTP to HTTPS. This field only pertains to the current URL fetch and does not explain a redirect's HSTS status. However, FetchReplyData.Redirects have their own HSTSInfo.  UrlEncoding (type: integer(), default: nil) - Encoding info for the original url itself. Bitfield encoding; see UrlEncoding::{Set,Get}Value in webutil/urlencoding.  RedirectSourceFetchId (type: String.t, default: nil) - If this fetch was a result of a redirect, we populate the parent ID here.  HTTPTrailers (type: list(GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataHTTPHeader.t), default: nil) - The received HTTP trailers if available.  PolicyData (type: list(GoogleApi.ContentWarehouse.V1.Model.TrawlerPolicyData.t), default: nil) - Trawler can optionally add a policy label to a FetchReply. Some uses: - "spam" label via trawler_site_info - "roboted:googlebot" label as a signal to crawls supporting multiple useragents that it's not safe to share the fetch replies with googlebot crawls.  PredictedDownloadTimeMs (type: integer(), default: nil) - This is available only if a fetch results in TIMEOUT_WEB, and we were able to predict, based on content length and bandwidth we were using, how much time (in ms) would be needed to download the entire content.  HopCacheKeyForLookup (type: String.t, default: nil) - Returns the cache key used when doing cache lookup/update, on a per-hop basis (initial hop) Note this field will not be set if cache lookup/update is disabled/skipped.  BadSSLCertificate (type: String.t, default: nil) - This field, if non-empty, contains the SSL certificate chain from the server. The filed should be serialized SSLCertificateInfo protobuf, although it used to be text format. Hence, one should ideally use trawler::CertificateUtil to check this field and understand in more detail. This field is populated in two cases: (1) something is wrong with the server certificate and we cannot verify the server's identity. In this case the URL most likely won't display in a browser; (2) if you turned on WantSSLCertificateChain in the FetchRequest. In this case the server certificate may be perfectly fine (despite the field name). This is for the initial hop; additional hops are in Redirects group.  HttpVersion (type: String.t, default: nil) - Stores the HTTP version we used in the final hop.  DownloadTime (type: integer(), default: nil) - The download time for this fetch (ms). This is the RTT time between fetcher and HOPE, note it does not include time from redirects, just initial hop. If you want the sum of the DownloadTime values for all fetches in the redirect chain, then use the DownLoadTime value in the FetchStats.  Status (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchStatus.t, default: nil) - Status of the fetch - refers to the final status at the end of the redirect chain.  HopReuseInfo (type: String.t, default: nil) - Returns trawler::ReuseInfo with status of IMS/IMF/cache query, on a per-hop basis (initial hop) For example, if the URL redirect chain is [URL A] --> [URL B] --> [URL C], this field stores the reuse info of [URL A].  ThrottleClient (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerThrottleClientData.t, default: nil) - If present, Client API will enforce the contained constraints  HttpRequestHeaders (type: String.t, default: nil) - The HTTP headers we sent to fetch this URL (initial hop). Not normally filled in, unless FetchParams.WantSentHeaders is set.  RobotsInfo (type: integer(), default: nil) - Extra information in robots.txt for this page (ORed together bits from trawler::RobotsInfo). e.g. nosnippet vs. noarchive vs nofollow vs noindex vs disallow Consider using HopRobotsInfo instead, which has per-redirect hop detail.  ReuseInfo (type: String.t, default: nil) - -------- Returns trawler::ReuseInfo with status of IMS/IMF/cache query. Consider using HopReuseInfo instead, which has per-redirect hop detail. If there's URL redirection, this field stores the reuse info of the last hop. For example, if the and URL redirect chain is [URL A] --> [URL B] --> [URL C], this field stores the reuse info of [URL C].  TimestampInMS (type: String.t, default: nil) - When this reply came back from fetcher NOTE: TimestampInMS is used for internal debugging. To see when a document was crawled, check CrawlDates.  TransparentRewrites (type: list(String.t), default: nil) - If the url got rewriten by transparent rewrites, here it is the series of rewrites it got through. The fetched one is the last  GeoCrawlFallback (type: boolean(), default: nil) - Whether we fallback from geo crawl to local crawl during fetch. The fallback could happen in any hops and there can be at most one fallback because once fallback happens, we will not try geo-crawl anymore.  ProtocolVersionFallback (type: boolean(), default: nil) - Whether we fallback from HTTP/2 to HTTP/1.1 during fetch. The fallback could happen in any hops and there can be at most one fallback because once fallback happens, we will not try HTTP/2 anymore.  EgressRegion (type: String.t, default: nil) - If present, the edge region that we have used.  originalProtocolUrl (type: String.t, default: nil) - If the input url in FetchRequest is Amazon S3 protocol or Apple Itunes protocol, we will translate it into https url and log it as https url. In the meantime we will store the original s3/itunes url in this field. Before sending back to client, the Url will be translated back to s3 and this field will be cleard.  ClientServiceInfo (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerClientServiceInfo.t, default: nil) - Some client specific data that's set by client in the FetchRequest, and we just copy it here verbatim. This is similar to ClientInfo that we copy from FetchRequest to FetchReply, but this is copied to FetchReplyData, thus stored in trawler logs so can be useful for debugging cases.  UseHtmlCompressDictionary (type: boolean(), default: nil) - Use the special compression dictionary for uncompressing this. (trawler::kHtmlCompressionDict. Use trawler::FetchReplyUncompressor to uncompress; crawler/trawler/public/fetchreply-util.h)  TrawlerPrivate (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerTrawlerPrivateFetchReplyData.t, default: nil) - For logging only; not present in the actual fetcher response  RequestorIPAddressPacked (type: String.t, default: nil) - Machine that sent Trawler this request, for logging. An IPAddress object, packed as a string.  HttpProtocol (type: String.t, default: nil) - The http protocol we send to fetch this URL. This will only be set if the request is using http  GeoCrawlEgressRegion (type: String.t, default: nil) - If present, the last hop of the fetch was conducted using floonet and this is the location of floonet egress point. It is different from EgressRegion and FlooEgressREgion because it is a Trawler transparent routing configured in the geo crawl rules(go/da-geo-crawl).  HostId (type: String.t, default: nil) - If known, the trawler::HostId that identifies the host (initial hop).  HttpResponseHeaders (type: String.t, default: nil) - HTTP headers from the response (initial hop). Trawler does not fill this in; this is intended as a placeholder for crawls like webmirror that fill in and want to track this across redirect hops.  GeoCrawlLocationAttempted (type: String.t, default: nil) - Set only when GeoCrawlFallback is true. Logs the geo crawl location we attempted but failed for this request.  HostBucketData (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketData.t, default: nil) - Data about the host bucket this request is in (if desired) Please talk with Trawler team before considering using this, since what we fill in here is subject to change.  RobotsStatus (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchStatus.t, default: nil) - Status of the robots.txt fetch. Currently, this is present if: - Certain robots error cases, such as URL_TIMEOUT-TIMEOUT_ROBOTS or URL_UNREACHABLE-UNREACHABLE_ROBOTS_ERROR. - If WantRobotsBody is set in the FetchParams.  ThrownAwayBytes (type: String.t, default: nil) - Sometimes we throw away content because we cannot store it in the internal buffers. These is how many bytes we have thrown away for this factor.  Endpoints (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerTCPIPInfo.t, default: nil) - ------- If fetched, the IP from which we fetched, as well as source IP and ports. It is recommended to use trawler::DestinationIP()/HasDestinationIP() accessors, which return a proper IPAddress.  RobotsTxt (type: String.t, default: nil) - The robots.txt we used for this URL (initial hop). Not normally filled in unless WantRobotsBody is set. This is mostly for debugging purposes and should not be used for large volumes of traffic.  RequestorID (type: String.t, default: nil) - RequestorId is the same on as in the request that triggers this reply -- mainly for diagnostics purpose  CompressedBody (type: boolean(), default: nil) - Is the associated body compressed ?  TotalFetchedSize (type: String.t, default: nil) - How many raw bytes we read from the connection to the server when we fetched the page. Includes everything: HTTP headers, overhead for HTTP chunked encoding, whatever compressed/uncompressed form (i.e. gzip/deflate accept-encoding) the content was sent in, etc. This is NOT the same as the size of the uncompressed FetchReply::Body - if the webserver used gzip encoding, this value might be much smaller, since it only counts the compressed wire size. To illustrate, think of 3 sizes: 1) TotalFetchedSize - amount Trawler read over the wire from the server. If they used gzip/deflate, this might be 4-5x smaller than the body. 2) UnTruncatedSize/CutoffSize - how big is the full document, after uncompressing any gzip/deflate encoding? If truncated, this is reflected in CutoffSize. 3) FetchReply::Body size - most crawls enable Trawler compression to save storage space (gzip + a google html dictionary). The body size that the end Trawler client sees is post-compression.  Url (type: String.t, default: nil) - The original url in the request we are answering. Even though "optional," url must be filled in on all well-formed replies. Trawler guarantees that it is filled in, and basically every client expects it (CHECKs in some cases). -> Not filling this field in is a bug, if you share this data with other crawls/pipelines. You should expect everybody else to require a url.  EligibleGeoCrawlEgressRegion (type: String.t, default: nil) - If present, it means this host might be eligible for geo crawl. However, this does not mean we enable geo-crawl for this request. Check "GeoCrawlEgressRegion" instead to see if this fetch is conducted via geo crawl.

Describes the spatial information about a value in spatial-coverage definition of a dataset. Next ID: 9
*   boxCoordinates (type: String.t, default: nil) - Coordinates of the corners of the polygon in the form "lat1 long1 lat2 long2"
*   circleCoordinates (type: String.t, default: nil) - Coordinates for the circle area defined by its center and radius: "lat long, radius"
*   containedInMid (type: list(String.t), default: nil) - mids for locations that contain loctions in .
*   locationMid (type: list(String.t), default: nil) - mids for locations covering the dataset, contained in the . A region may contain multiple locations that are identified by mids.
*   locationMidLabel (type: list(String.t), default: nil) - Labels (in the preferred language of the dataset) for the mids in .
*   locationName (type: String.t, default: nil) - The original name for the area covered by the dataset.
*   pointCoordinates (type: String.t, default: nil) - Latitude and longitude for a single point in the form of "lat,long".

Features to be extracted from Provider GP for ranking in HGR. Next ID: 7
*   providerClusterIds (type: list(String.t), default: nil) - Cluster IDs for the provider. This field is repeated because some providers can be associated with multiple clusters. PRR specific feature.
*   providerId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderId.t, default: nil) - ProviderId for the provider in the binding set. PRR specific feature.
*   pslScore (type: number(), default: nil) - Provider quality score in the range [0,1] that can be used for ranking providers. Incorporates both policy rules and quality considerations.


Internal field metadata. This part is not exposed to downstream consumers of the repository (read-only clients) but is available to upstream providers to the repository (read-write clients).

Message that gets returned from the Provider Selection Library (PSL). It encodes the scores, applied policies, and pruning decisions for a given provider candidate.
*   bucketedFinalScore (type: String.t, default: nil) - Alternative bucketed score for use by downstream ranking providers. A raw numeric score is subject to semantic-drift, while a bucket is not.
*   finalScore (type: number(), default: nil) - Final score in the range [0,1] that can be used for ranking providers. Incorporates both policy rules and quality considerations.
*   policyApplied (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionPolicy.t), default: nil) - List of business policies applied to the candidate.
*   shouldPrune (type: boolean(), default: nil) - Indicates whether the candidate should be pruned.

Value is derived from previous task state (go/taskstates).
*   argumentName (type: list(String.t), default: nil) - Argument names in the DialogIntentState that the argument corresponds to. This is repeated so it can handle complex argument update paths. (ordered from outermost argument to innermost argument)
*   currentQueryEvalData (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t), default: nil) - The span(s) in the current query (if any) used to resolve the previous query's DIS. Example: U: Barack Obama G: Do you want his age or his height? U: The first one. G: Age(/m/obama) In this example, the intent is derived from the previous query's DIS, but also needs to be resolved in the current query since the user was presented with multiple options.
*   dialogIntentStateId (type: String.t, default: nil) - The id of the specific DialogIntentState instance that the argument corresponds to.
*   intentName (type: String.t, default: nil) - Intent name of the DialogIntentState that the argument corresponds to.

showTranslationSupported (type: boolean(), default: nil) - Whether the client can show chip as (text | translation). go/lang-partner-doc

Information about the document which is not produced by webref, typically copied from the docjoin. Next available tag: 15
*   crawlTime (type: String.t, default: nil) - The timestamp of when the document was crawled (if known). Copied from CompositeDoc.Content.CrawlTime.
*   docFp (type: String.t, default: nil) - Fingerprint of the document. We compute and set this fingerprint when creating the pagesets that we use for evals. Otherwise, this field is not normally set. We use the field to make sure that the human ratings that we have are generated for the same version of the document, otherwise they might be invalid. We do not compute the fingerprint on the fly (e.g. as a fingerprint of the proto buffer serialization of the cdoc) because protocol buffer serialization is not stable.
*   docId (type: String.t, default: nil) - DocId of the annotated document as read from cdoc.doc().docid().
*   forwardingUrls (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefForwardingUrls.t, default: nil) - Urls that forward to this url. Needed for url -> topical entity entries.
*   isDisambiguationPage (type: boolean(), default: nil) - Set to true if the document is a known disambiguation page, e.g. https://en.wikipedia.org/wiki/Orange.
*   language (type: String.t, default: nil) - The document language, as read from doc().content().language(). This is go/language-enum value.
*   numIncomingAnchors (type: number(), default: nil) - The (weighted) number of incoming anchors (links from other documents).
*   salientTerms (type: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTermSet.t, default: nil) - The salient terms for this document. Only set if --webref_doc_metadata_copy_salient_terms is true. Same motivation as the title field above.
*   title (type: String.t, default: nil) - The title of the document. Only set if --webref_doc_metadata_set_title is true. The idea is that we can use this to more easily learn things like: title contains "restaurants" -> more likely to be a list page.
*   totalClicks (type: number(), default: nil) - The total clicks on this document, taken from navboost data.
*   url (type: String.t, default: nil) - The url of the document.







This message mirrors the ContactPhoneNumber message in ccc/grand_central/common/types.proto. For various reasons, we cannot take on a direct dependency. See other proto file for most recent documentation.
*   formattedType (type: String.t, default: nil) - The phone formatted type. See docs from mirrored proto: http://google3/ccc/grand_central/common/types.proto?l=128&rcl=241000760
*   type (type: String.t, default: nil) - The type of phone. See docs from mirrored proto: http://google3/ccc/grand_central/common/types.proto?l=125&rcl=241000760

Small values from rendering output. It's stored as a column in alexandria document table. Next tag available: 30
*   exceptions (type: String.t, default: nil) - The exceptions observed during the rendering. In bit-field encoding of enum values of RenderResponse.RenderingException.
*   experimentalRenderTimeMsec (type: integer(), default: nil) - Total GCU time for rendering the document in millisecond. This data is from render_stats.render_cost_mgcu in RenderResponse proto. Note that this is experimental field. Please check with rendering-infra@ if you want to use.
*   importance (type: integer(), default: nil) - The importance value of the rendered document.
*   lastNewContentProbingTimestamp (type: integer(), default: nil) - The timestamp of last new content probing.
*   newTokensPercentageAfterRendering (type: float(), default: nil) - Percentage of new tokens in the rendered the document content.
*   renderCacheStats (type: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentRenderCacheStats.t, default: nil) - A collection of fields to track stats on cache use in the Rendering microservice.
*   renderEvent (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderEvent.t), default: nil) - Different types of events which happened during rendering.
*   renderServerCl (type: String.t, default: nil) - The CL from which the render engine was built.
*   renderedSnapshotSignature (type: String.t, default: nil) - Short signature (usually less than 1 KB) which captures a perceptual hash on the rendered image. This is used to determine whether successive renderings should be output. See the library in googlen/snapshot/shared/similarity.* for more info about how this value is interpreted and used.
*   renderedTimeUsec (type: String.t, default: nil) - Current time in microseconds the document is going through rendering system. This field is set regardless of whether the document is being rendered or if we are skipping rendering by using a cache.
*   selectionResult (type: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentSelectionResult.t, default: nil) - The corpus selection result. Can be used for offline analysis.
*   snapshotQualityScore (type: float(), default: nil) - These scores are copied from htmlrender_webkit_headless_proto.Document.
*   withMissingResources (type: boolean(), default: nil) - True if there were any missing resources during the rendering.


Source infos are the canonical way to establish data provenance. They can currently be set on features, edits, and issues. Every feature has a repeated list of SourceInfoProto messages to describe the source data that was used in building this feature. The data includes a feature id that points to additional data about the data source (version, copyright notice, etc), and optional "raw data" that is taken directly from the provider's format and has not been converted to a canonical form.
*   attributionUrl (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreUrlProto.t), default: nil) - This is the URL of a page representing all the data from this source in this feature. It may have be the ultimate source of the data (in case of scraping) or merely the same data styled according the provider's taste. There is a similar field in DataSourceProto which is NOT cached in this field, since it has a different meaning.
*   collectionDate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDateTimeProto.t, default: nil) - The time that this particular piece of data was collected. If different attributes were collected on different dates, this is the date of the most recent edit.
*   cookie (type: String.t, default: nil) - A source info may have a magic cookie whose content and semantics are defined by the specific import process or third-party feed. For feeds that are processed by Distillery, the cookie, when set, should contain the unique identifier for the feature as provided by the feed.
*   dataset (type: String.t, default: nil) - The dataset from which this SourceInfoProto was created. The content of this string will be determined by the data provider (e.g. for MultiNet data, "fra" would indicate the dataset for France). This field is unnecessary for providers that deliver a single dataset per release (e.g. Basarsoft).
*   gaiaId (type: String.t, default: nil) - The Gaia ID of the user who provided us with this data. This field should never be set on source infos present on features, but may be set on source infos present on edits. DEPRECATED: Most clients should use the "user" field instead where Gaia IDs are encrypted.
*   impersonationUser (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreUserProto.t, default: nil) - Information about an internal user or system that is operating on behalf of user by way of impersonation.
*   layer (type: String.t, default: nil) - The name of the layer from which this SourceInfoProto was created.
*   ogrFid (type: String.t, default: nil) - The OGR feature identifier from which this SourceInfoProto was created. This is an internal OGR record identifier and has nothing to do with any of the feature's fields or the FeatureIdProto for the FeatureProto containing this SourceInfoProto. This field is present only for debugging purposes and possible use in the match pattern of a FeatureChangeProto designed to fix bad source data very early in the importing process.
*   provider (type: integer(), default: nil) - The data provider from which this source info was generated. The value must be equal to the one on the TYPE_DATA_SOURCE feature referenced by this source info via the source_id reference (see above).
*   rawData (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRawDataProto.t), default: nil) - A source info may optionally have a set of key-value pairs that provide "raw data" specific to that source. The types of raw data available will vary from one provider to another and should not be used in production code. Instead, new fields and/or protocol buffers should be defined to represent this information in a canonical form, and the relevant importers should be modified to populate these new fields.
*   release (type: String.t, default: nil) - The data release from which this SourceInfoProto was created. The format for this string is provider-dependent (e.g. a MultiNet release would look like "2008.01").
*   sourceId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - A source info may have a corresponding TYPE_DATA_SOURCE feature that describes it (provider, copyright information, date of release, etc). In the context of edits and issues, this field should not be set.
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a source info. Never set in MapFacts.


============================ Next Tag: 22 ============================ Data about the scheduling host bucket a URL was in (if the client wants to use this, e.g. for more intelligent scheduling, etc).
*   ClientWeightFraction (type: number(), default: nil) - belong to the client How much weight the client
*   CurrentActiveConnections (type: integer(), default: nil) - How many connections are actively used for downloading ?
*   IsFull (type: boolean(), default: nil) - Is this bucket currently full ?
*   LastScheduleIntervalMs (type: String.t, default: nil) - How many ms ago we last scheduled a url
*   MaxActiveConnections (type: number(), default: nil) - The current hostload value (# of connections) - if negative does not apply
*   MediumTermLoad (type: number(), default: nil) - The load the recent times (the actual hostload that we apply is MaxActiveConnections / MediumTermLoad) - a hostload of 1.00 is normal, while over 1.0 is higher than normal load
*   MinInterRequestSecs (type: number(), default: nil) - The min delay between requests (in secs) - if negative does not apply
*   NonFullIntervalMs (type: String.t, default: nil) - If is full, when is becoming non-full (in ms)
*   TotalCapacityQps (type: number(), default: nil) - The following four fields attempt to make things simpler for clients to estimate available capacity. They are not populated yet as of 2013/08/21. Even after they are populated, they may change. So talk to trawler-dev@ before you use the fields. Total qps for this hostid


Represents the output of the Action Executor.
*   ruleActionsPairs (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1RuleActionsPair.t), default: nil) - List of rule and corresponding actions result.

NOTE(gponcin) 2008/11 This is repeated for articles where we may have multiple links in one entity. From Vivek (Atlantis): "The block segmenter outputs a list of headlines on a page as a single logical entity that we attach to the logicalentity(1) for the goodoc."
*   Anchor (type: String.t, default: nil) - The preferred way to link to an element is to create an AnchorLabel in the target element and name it here. Multiple elements may contain the same Anchor string.
*   DocId (type: integer(), default: nil) - Links may also specifically locate the target element with the following indices. Note that during the course of layout analysis, goodoc elements may move around, so such hard links should be created only very late (or not at all -- Anchors would be more reliable target addresses).
*   Url (type: String.t, default: nil) - If not defined, link points to the current doc


A structure used to configure a notification to a user.


This is a copy of quality_contra::SelectedAttribution::SelectedInfo. The url is converted to docid and other fields are copied directly.

A RawDataProto is a key-value pair that represents arbitrary source data from a particular provider. Raw data can be attached to features using their source_info field.
*   key (type: String.t, default: nil) - The key associated with this data item. For source data in shape file format, this will typically be a column name. Keys need to be unique with respect to a particular data source (see DataSourceProto), but they do not need to be globally unique. You can look up the documentation for a key (e.g. a longer label and description) by following the source_id link of the parent SourceInfoProto, which takes you to a TYPE_DATA_SOURCE feature, and then looking up the corresponding RawMetadataProto object for this key in that feature's optional data_source field.
*   valueString (type: String.t, default: nil) - All data items are represented as strings, the logic being that it is easy to convert other data types to strings, and there is no need to access this data efficiently.


A restriction group represents common properties of a set of restrictions on segments that are associated with the same underlying cause across a geographic region. Every segment referenced by this restriction group should have at least one restriction that refers backs to this restriction group. The standard feature properties have the following interpretations: name - A name that represents the name for this restriction group. kg_property - A reference back to a KG event in case this restriction group belongs to an event in KG. /geo/type/restriction_group/associated_event contains a mid to the associated event.
*   segment (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - FeatureId of all segments that have a RestrictionProto referring back to this RestrictionGroup.

Contact level People Prompt settings. This message is a pure wrapper of the shared ContactPromptSettings message so that it can be a top-level person field. No other fields should be added to the message.

Contains the format information for a single LiveOp/LiveEvent. Next ID: 11

This message holds bounding boxes of detected people in the image. Next ID: 3
*   detectedPersons (type: list(GoogleApi.ContentWarehouse.V1.Model.LensDiscoveryStylePersonDetectionSignalsDetectedPerson.t), default: nil) - Information of all detected people in the image, sorted by decreasing size of the bounding box. We store a maximum of 10 detected people.

A dimension value tagged with a comparison operator. This can be used for height, width, or length.

Encapsulates sensitivity mode, source, and other metadata, used for ranking when there are multiple sensitivies set by default sources (eg, followon, query understanding, attentional entity).
*   accountProvenance (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityQrewriteAccountProvenance.t), default: nil) - Propagated from knowledge.answers.sensitivity.Sensitivity account_provenance. Any ambiguity between the data here and dasher_user should be resolved by the conversion to pToken in http://source/search?q=symbol:CreatePTokenFromSensitivity
*   dasherUser (type: boolean(), default: nil) - True iff the query is from a Dasher user.





Specifies the types of device surfaces. LINT. IfChange When adding new surface types make sure that My Activity (https://myactivity.google.com/product/assistant) will correctly render by adding your enum to http://cs/symbol:GetAssistSurfaceName%20f:%5C.cc$ If your type doesn't fit in to any of the existing surfaces messages, add a new message in http://google3/personalization/footprints/boq/uservisible/events/intl/smh_frontend_messages.h.


PToken expresses policy-relevant properties of the data objects being processed and stored in Google's production systems. See go/ptoken to learn more. PTokens are intentionally opaque: go/ptokens-are-opaque. The following should be considered implementation details. Next ID: 9 LINT. IfChange INTERNAL: If both the Scalar and the Compound extensions are populated, we use the Compound and discard the Scalar. In principle, this should never happen.

Corresponds to an entry in our hand-curated Nimble table of providers.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!


A dimension with a numerical value and unit. This can be a height, width, or length.

Contains one or more possible values.


Identifiers are references to a specific entity of a specified type, such as a TIMER_ID XXX. For more backround and uses see go/grounding-common-ids.





Information about all ranges explained by the entity or any other entity it implies. For example, the Zurich entity may explain both tokens "Zurich" and "Switzerland" in [FIFA Zurich Switzerland], the first directly, the other via implication. Only used in the context of query annotation.
*   explainedRange (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExplainedRangeInfoExplainedRange.t), default: nil) - All ranges explained by the entity.

Below is some horrible ASCII art and a description of the components of a road sign. +-------------------+ | A11 E50 Paris | | Chartres | +-------------------+ This sign would be composed of four components (all of them text components, the only option we support for now). The three in the first row would all have a "major_position" of zero. Their "minor_position" values would be zero for "A11", one for "E50", and two for "Paris". The component in the second row would have "major_position" value of one. This message provides the details of a single component of a road sign. A component defines its position within a sign, its type, and its content.
*   featureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The id of the feature referred to by this component, typically the route or locality feature this sign points towards. In the ASCII art example above, this field would contain the id for the routes A11 and E50 and the localities Chartres and Paris in the corresponding component.
*   featureType (type: integer(), default: nil) - The type of the feature referred to by this component. If feature_id is specified type of that feature should be the same as this field.
*   majorPosition (type: integer(), default: nil) - This is the "major" position of this component within the set of components that make up a sign. This number can be thought of as the "row" of the sign on which the component appears, but no guarantees are made that there is a one-to-one mapping between "major_position" and the rows of information on the actual sign being modeled. A "major_position" value of zero would indicate that the component is near the top of the sign.
*   minorPosition (type: integer(), default: nil) - This is the position of a component within the components of a sign that share a common "major_position". It can be though of as the "column" of the component, but like "major_position", no guarantees are made regarding its mapping to reality. For data sources that don't provide enough information to determine a component's major and minor positions, major position should be populated and minor position should not be present. A "minor_position" value of zero would indicate that the component is near the "beginning" of the sign. In countries where signs are read from left to right, "minor_position" zero would be near the left side of the sign.
*   routeDirection (type: String.t, default: nil) - The direction of traffic for the referenced TYPE_ROUTE feature.
*   text (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreNameProto.t, default: nil) - If this sign component is of type "TYPE_TEXT", this field contains the text of the component. A NameProto is used to allow language and flags to be associated with the text.
*   type (type: String.t, default: nil) - This type of content represented by this sign component.


Extension data for use in Hangouts.
*   invitationStatus (type: String.t, default: nil) - Populated for all contacts. Only set if had_past_hangout_state == HAD_PAST_HANGOUT. INVITATION_NEEDED is not a valid value because there already is a past hangout, which means either the invitation is still pending or it’s been accepted.
*   isBot (type: boolean(), default: nil) - True if this is a Hangouts bot.

Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
*   auditLogConfigs (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleIamV1AuditLogConfig.t), default: nil) - The configuration for logging of each type of permission.
*   service (type: String.t, default: nil) - Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.

ModerationInfo stores the information of moderation for a stanza in a specific destination stream. Including who moderated and why.
*   moderationReason (type: String.t, default: nil) - The reason why this stanza was moderated provided by client.
*   moderatorType (type: String.t, default: nil) - Type of moderation. Semantically REQUIRED, http://go/required At write time, only ModeratorType.AUTO_MODERATOR is allowed. For all other cases, this information is inferred from the request at write time.


The following protobuf is used to store an attribution from one page to (usually) one other page, giving credit for the content. This information is used during ranking to promote the attributed page. This protobuf is copied from a quality_contra::SelectedAttribution. See //quality/contra/authorship/attribution and https://qwiki.corp.google.com/display/Q/ContentTrackingContentAttribution.


A measured value of a product (e.g. Hard drive size = 1 TB). The value is measured in the facet's base unit. This does not necessarily match the unit expressed by the user in the query. The exact unit is known to the O4 server and is used in fulfillment.

LabelGroup is a set of labels produced by a single model, or by multiple models that share the same versioning. It can be used to store results from ICA, box classifier, visible labels, noun+attribute, and so on.

This message provides a container for any signal used in scoring, and allows UrlPatternSignals to extend beyond (regexp_)pattern_score and pagerank_score.

Pointer to a contiguous range of nodes in a target scale. pointer. Span fields should be annotated with a (pointer.to) annotation, indicating what scale they point at.
*   limit (type: integer(), default: nil) - The exclusive end index for the span of nodes that this pointer points to -- i.e., one plus the index of the last node in the span. Must be greater than or equal to start. If equal to start, then the target span is empty.
*   start (type: integer(), default: nil) - The inclusive start index for the span of nodes that this pointer points to -- i.e., the index of the first node in the span.

A MeasurementType configures a value that consists of a measurement. The expected value should have a number and a mid representing the unit. Note: this is currently only used for attribute answer value types. Configuration intent slot as measurement is yet to be supported (or instead we should universally use SemanticType).
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

------------------------------------------------------------------------- The total number of anchors collected per dupforwarding (including the canonical itself). Includes additional data about redundant and offdomain counts and the last timestamp it was collected from.
*   anchorCount (type: integer(), default: nil) - Count of anchors kept from forwarding.
*   collectType (type: integer(), default: nil) - This is EcnCollectType in anchor-ecn-matcher.h for the latest ECN of this dup: - kCollectNormal = 0, // Normal collection. - kCollectUnforwarded = 1, // Forwarding leader docid match only. - kCollectWhitelisted = 2, // Collected anchors matching whitelist. - kCollectNone = 4 // Skipped ECN anchor cluster.
*   dupUrl (type: String.t, default: nil) - If missing, the same as the canonical.
*   scannedAnchorCount (type: integer(), default: nil) - The number of anchors being scanned from storage per dupforwarding.
*   timestamp (type: integer(), default: nil) - Walltime when this was scanned last.

NOTE: These comments should stay in sync with the comments in logs/proto/knowledge/interpretation/intent_query.proto LINT. IfChange The argument comes from the current query. For example: U: Book a hotel in Paris. [BookHotel(location=/m/paris)] The "location" argument would have a provenance of CURRENT_QUERY.
*   evalData (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t), default: nil) - The span(s) in the query where the value comes from. Note that if the argument is split across the current and previous query, this message should NOT be populated. Please use PreviousQuery below, populating it's eval-data fields accordingly.




Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.
*   cols (type: integer(), default: nil) - Number of columns in the matrix.
*   rows (type: integer(), default: nil) - Number of rows in the matrix.
*   type (type: integer(), default: nil) - This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html

Stores the information about a dataset replica. Next ID: 5
*   catalogName (type: String.t, default: nil) - The name of the catalog that the replica comes from.
*   catalogUrl (type: String.t, default: nil) - The url of the catalog that the replica comes from.
*   indexInCluster (type: integer(), default: nil) - The index of this replica in a cluster of replicas.


Various external IDs that we may have for a given LocalResult. These IDs can map to the corresponding result in other Google systems (KnowledgeGraph) or in third-party systems (OpenTable).
*   blueGingerSupportedServices (type: GoogleApi.ContentWarehouse.V1.Model.BlueGingerClientVisibleProtoBlueGingerSupportedServices.t, default: nil) - This field tells us whether this LocalResult supports any of the services that Blue Ginger offers.
*   maddenSupportedActions (type: GoogleApi.ContentWarehouse.V1.Model.GeoOndemandAssistantSupportedActions.t, default: nil) - Google-internal actions supported by go/madden for this LocalResult.

This message is used for storing smartphone related information. Note: MobilePerDocData is a similar message, but it's for lowend mobile.
*   DEPRECATEDDesktopCanonicalDocid (type: String.t, default: nil) - If set, this page is a smartphone dup, a page serving equivalent contents as another URL (desktop canonical), but in smartphone-optimized style. This field holds the docid of the desktop canonical.
*   DEPRECATEDMobileHomepageDocid (type: String.t, default: nil) - Mobile URL for homepages, predicted by the URL rewrite rules. See go/mobile-homepage-prediction.
*   adsDensityInterstitialViolationStrength (type: integer(), default: nil) - Indicates if the page is violating mobile ads density interstitial policy and the violation strength. See go/interstitials-for-ads and http://ariane/268642 for details. To save indexing space, we convert the double values in [0.0, 1.0] to intergers in range [0, 1000] by using floor(value * 1000).
*   isErrorPage (type: boolean(), default: nil) - Indicates if the page serves error to smartphone crawler. go/ramsey-sp404demotion
*   isN1Redirect (type: boolean(), default: nil) - Indicates if the page has mobile N-1 redirection. go/ramsey-n1demotion
*   isSmartphoneOptimized (type: boolean(), default: nil) - Indicates if the page is rendered in a friendly manner on smartphones. We use this field as tri-state: "unset" means the rendering result classification is not available, and "set as false" means that the page is rendered in unfriendly manner on smartphones. See also go/modena-ranking.
*   isWebErrorMobileContent (type: boolean(), default: nil) - Indicates if the current URL serves error page to desktop crawler and non error page to smartphone crawler.
*   maximumFlashRatio (type: float(), default: nil) - The ratio of the area of the largest Flash to the render area.
*   violatesMobileInterstitialPolicy (type: boolean(), default: nil) - Indicates if the page is violating mobile interstitial policy and should be demoted. See go/interstitials-ranking-dd for details.

Deprecated, do not use.

Message to which we attach to web documents in order to decide which LiveResult to trigger. Next ID: 3
*   docBoost (type: list(GoogleApi.ContentWarehouse.V1.Model.WeboftrustLiveResultDocBoostData.t), default: nil) - Information about potential rank boosting for the document by virtue of its Live Result feed.
*   providerAttachment (type: list(GoogleApi.ContentWarehouse.V1.Model.WeboftrustLiveResultProviderDocAttachment.t), default: nil) - Identifies a Live Result which is to be attached to the document.

Timed text stream description with no PII. Currently used by originals replacement pipeline to exclude all clips that have timed text streams. Add fields to proto if we want to only exclude clips with certain types of timed text streams in the future.


The user mentioned this entity. It was extracted from a previous winning intent (IntentQuery or IntentUpdate). Such entities are computed at runtime from the interpretation history without any developer intervention.

A MONTHLY recurrence can be one of a MonthlyDayRecurrence or MonthlyWeekdayRecurrence but not both. Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)

These are copies of MetadataNumberingRange's from ocean/metadata/metadata_range.proto. They should be used for rendering volume numbering information in search results (as this protobuf is the only piece of data available at that point). The numbering can look like "Volume 1" or "Parts A-D" Schema is volume/part/etc, type arabic number/roman number/letter/etc (these are both enums from ocean/metadata/metadata_enums.proto). In most cases there is only one numbering range (e.g. "Volume 1, Issue 2"), but in general the ranges may be disjoint (e.g. "Volumes 2, 3 and 7")


A transit line is a named set of transit trips that are advertised to passengers under a common name, and a number of attributes that are true for all those trips. There is no requirement for each trip to travel through the same list of stops or use the same legs, so a line can contain trips in opposite directions or with variations in the sequence of stops. See go/oysterpedia for an overview of the transit feature types. The standard feature properties are interpreted as follows: name - The names of this line, including both long and short names, if available. Short names like "10" or "Blue" should carry the FLAG_ABBREVIATED, long names like "Dublin/Pleasanton line" should not. The preferred name (one per language) for displaying the line on its own (e.g., as a search result for the line) should carry the FLAG_PREFERRED. website - The official web page describing this line. Repeated if multilingual. Line features have no geometry (neither points nor polylines nor polygons). Within Transit Oyster, geometry can be found in legs. Additional data only in Transit Oyster: child - The legs of this line, in no particular order. source_info - Specifies the GTFS routes that match this feature. Each is given as a PROVIDER_GOOGLE_TRANSIT source_info where dataset is the feed name and cookie is the route_id.
*   agency (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The transit agencies responsible for operating this line. All lines should have at least one agency, and most will have exactly one. The following cases are reasons for multiple agencies: - Code share: Two or more agencies share trips - Alternations: Each trip is run by one of multiple agencies - Additional: All trips run by one agency, but a second one sells tickets In all cases the order has no meaning. Clarification comes from the trips.
*   labelBackgroundColor (type: integer(), default: nil) - The background color of labels for that transit line. The encoding is like in HTML or CSS, eg. 0x11ff00 means a bit of red, full green, no blue, in sRGB color space. The most significant byte must be zero, i.e. no transparency.
*   labelTextColor (type: integer(), default: nil) - The text color of labels for that transit line. Encoding like label_background_color.
*   stations (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The transit stations (establishment POIs with gcid:transit_station) which this transit line can go through, in no particular order. Usage note: The source of truth are the transit leg features in Transit Oyster. In MapFacts, that information is cached in two locations: in this field, and in transit station attachments on POIs. Do not assume these locations are always up to date and/or synchronized with each other.
*   vehicleType (type: String.t, default: nil) - The type of vehicle that applies to all trips that use this line.


Additional properties that client can support for executing the client op. They are surface-specific execution properties and are unrelated to the execution model.
*   supportsPartialFulfillment (type: boolean(), default: nil) - ClientOp execution supports special rendering behavior while the user is in the middle of expressing their query. This behavior includes: 1) New partial output always over-writes prior partial output. 2) Canceling the interaction removes partial fulfilment from any user visible interaction history. If this is true, whether to apply the special rendering behavior will be determined by PartialFulfillmentRenderingParams. More details can be found at go/ma-natcon-pf-api.
*   supportsSynchronousExecution (type: boolean(), default: nil) - Client can support synchronous execution of the client op. For tts.OUTPUT client op it means that client would honor |synchronous_playback_args| argument. Please see more at go/synchronous-sounds-design.


The actual status of the user. The message contains everything needed for visualisation of this status.
*   calendarBusy (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaCalendarBusy.t, default: nil) - Set if the user is temporarily busy and there is not a more specific status derived from calendar that applies (e.g., InMeeting or DoNotDisturb).
*   doNotDisturb (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaDoNotDisturb.t, default: nil) - Set if the user is in a Focus Time block. Note that this is different than Chat's Do not disturb status, but they may coincide, see: go/focus-time-dnd.
*   inMeeting (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaInMeeting.t, default: nil) - Set if the user is in a meeting.
*   inactive (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaInactive.t, default: nil) - Set if no other statuses apply.
*   outOfOffice (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaOutOfOffice.t, default: nil) - Set if the user is out of office.
*   outsideWorkingHours (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaOutsideWorkingHours.t, default: nil) - Set if the user doesn't work at this time.







The gesture capabilities related to Selina. Next ID: 4
*   gestureSensing (type: boolean(), default: nil) - Whether Gesture is supported. When false, override the value for tap and omniswipe.


Generic item proto. This is intended to have only certain aspects filled (e.g. photo only, name + price). Valid combinations of properties are enforced by linters.
*   callToAction (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCallToActionProto.t, default: nil) - Call to action for the individual product.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - The repeated name_info field is for price list sections listed in multiple languages. At least one name_info containing id must be specified. There should be at most one name_info for any given language. When representing a job item, there should be exactly one name_info specified.
*   offered (type: String.t, default: nil) - Represents if an item is offered at a business. For TYPE_JOB, this represents if this job is offered by the corresponding business
*   price (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePriceRangeProto.t, default: nil) - Price of the item. There should be at most one price for any given currency.
*   priceFormat (type: String.t, default: nil) - Represents which price format is being used by this item, which determines the usage/meaning of the “price” field above. Optional – the default value is legal and safe (represents no price if the “price” field is unset).
*   rankingHint (type: number(), default: nil) - Numerical score which can be provided by data sources to indicate preferred item ordering. This is purely a hint – we are not required to followed it if we have a different order we think is better. Higher scores represent items that should be shown more prominently/earlier. Optional.


versionAndImprovInfo (type: integer(), default: nil) - First 7 bits encode the version, then each chunk of 5 bits encode the index of a potential improv query (lsb to msb) -------|-----|-----|-----|-----|----- version| id1 | id2 | id3 | id4 | id5 where id1 is the index of the first improv query in the improv debug table. As of cl/270008220, this field only contains the version info. For backward compatibility, version still only uses the first 7 bits, and is still prepended by 5 1 bits.

A PriceListNameInfoProto is used by PriceListProto and fields and messages contained in it for storing names, descriptions, languages, and IDs. The name field and the description field must be in the same language, as specified by the language field. None of the fields in this proto is required, although it is not expected to have the language field set unless there is a name or description. When the language field is not set, it is understood to be the preferred language of the locale where the establishment is located. An empty string for any of the fields is not allowed (as enforced by lints).
*   id (type: String.t, default: nil) - IDs are intended to be unique identifiers of PriceInfoLists, Sections, and Menu items. This is enforced by the ID_DUPLICATE_PRICE_LIST_ID lint.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. We place extra restrictions on languages in addition to what the III library requires. See go/geo-schema-reference/feature-properties/languages.

Information to indicate BG availability for businesses. This message is filled from Topic Server and stored in the GSR in Superroot.




Metadata fields on which we can bias (sort) search results independently from the normal ranking using a ScoreAdjuster
*   Name (type: String.t, default: nil) - Fingerprint of the attribute name (no need to keep long field names)
*   Value (type: float(), default: nil) - Biasing value translated into a double for uniform comparison

Metadata information about a profile. This message replaces legacy profile-specific singleton fields from the PersonMetadata proto (singleton top level Person fields are not compatible with non-profile-centric person results, which may include multiple profile containers).
*   accountEmail (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAccountEmail.t, default: nil) - The account email linked to the profile, if any exists and is visible to the requester.
*   blockType (type: list(String.t), default: nil) - Indicates whether the profile owner has blocked this person.
*   customerInfo (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiCustomerInfo.t, default: nil) - CustomerInfo for dasher user. The reader has to explicitly request this in the field_mask as 'read_only_profile_info.customer_info'
*   domainInfo (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiReadOnlyProfileInfoDomainInfo.t, default: nil) - DEPRECATED. Use the ReadOnlyProfileInfo.customer_info field instead (b/138120418). Only populated if in_viewer_domain is true.
*   inViewerDomain (type: boolean(), default: nil) - DEPRECATED. Proxying trust between users in a domain should use go/flex-orgs-platform. For more info see: http://doc/18i0-C7vWcz2UuXYBsmulnriVCK3_EuMPpRlPa2OmMHw#heading=h.dobotdwx25kg Indicates whether the profile owner is in the same domain as the viewer.
*   incomingBlockType (type: list(String.t), default: nil) - Indicates whether this person is blocking the profile owner.
*   ownerId (type: String.t, default: nil) - The Focus-obfuscated Gaia ID of the profile owner (go/obfuscated-ids).
*   plusPageType (type: String.t, default: nil) - DEPRECATED. Please use person.plus_page_info instead.
*   unjoinedEmailCertificates (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmail.t), default: nil) - Returned only when explicitly requested in the request mask as read_only_profile_info.unjoined_email_certificates. Equivalent to fetching the Emails & the Email Certificates with the acls ignored.

Metadata for a radio station (both terrestrial and internet). Next ID: 4
*   popularity (type: float(), default: nil) - Popularity of the radio station. This will be used in ranking of the radio stations. This value should be between 0 (least popular) and 5 (most popular).


A document token marks a span of bytes in the document text as a token or word. Next available index: 16.
*   breakSkippedText (type: boolean(), default: nil) - Whether the break skipped over non-tag text (excluding script/style).
*   category (type: String.t, default: nil) - Coarse-grained word category for token. See README.categories for category inventory.
*   head (type: integer(), default: nil) - Head of this token in the dependency tree: the id of the token which has an arc going to this one. If it is the root token of a sentence, then it is set to -1.
*   label (type: String.t, default: nil) - Label for dependency relation between this token and its head. See README.labels for label inventory.
*   lemma (type: String.t, default: nil) - Word lemma. This is only filled if the lemma is different from the word form.
*   scriptCode (type: String.t, default: nil) - A string representation (typically four letters, sometimes longer) of the token's Unicode script code, based on BCP 47/CLDR, capitalized according to ISO 15924. See i18n/identifiers/scriptcode.h for details.
*   start (type: integer(), default: nil) - [start, end] describe the inclusive byte range of the UTF-8 encoded token in document.text. End gives the index of the last byte, which may be a UTF-8 continuation byte, and the length in bytes is end - start + 1. begin/end options are for goldmine AnnotationsFinder to locate the offsets of saft tokens. Start is inclusive by default and end is marked.
*   tag (type: String.t, default: nil) - Part-of-speech tag for token. See README.tags for tag inventory.
*   tagConfidence (type: number(), default: nil) - Confidence score for the tag prediction -- should be interpreted as a probability estimate that the tag is correct.
*   word (type: String.t, default: nil) - Token word form. This may not be identical to the original. For example, in goldmine annotation we do UTF-8 normalization and punctuation normalization. The punctuation normalization includes inferring the directionality of straight doublequotes -- that is, we map " to open quote (``) or close quote (''), and sometimes we get it wrong. SAFT processing in other contexts (such as queries in qrewrite) involves different normalizations.

Proto used to represent rights for FeatureProto. See go/geo-rights for more details. NOTE: Use google3/geostore/provenance/public/rights.h or google3/java/com/google/geostore/provenance/rights/Rights.java instead of accessing this proto directly.


DEPRECATED in favor of ProfileStats. Stats pertaining to incoming edges and views, visible to the requester (with acls applied). Related to, but not equal to, com.google.focus.proto. Storage.UserVisibleStats.
*   incomingAnyCircleCount (type: String.t, default: nil) - Replacement for deprecated follower_count. Comes from the EdgeSummary.


Pronunciation audio metadata info. See go/name-pronunciation-backend. The metadata itself tracks the state of a user's name pronunciation audio.

DEPRECATED These capabilities are associated with speech detection on devices.

A message that stores relations between this annotation and another entity. Stores the mid and the kind of relationship. These links may be consumed downstream for various purposes, including support transfer and other business logic. An example is for the Honda Civic entity. It may have an mdvc_relation that is a generalization_of the 2015 Honda Civic entity. So the Honda Civic would have the following: RelatedEntity { mid = 2015 Honda Civic Mid mdvc_relation = GENERALIZATION_OF } It has no equivalent_relation because it is by default NO_EQUIVALENT. The Honda Civic entity might then have a separate relation to the Old Honda Civic entity, as they are considered the same entity, or the following relation: RelatedEntity { mid = Old Honda Civic Mid equivalent_relation = EQUIVALENT }
*   clusterSupportTransferRelation (type: String.t, default: nil) - Denotes whether or not the related entity is derived from cluster support transfer.
*   composedFromRelation (type: String.t, default: nil) - Denotes whether or not the related entity composes a compound entity together with other related entities.
*   equivalentRelation (type: String.t, default: nil) - Whether or not the given mid is related to the other mid. Equivalent mids are usually mutually exclusive with other kinds of relations.
*   mdvcRelation (type: String.t, default: nil) - The mdvc relation with the related mid.
*   supportTransferRelation (type: String.t, default: nil) - Denotes whether or not there was support transfer between the two entities.
*   targetIsStbrSource (type: boolean(), default: nil) - Set if the related entity is the source of an STBR rule and the target is not this one.




WebIO is the new hostload model introduced in 2023. It measures the occupancy of 1 outgoing fetch connection for 1 minute.

Holds annotator checkpoints which record the state of the annotations. This is useful for tracking down the source of diffs, in particular for non-determinism.

The context indicating the user's upcoming Out of Office event.
*   timeRange (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaTimeRange.t, default: nil) - The future period of absence. The start of this timerange is the start of the future Out of Office event. The end of this timerange represents the come back time of the user from that future OOO event. Note that the come back time might be different (greater) than the end of the corresponding future OOO event due to other non-working user status intervals that it may be followed by.

Information about the state of the device. This contains any state that Assistant may need to know about in order to fulfill requests, for example which timers and alarms are set. Next ID: 13
*   alarmState (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarms.t, default: nil) - Optional Information about on-device alarms. For devices that support alarms, all on-device alarms must be sent up with the DeviceState in order for Assistant Server to be able to perform operations on them.
*   contextParams (type: String.t, default: nil) - Other context params to be sent to Assistant. This is a assistant.embedded.v1.ContextParams message in serialized binary proto format.
*   deviceTime (type: DateTime.t, default: nil) - A timestamp of the current device time when the request was made. This field is required if your device supports alarms or timers. This ensures that requests are fulfilled relative to the current device time and regardless of any clock skew between the client and the server.
*   deviceTimeZone (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeZone.t, default: nil) - The time zone where the device is currently located. This helps the Assistant answer time-related queries relative to the device's time zone. Generally speaking, mobile devices that support alarms or timers should supply device_time_zone. This field is required if your device supports alarms or timers and the device's location cannot reliably be determined. (See the comment above google.assistant.embedded.v1.DeviceLocation for a description of how the device's location is determined.) If the time zone cannot be determined, some queries for creating or modifying timers or alarms may fail with a generic error such as, "Sorry, I don't know how to help with that."
*   doNotDisturb (type: boolean(), default: nil) - Indicate whether do not disturb mode is turned on.
*   fitnessActivitiesState (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1FitnessActivities.t, default: nil) - Information about on-device fitness activities. For devices that support fitness activities, all on-device fitness activities must be sent up with the DeviceState in order for Assistant Server to be able to perform operations on them.
*   installedApps (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1DeviceStateInstalledAppsState.t, default: nil) - Information about apps currently installed on device.
*   timerState (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Timers.t, default: nil) - Optional Information about on-device timers. For devices that support timers, all on-device timers must be sent up with the DeviceState in order for Assistant Server to be able to perform operations on them.
*   unavailableSettings (type: list(String.t), default: nil) - This indicates which specific settings are currently unavailable for modification, despite being listed as a supported setting. Assistant can use this field to trigger unavailability messages, rather than claiming that a setting is entirely unsupported on device.


Note: This message is also in the RTUpdate protocol buffer.
*   mobileurl (type: String.t, default: nil) - DEPRECATED: Url of the mobile version of the document. This is set during canonicalization if we do not know that the Web url also serves the mobile version.
*   transcodedPageScore (type: integer(), default: nil) - DEPRECATED: The transcoded page quality repesented in 7-bits range from 0 to 127.

Create UnionCatalog as a group if we want to later add book level informations.
*   NumLibraries (type: integer(), default: nil) - Information about the number of libraries the citation appears. It should be useful for ranking.

A line variant is a specific instantiation of a line concept, denoted by the ordered set of stops and collection of segments that it traverses. Line variants are modeled as TYPE_ROUTE features with gcid:transit_line_variant. This proto stores line-variant-specific information that is not generally applicable to all routes. Schema Design Doc: go/transit-line-concepts-and-variants
*   stops (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreServicedStopProto.t), default: nil) - Ordered list of stations or platforms serviced by this line variant. The order is captured by the ServicedStopProto.index field.

SimpleSecretProto (in authenticator.proto) and SimpleSecretHolderProto (below) share the notion of a "label", which identifies a particular secret without (hopefully) revealing the secret. Note that a SimpleSecretLabel only disambiguates between secrets used to get access to some particular object. Two different secrets that apply to two different objects could have the same label. For example, in the common sharing model, each object has no more than one "auth key". Therefore, the label for an auth key simply has type = AUTH_KEY with no additional information. In theory, we could add some sort of resource ID to SimpleSecretLabel to make it more explicit. However, in practice, this is never really needed. A SimpleSecret for one object is never used to authorize a request on some other object, so there is no ambiguity. Also, since SimpleSecrets must obviously be unguessable, there is no risk that a SimpleSecret intended for one object will accidentally grant access to another.
*   capabilityId (type: integer(), default: nil) - DEPRECATED (3-Oct-2011)  This field should be deleted when code stops using CAP_TOKEN labels. Used when type = CAP_TOKEN. When a CAP_TOKEN label appears in a SimpleSecretHolder Principal, |capability_id| must be filled in to identify one of the capabilities on the ACL. When a CAP_TOKEN label appears in a SimpleSecret Authenticator, it is NOT necessary to fill in |capability_id| -- ACL Service will find the ID by searching all capabilities on the ACL for one associated with the token given by the SimpleSecret's secret data. If |capability_id| is specified, though, then the Authenticator will only be accepted if it actually matches that particular token ID.
*   type (type: String.t, default: nil) - This is optional because required enums cannot be extended.

Represents a geopoint, which is one of the possible Value types.

Message representing a versioned PairwiseQ scores used for experimentation. This protobuf is copied from quality_nsr_pairwiseq::PairwiseQVersionedItem.
*   confidenceValue (type: number(), default: nil) - The PairwiseQ confidence value corresponding to this version.
*   value (type: number(), default: nil) - The PairwiseQ value corresponding to this version.

Contains timing and text for a given label.
*   alignedOcrTexts (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOCRText.t), default: nil) - OCR anchors with overlapping time-window with this anchor
*   alignedTime (type: String.t, default: nil) - The time stamp in milliseconds for the reference text (e.g. description anchor time).
*   contextText (type: String.t, default: nil) - Text around the aligned_time of a long duration, say [-15 minutes, +15 minutes]
*   labelText (type: String.t, default: nil) - The main label text for the feature.
*   textSpanAtAlignedTime (type: String.t, default: nil) - The text span in the passage starting from the aligned time.





The value can either by a language code conforming to the IETF BCP 47 specification or a custom freeform value. By default the returned value is proxied from FBS Profile. Language. If include_account_locale is set on the MergePersonSourceOptions the language from go/uls is preferred and returned as primary along with a secondary language from FBS.

Uniquely identifies a semantic role. When this role corresponds to a slot in a registered user intent (see go/assistant-intent-catalog), then the SemanticRoleId maps precisely onto that slot in the intent catalog. However, not all semantic roles corresponds to such user intent slots.
*   intentId (type: String.t, default: nil) - Semantic roles will be defined locally, within the context of a single task/feature. The |intent_id| is a unique identifier for such a local cluster. In most cases, this should be exactly the same as the name of the intent used for TaskState (see go/assistant-intent-catalog). In cases where the intent isn't well-defined, this can be an arbitrary, feature-defined identifier.
*   roleId (type: String.t, default: nil) - Identifier for a semantic role, unique within the namespace of |intent_id|. When this role corresponds to a slot in the intent, the |role_id| should be equal to the name of that argument. For example, consider an entry in the intent catalog: core_intent { id { id: "BookARide" } slot { name: "provider" type { string_type { } } } slot { name: "num_riders" type { number_type { } } } } Then, the |role_id| would be "provider" or "num_riders" when referring to one of these slots. NOTE: when responding to the user, the Assistant may actually make use of other roles such as "ETA" or "driver" that are not part of the intent declaration. These should still be assigned consistent semantic roles. For example, a dialog with the Shopping feature: User: Where can I buy XYZ? Google: [Best Buy in Sunnyvale] has [XYZ] in stock. User: Great! Give me directions. In this case, both "Best Buy" and "XYZ" would be pushed to attentional entities. Best Buy, in this case, may not be an argument in the ShoppingItemStockInquiry intent, but should still have a consistent |role_id| such as "possessing_business".


Protocol message for data related to good travel sites. This data is stored as signals data in docjoins.
*   normalizationFactor (type: number(), default: nil) - Factor that determines how local anchor credit is scaled before being added to global anchors.

CityJsonProto is a custom proto representation of the portion of the CityJSON spec (https://www.cityjson.org/) relevant to internal projects. See go/cityjsonproto-design for more information about the modeling and design decisions implemented here. LINT. IfChange
*   cityObjects (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObject.t), default: nil) - City objects associated with this CityJsonProto.
*   transform (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoTransform.t, default: nil) - Spec for converting vertices from a local coordinate system in arbitrary units to ECEF coordinates in meters (https://en.wikipedia.org/wiki/Earth-centered,_Earth-fixed_coordinate_system).
*   vertexXyz (type: list(integer()), default: nil) - Vertices as local coordinates represented as a flattened list: [x1,y1,z1,x2,y2,z2,x3,y3,z3]. Vertices are relative to a local coordinate system and rounded to their nearest integer value. See transform for how vertices can be transformed from a local coordinate system into an Earth-centered, Earth-fixed coordinate system. Vertices are flattened for space efficiency, memory locality, and processing performance. To access the x,y,z coordinates of vertex N, read the values at indices 3N, 3N+1, and 3N+2.




This protocol buffer represents the 2D polygon connecting two segments at an intersection. Collectively, sweep polygons represent intersections for real road width rendering. Notes: - Sweeps represent geometry between the end of one segment and the end of the other segment (modulo retraction values). - Sweeps are strongly referenced, meaning geometry is stored on both segments involved in the sweep. For example, in the diagram below, the sweep between A and B would be stored on both segment A and segment B. | B | v --A--> - Sweeps are not strictly stored on adjacent segments. Disconnected segments (e.g., segments separated by an intersection group) may also contain sweeps.
*   otherSegmentFeatureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The segment feature connected to this segment via the sweep geometry.
*   polygon (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePolygonProto.t, default: nil) - Polygonal geometry representing the area between this segment and the other segment.
*   sweepCurve (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCurveConnectionProto.t, default: nil) - Describes parameters for generating the edge of this sweep that starts at edge_follows_segment_end_fraction. The other side of the sweep should be described on the sweep present on the sibling pair.
*   sweepToken (type: String.t, default: nil) - A token that can be used to identify the version of the data about this sweep.


Specifies intent that corresponds to a scalable attribute. This may be used as a location constraint, e.g. [restaurants with outdoor seating] or as a standalone categorical element, e.g. [happy hour] or [happy hour ny]. See go/scalable-attributes for details about scalable attributes. NOTE(oksana): LocalCategoryReliable grammar over-rides a few scalable attribute queries to include hyper_reliable location element. If you change this, please make sure that LocalCategoryReliable grammar reflects this too. LINT. IfChange This ID corresponds to the id field in //geostore/attributes/proto/config.proto:AttributeConfigProto This field holds the human readable ID for the KG topic that represents the attribute. Example: "/geo/type/establishment_poi/serves_breakfast"

Every data source used to construct a data repository has an associated feature that provides more information about it. The standard feature properties have the following interpretations: bound - The bounds must includes all features that refer to this data source, so that bucketing MapReduce passes work correctly. name - The provider name associated with this data source. It is expected to remain constant from release to release, and between datasets. address - should be empty. point, polyline, polygon - should be empty. source_info - should not be set. child - should be empty.
*   attributionUrl (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreUrlProto.t), default: nil) - This is the URL of a website representing this DataSource as a whole. If this DataSource feature is specific to a particular dataset or product, the page may contain information relevant to that dataset or product or may be the main page of the organization.
*   copyrightOwner (type: String.t, default: nil) - A UTF8 string that will be inserted in copyright messages to refer to this copyright owner, e.g. "Tele Atlas".
*   copyrightYear (type: integer(), default: nil) - The copyright year of this data (which may be different than the year of the release date), e.g. 2005.
*   description (type: String.t, default: nil) - A free-form description of this data source. Ideally the description should include: - Where the data was obtained (URL, company name, individual, etc). - Where to find detailed documentation. - A brief summary of the licensing terms. - As much internal and external contact information as possible (e.g. who to ask about licensing questions, interpreting the data, updating the data, fixing bugs in the importer, etc).
*   importerBuildInfo (type: String.t, default: nil) - The build information of the importer binary used to generate this data source.
*   importerBuildTarget (type: String.t, default: nil) - The build target of the importer binary used to generate this data source.
*   importerClientInfo (type: String.t, default: nil) - The Perforce client information of the importer binary used to generate this data source.
*   importerMpmVersion (type: String.t, default: nil) - If the importer was built as an MPM, the version number can be stored in this field. As with build_info, this can be useful when tracking down issues that may be due to the use of a particular binary.
*   importerTimestamp (type: String.t, default: nil) - The timestamp of the importer binary used to generate this data source.
*   provider (type: String.t, default: nil) - The provider type of this data source.
*   rawMetadata (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRawMetadataProto.t), default: nil) - For every key that is used in raw_data from this source, there must be a corresponding entry in raw_metadata that describes this key.
*   release (type: String.t, default: nil) - A release string that doesn't have to be a date. This is provided so that we can preserve provider release strings that aren't based on dates. If you don't set it, the release_date will get formatted into this field for debugging purposes.
*   releaseDate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDateTimeProto.t, default: nil) - The release date of this data.
*   sourceDataset (type: String.t, default: nil) - A data provider defined string describing the source dataset from which the features of this data source were generated. For example, the MultiNet "fra" dataset produces features for both France and Monaco.

Message to contain scoring / debugging information. If you want to add information which is not directly used in the final VideoAnchors data, it should be put here. Next ID: 14
*   descriptionAnchorSetFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDescriptionAnchorSetFeatures.t, default: nil) - Description anchor features for use in training.
*   filtered (type: boolean(), default: nil) - Whether or not the anchors will be removed in the final proto.
*   listTrainingDataSetFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchListTrainingDataSetFeatures.t, default: nil) - Set level metadata about the description anchors used to build training data for List Description anchors.
*   ocrDescriptionTrainingDataSetFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrDescriptionTrainingDataSetFeatures.t, default: nil) - Set level metadata about the join of description anchors and OCR data which is used to build training data.
*   qnaAnchorSetFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchQnaAnchorSetFeatures.t, default: nil) - Metadata such as model versions for Q&A anchors.

Map property value. Represents a structured entries of key value pairs, consisting of field names which map to dynamically typed values.


This message contains features for candidates at the chooser level. For each snippet candidate, we also log the final score as the last candidate feature.

Inferred geometry defines the geometry of a feature as the union or exclusion of the geometry of other features. For instance, the geometry of a timezone can be specified as the union of all the countries it applies to. In this scenario, the timezone will can be considered a "composite feature", while the countries are its "composing features". A composite feature must have a bidirectional reference between itself and all its composing features. A composite feature refers to its composing features via geometry_composition, while the composing features must refer back to the composing feature via defines_geometry_for. See: go/inferred-geometry and go/geo-schema:composite-geometry-editor for more details.
*   definesGeometryFor (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Features whose geometry depends on this feature's geometry.
*   geometryComposition (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreGeometryComposition.t, default: nil) - Features whose geometry defines the geometry of this feature (i.e. "composing features").

XtagList -- a collection of Xtag instances with unique names. This would be associated with one specific piece of content.

A Triple is a representation of data with a Subject, a Predicate, and an Object, For example: (Triple, IS-A, "data representation"). Triples are a very good representation of data where the relationship between data points is significant, because the Object of a Triple can be the Subject of another Triple: (Triple, HAS-A, Subject) (Subject, IS-A, "Term of a proposition") The ease with which Triples can represent relationships makes them an excellent candidate for representing graphs. Next id: 21
*   isNegation (type: boolean(), default: nil) - If is_negation is set to true then this triple is considered a statement that the fact is false. This allows for the storage of both what we know to be true and what we know to be false.
*   obj (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleObj.t, default: nil) - obj is the value of a relationship.
*   pred (type: String.t, default: nil) - pred is an arbitrary node id representing the predicate (name) of a graph relationship.
*   qualifierSets (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphQualifierSet.t), default: nil) - WARNING: This is currently defined for experimentation purposes only. Please do not set. Data set in this field will not be published to any systems downstream of Livegraph. Together with the SPO of this triple, each qualifier set here represents a different logical assertion/fact.
*   sub (type: String.t, default: nil) - sub is an arbitrary node id representing the source entity of a graph relationship.

A NumberType configures a value whose type is intended to be numeric.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   keepAsString (type: boolean(), default: nil) - If true, the semantics of the NumberType argument are retained as a string, rather than being converted to a float-type object. This option is particularly useful in cases where leading 0s in the user input are meaningful, e.g. for zip codes or sports jersey numbers. For the user- specified value "01", for instance, the PathQuery semantics will be: def $Slot "01"
*   rangeConstraint (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersRangeConstraint.t, default: nil) - Range constraint limits the set of numbers accepted by this type. The constraint applies to all subtypes. Currently, this constraint is only enforced in Loose Parser.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.
*   subType (type: list(String.t), default: nil) - sub_type is a list of the NumberSubTypes which are accepted. If the list is empty, that means all numeric or ordinal values are accepted. If multiple values are specified, then this value accepts any of the sub_types in the list.


Message to represent opening hours including regular weekly hours and a set of exceptions.
*   exception (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreExceptionalHoursProto.t), default: nil) - Date delimited exceptions to the typical recurring opening hours. May only be present if regular weekly hours are also specified.
*   regularHours (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreBusinessHoursProto.t, default: nil) - Typical recurring opening hours, expressed as a weekly schedule. NOTE: this field was introduced to have a more client-friendly format for representing weekly hours but, as of November 2018, it's not used for the main opening hours of TYPE_ESTABLISHMENT features (instead, the data is stored in the EstablishmentProto.hours field, see b/23105782 tracking the possible schema migration). It is however used in other contexts where OpeningHoursProto appears in the Geo Schema. In openinghours.h there is a utility function GetOpeningHoursFromFeature that merges EstablishmentProto.hours into this proto.

Representation of geometry including geometric primitives which are used as building blocks to construct geometries of varying complexity. Geometries vary both in type and in level-of-detail, enabling representation of any shape at any level of granularity. All geometries are ultimately composed of MultiPoints, which reference the actual vertices. Only linear and planar shapes are allowed, no curves or parametric surfaces.
*   lod (type: String.t, default: nil) - Level-of-detail (LoD) indicates how intricate the geometric representation is. May be a single digit per CityGML standards or X.Y per TU Delft (visual depiction at https://3d.bk.tudelft.nl/lod/). CityObjects may have multiple geometries with the same LoD.
*   multipoint (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint.t, default: nil) - For geometries consisting of a single point, line, or loop.
*   multisurface (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiSurface.t, default: nil) - For geometries consisting of a collection of surfaces.

Represents a user pseudonym. Pseudonyms are linked accounts on Google and third-party services (e.g. YouTube or Twitter) and are described by a Social Graph Node.
*   sgnDomain (type: String.t, default: nil) - The fields from ccc/socialgraph/socialgraphnode.proto:SgnNode that uniquely identify a social graph node. The 'ident' field is not included here because its value can be changed.





Specifies intent that corresponds to a menu item which is used as a location constraint, e.g. [restaurants that serve thai curry] or as a standalone categorical element, e.g. [thai curry].
*   menuItemId (type: String.t, default: nil) - This ID corresponds to the name of the menu item in the query. For example [restaurants that serve thai curry] has menu_item_id = "thai curry".

TimingStatPair message stores a timing period name and a time value. This is intentionally vague for doing fine level timing of rendering as what we measure is likely to change as we iterate. The intention is also that these values will just be dumped to varzs for evaluation purposed and not used programmatically.

Multiple entities can be identified on a document or query. Each entity can be mentioned several times in different positions on the document or query. This message describes a single mention of the entity. Note that a mention can be either explicit or implicit mentions. All explicit mentions refer to exact range in the document where the entity occurred, but implicit mentions may or may not have corresponding range. Next available tag number: 40
*   addedByCloseAnswers (type: boolean(), default: nil) - Whether this mention was created by CloseAnswers on Postref. This bit is populated into corresponding intent_query through Aqua.
*   additionalExplainedRange (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionAdditionalExplainedRange.t), default: nil) - If the mention's range is discontinuous, additional ranges that are a part of the mention but are not included in the begin/end range above.
*   begin (type: integer(), default: nil) - The [begin, end) byte offset, compatible with the Goldmine DocState representation. - For CONTENT, TITLE, META_CONTENT_TAG and IMG_ALT_TAG segments, the offsets are relative to the beginning of the document content. - For ANCHOR, QUERY, URL, IMAGE_QUERY, CONTEXT_ENTITY, CONTEXT_QUERY, SPORE_GRAPH, INSTANT_QUERY and VIDEO_TRANSCRIPT segments, the offsets are relative to the beginning of the corresponding (sub-)segment or text from doc attachment. The (indexing.annotations.goldmine) options are marks for Goldmine AnnotationsFinder to locate begin and end offsets in order to extract them
*   beginTokenIndex (type: integer(), default: nil) - The [begin end) token offsets in the Goldmine DocState. They follow similar rules as "begin" and "end" above, but for tokens rather than byte offsets. These fields are currently only populated by the query annotator.
*   compoundMention (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionCompoundMention.t), default: nil) - For a compound mention, the references to the entity and mention of the components. Each compound_mention claims one or more 'mrf' fields from the WebrefEntity owning this mention. Use QueryJoinToMeaningStructConverter to expand compound mentions into complete MRF.
*   confidenceScore (type: number(), default: nil) - A probabilistic score describing how certain the annotator is that this exact range in the document or query refers to the entity. Probability that a mention is correct corresponds to confidence score roughly as follows: 0.3 -> 75% 0.5 -> 87% 0.7 -> 89% 0.9 -> 94% 1.0 -> 98% However if you consider all mentions with a score above 0.3, then most of these will have scores close to 1, so the overall precision of these mentions is around 95%.
*   evalInfo (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionEvalInfo.t, default: nil) - Information used by the evaluation tools to mark mentions annotations as correct/incorrect. This will never be annotated in production (would be nice if was, though :-)).
*   isImplicit (type: boolean(), default: nil) - True if the entity is mentioned implicitly. Note that a mention can be implicit and have a non-empty range, for example if the entity is Sports, and this is inferred from the mention of "gym".
*   lexicalAnnotation (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLexicalAnnotation.t, default: nil) - Provides a Wordgraph lexical signals for the mentioned range so it can be use in LooseParsing. Please don't use this field before consulting wordgraph-team.
*   lowConfidence (type: boolean(), default: nil) - Qref & Postref only: Set to true for candidates part of qref candidate output for which there was no mention in qref. Internal to qref and LooseParsing. Do not use outside of these systems.
*   matchingText (type: String.t, default: nil) - Refcon-only: Annotated span in Refcon-normalized textual format, corresponding to the [begin end) offset interval in the CDoc. It will only be populated for CDocs originated from Docjoin extraction.
*   nameMetadata (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefConceptNameMetadata.t, default: nil) - Metadata attached to the name.
*   perMentionLightweightToken (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLightweightTokensPerMentionLightweightToken.t, default: nil) - Provides concised access to all matched MatchedLightweightToken.
*   priorProbability (type: number(), default: nil) - The prior probability of the entity for this mention.
*   referenceScore (type: number(), default: nil) - Whether the mention is a reference (e.g. it could be resolved to an entity coming from personal data) or not, currently only used for personal resolutions. Scores from 0 (not a reference) to 1 (reference). Use at your own risk as they are subject to change, advised to talk to refx-personal first.
*   resolutionScore (type: number(), default: nil) - Whether the mention is a resolution or not, currently only used for personal resolutions. Scores from 0 (not a resolution) to 1 (resolution). Use at your own risk as they are subject to change, advised to talk to refx-personal first.
*   stuff (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - Assorted things that can be added to a Mention.
*   subsegmentIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSubSegmentIndex.t, default: nil) - Identifies the sub-segment where the annotation occurs. See SubSegmentIndex for details. Not present in QRef, also deprecated for URL segment types.
*   trustedNameConfidence (type: number(), default: nil) - Confidence that this name is a trusted name of the entity. This is set only in case the confidence is higher than an internal threshold (see ConceptProbability).

This is similar to CrawlDates group in FetchReplyData, except that 1) it's a message; 2) it's filled in each Redirects hop; and 3) the timestamps are in ms rather than seconds since Unix Epoch.
*   NotChangedTimeMs (type: String.t, default: nil) - fetched from the web. Time when the page was last
*   OriginalCrawlTimeMs (type: String.t, default: nil) - Time when the page was
*   ReuseTimeMs (type: String.t, default: nil) - checked but found to be the same as before. If set, timestamp to indicate

Signals used for mining new reference pages, set by the reference-page-scorer processor.
*   bookScore (type: number(), default: nil) - Stores score for later offline voting to choose reference pages. If zero, it's not a good book reference page.
*   referencePageScore (type: number(), default: nil) - Reference page score used to select the reference page owner.
*   selected (type: boolean(), default: nil) - True if the entity is selected as the reference page owner.
*   singleTopicness (type: number(), default: nil) - A score in [0, 1] which indicates the single topicness of the entity.
*   singleTopicnessV2 (type: number(), default: nil) - This should have the same semantic as single_topicness, and should replace it in the long term.




This variant defines the frame to be a thumbnail of the video.





The result of PetacatAnnotator. Each result contains: 1. RephilClusters; 2. At most 5 verticals from each taxonomy, sorted by the probabilities in descending order. 3. Binary classification results about page types and sensitive content. The types of taxonomies include: verticals4, geo, verticals4_geo, products_services, icm_im_audiences and icm_im_audiences_dev.
*   rephilModelId (type: integer(), default: nil) - The id of the Rephil model used to generate the Rephil clusters. If it is absent, Rephil 4 is assumed.
*   url (type: String.t, default: nil) - not needed if the url is the sstable / bigtable key used during intermediate processing only
*   weight (type: String.t, default: nil) - The relative weight of this doc within a site, typically something like pagerank or navboost impressions. May be a large number (like an actual pageviews estimate), not limited to a small range.


A list of labeled spans of the same type.

Data which is produced for logging and debugging. Servers MUST NOT use this for any other purposes, such as branching on it. Next ID: 16
*   acpVersion (type: String.t, default: nil) - A user-readable string describing the ACP version (go/acp-version) of the client app used by the user to originate the conversation.
*   androidId (type: String.t, default: nil) - Random identifier assigned to Android mobile devices. Older logs may have previously stored other kinds of android IDs in this field, but all current logs should use the GServices Id. See go/androidids.
*   appVersion (type: String.t, default: nil) - A user-readable string describing the version of the client app used by the user to originate the conversation.
*   assistantSettingsSource (type: String.t, default: nil) - An enum specifying when was this ATV AssistantSettings entry initially created.
*   boardName (type: String.t, default: nil) - The type of board used by manufacturer for this device
*   boardRevision (type: String.t, default: nil) - The revision of board used
*   castAssistantSettingLinkingResult (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCastAssistantSettingLinkingResult.t, default: nil) - This field records the linking status between Assistant setting entry and Cast setting entry. Currently only ATV surface populates this field for profiling purpose.
*   embedderBuildInfo (type: String.t, default: nil) - Any relevant info concerning the build options of the embedder (that is the software which runs as the 'driver' of an Assistant library, such as libassistant. the embedder is typically built by a third party)
*   initialAppVersion (type: String.t, default: nil) - A string recording the app version that is initially used to created this settings entry.
*   isPrimaryUser (type: boolean(), default: nil) - Boolean field to indicate whether a certain user is the primary user of a device or not. This is useful for distinguishing the user0 from other users given user0 might have certain privileges (Eg: Hubmode on Tangor)
*   mdnsDisplayName (type: String.t, default: nil) - default display name of device over mdns. This is specified at the factory, not specified by the user.
*   virtualReleaseChannel (type: String.t, default: nil) - A string describing device's release channel. For cast devices, the string will look like "qa-beta-channel", "eng-no-update", etc.

Metadata for machine learning generated audio samples. This will be similar to character alarms, Category will be set MEDIA but this metadata field will be used to identify the ringtone type on surface. (go/magenta-alarm-ringtones).




Organization, such as the source of a dataset or a funder NOTE: source_organization_mid and source_organization_mid_label should always have the same length: the mid and label correspond to each other. We don't use a map for consistency with Location and if we switch to map, we should switch to it in both. Next ID: 6
*   organizationMid (type: list(String.t), default: nil) - KG mid for the organization or person.
*   organizationMidLabel (type: list(String.t), default: nil) - Label (in the preferred language of the dataset) for the mid.
*   organizationName (type: String.t, default: nil) - Unreconciled organization name. We store it here only if there are no organization_mid values present.
*   originalOrganizationName (type: String.t, default: nil) - Original name before reconciliation; empty if not reconciled.













Logs version of the repository_webref. LinkKindFlags proto Used to represent QRef implications Next available tag: 8
*   resolution (type: String.t, default: nil) - Has not been useful since at least 2015 (before this was logged).

UnmatchedInstitution (type: list(String.t), default: nil) - Author affiliations found in the document that we weren't able to match up to specific authors.  AuthorListHasEtAl (type: boolean(), default: nil) - whether this citation had an "et al" in the author list  IncrementalExpected (type: boolean(), default: nil) - Is this article expected to have been indexed in the incremental?  VersionID (type: String.t, default: nil) - Document version identifier - fingerprint of an id computed from the url, or of bibliographic data from a publisher. Different urls for the same article from the same source have the same version id (e.g., abstract, pdf version, and html version).  TitleHtml (type: String.t, default: nil) - Version of title for display. Contains unsanitized HTML/XML.  PatentApplicationNumber (type: String.t, default: nil) - Note that an issued patent has a PatentNumber and can also have a PatentApplicationNumber, whereas a patent application has a PatentApplicationNumber and can also have a PatentPublicationNumber.  CitationSourceUrl (type: String.t, default: nil) - url where record came from  TranslatedAuthorListHasEtAl (type: boolean(), default: nil) - etal marker for the translated author list - just in case  ClusterDiscoveryDate (type: String.t, default: nil) - Used for logging, recommendations, and sort-by-date. Contains the earliest discovery date of the cluster, adjusted for earlier publication dates. Stored in Universal time scale (100 ns ticks since 0001 AD) because Unix timestamp would lead to negative dates for pre-1970 docs.  FileCreationYear (type: integer(), default: nil) - date of creation of the pdf/doc  NumHostedPages (type: integer(), default: nil) - If set, then we host this many pages of this citation's content. Note that this field may be set to 0, in which case we should be hosting this content but have failed. DEPRECATED, moved to DownloadURL  AbstractCitationSource (type: integer(), default: nil) - The source of abstract text that is chosen by science docid assigner.  TitleHtmlLeftOver (type: String.t, default: nil) - Leftovers from TitleHtml. These are usually unrecognized xml/html entities or xml/html tags  WorldViewable (type: boolean(), default: nil) - Is this version of the article world viewable?  PublicationVenue (type: String.t, default: nil) - where published - subsumes booktitle, howpublished and journal from bibtex  AbstractTypeFromSource (type: String.t, default: nil) - The original (unnormalized) type of an abstract. AbstractDisplay holds a normalized type deduced from things like tagnames, tag-attributes, keywords in documents or the placement of the abstract in the document. This field is meant for the type of the abstract identified explicitly by the source document. E.g., the value of the 'abstract-type' attribute from a tag in XML ('primary abstract', 'summary', 'highlights' etc.).  BaseLocalID (type: String.t, default: nil) - Set when building an incremental index. Whereas BaseGlobalID is the ID of the corresponding base cluster, the local ID is the ID of an individual citation within that base cluster that corresponds to this reparse.  DEPRECATEDPublisherDisplayName (type: String.t, default: nil) - these fields moved to DownloadURL where they belong  BaseGlobalID (type: String.t, default: nil) - Global document identifier - only available when building increments over a known base index. This id is from the base index.  AbstractHtml (type: String.t, default: nil) - Version of abstract field for display. Contains unsanitized XML/HTML.  PatentOffice (type: integer(), default: nil) - one of the above  CitationSourceCrawlTimestamp (type: String.t, default: nil) - Seconds since the epoch, should be consistent with CitationSourceUrl.  LevelOfDiscussion (type: integer(), default: nil) - If this is a target reference, the level of discussion of this reference.  Anchors (type: list(GoogleApi. ContentWarehouse.V1.Model.ScienceCitationAnchor.t), default: nil) - All the anchor text (before, after, formal, etc) for this citation in the referring page.  PublicationDay (type: integer(), default: nil) - for patents, publicationD/M/Y is the date of issue, not application  AbstractHtmlLeftOver (type: String.t, default: nil) - Leftovers from AbstractHtml. These are usually unrecognized xml/html entities or xml/html tags  UnmatchedEmailAddr (type: list(String.t), default: nil) - Email addresses found in the document that we weren't able to match  DocumentID (type: String.t, default: nil) - Local document identifier - url fingerprint if we know the url, or fingerprint of all fields if we don't. Different urls have different local docids.  Pages (type: String.t, default: nil) - Using string to handle all kinds of page specifications. Internal structure is not really needed.  PatentCountry (type: list(String.t), default: nil) - 2-letter country code where patent was issued, see ocean/metadata/patent_record.proto::Patent_Record::country_code for EPO one patent pertains to a list of countries.  CrawledDocid (type: String.t, default: nil) - If a citation is merged from a crawled version and a metadata version, keep the normal docid fp of the crawled version for clustering FP of normal docid of crawl version  ConferenceNumber (type: integer(), default: nil) - 27 in the "27th conference on magical realism"  PublicationMonth (type: integer(), default: nil) - month from bibtex PublicationMonth is a zero-indexed field (0 is January).  LegalCitation (type: GoogleApi.ContentWarehouse.V1.Model.LegalCitation.t, default: nil) - The ScienceCitation is how metadata passes through the scholar system. For legal, we use the normal ScienceCitation for the metadata/citation of legal journals. For court/government documents (like opinions or statues), we wrap it in the following embedded message  AlternateVersionID (type: String.t, default: nil) - Fingerprint of the URL after applying crawl and aggregate rewrites. Different citations with the same AlternateVersionID must have the same VersionID, but not necessarily vice versa. Omitted when identical to the VersionID.







These capabilities present the capability of the device running camera receiver apps.
*   hasLimitedCameraStreamCapability (type: boolean(), default: nil) - Whether the device has limited camera stream capability. If true, check supported_camera_receivers for detailed supported cameras.
*   supportedCameraReceivers (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCastAppInfo.t), default: nil) - The camera receiver cast apps the device supports. Only used if has_limited_camera_stream_capability is true.

Pair of Verdicts used for ProjectR age/geo gating. See http://go/projectr for more information.
*   adminVerdict (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamVerdict.t), default: nil) - Takedowns specified by admins via AbuseIAm




Information about the outlinks of an annotated document. Next available tag: 3
*   outlinkInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefOutlinkInfo.t), default: nil) - Information about each target URL referred to in the document's outlinks. If a given URL has multiple links, they are grouped in a single WebrefLinkInfo.


Date-based recurrences specify repeating events. Conceptually, a recurrence is a (possibly unbounded) sequence of dates on which an event falls, described by a list of constraints. A date is in a recurrence if and only if it satisfies all of the constraints. Note that devices may support some constraints, but not all.
*   begin (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDate.t, default: nil) - The first day of the recurrence. If begin is not set, then the reminder will start infinitely in the past.
*   blacklistedRanges (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiDateTimeRange.t), default: nil) - A list of blacklisted dates to skip the alarm on.
*   dayOfMonth (type: list(integer()), default: nil) - Specifies the date in a month. For example, if day_of_month is 15, then it represent the 15th day of the specified month.
*   dayOfWeek (type: list(integer()), default: nil) - Specifies a weekly or daily recurrence. Constraint: The date falls on one of these days of the week, in 0...6 (Sunday...Saturday).
*   end (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDate.t, default: nil) - The last day of the recurrence.
*   every (type: integer(), default: nil) - Multiplier on the frequency of the recurrence. Use this to specify patterns that recur every X days, months, years, etc. Example: [remind me to call mom every 2nd week]. Default is 1 (every day, every month, every year).
*   monthOfYear (type: list(integer()), default: nil) - Specifies the month in a year. Constrain: the month falls on one of these months, in 1, 2, ... 12 (January...December).
*   numOccurrences (type: integer(), default: nil) - The number of occurrences after which the recurrence should end.
*   weekOfMonth (type: list(integer()), default: nil) - Specifies the index of week in a month. For example, the second Tuesday every month, in this case, week_of_month should be 2.

Event for a modal dialog created by one of window.confirm(), window.prompt(), or window.alert().
*   confirmed (type: boolean(), default: nil) - Whether a confirm() or prompt() dialog was confirmed. Will not be present for an alert() dialog.
*   result (type: String.t, default: nil) - For a prompt() dialog, the result of the prompt. Will not be present for other types of dialogs. If confirmed == false and the prompt had a default value, result will contain the default value.

Represents the user's selection from a list of alternatives.
*   id (type: String.t, default: nil) - A unique identifier that is the canonical value for the chosen list item. If we are selecting among fields, this is the field_id specified in the corresponding DialogField.
*   looseOffsetRestriction (type: boolean(), default: nil) - If true, semantic function should look at watch actions in the following display entity if the first one is not playable. This is useful for "Play it" on entity page.
*   offset (type: integer(), default: nil) - The offset within the list, if know. If the list of values wasn't known (e.g. from the discourse context) then the offset is a zero-based mapping of the ordinal value of the selection ("first one" maps to zero; "last one" to minus one).
*   rawText (type: String.t, default: nil) - When the user selects a list value by name then this is the matched text from the utterance. Note that, if the list of values is known, then the aqua annotator should have mapped it to an offset.


Range has 4 use cases: 1. with an explicit begin and an explicit end, e.g. "from Monday to Wednesday." Both |begin| and |end| are filled in this case. 2. a point date/time expression is used as a range at a finer granularity. E.g., in "first Monday of this month", "this month" is used as a range. In this case, only |begin| will be filled and the |end| will be filled during the grounding process. 3. a fuzzy date/time range such as "morning" or "evening." 4. with a relative begin and a relative end, e.g. "from yesterday to next Monday." Note: this may be used in a mixture of exact/relative begin and end. Next available ID: 14.
*   begin (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeAbsoluteDateTime.t, default: nil) - Deprecated fields. Do NOT use.
*   duration (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity.t, default: nil) - if |duration| is set, one field from start or finish must be populated, but not both. |exclusive| value is still relevant to decide if the endpoints of the range are included in the range (value defined in the start/finish fields as well as the datetime value resulting of offseting the duration over the given range endpoint).
*   rangeModifier (type: String.t, default: nil) - Modifier that return the appropriate subrange. For more information, see the description of RangeOfDateTimeModifier. Example:  late* morning
*   start (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - |start| and |finish| are inclusive unless exclusive field is true. the values in start and finish can be an absolute point, a relative or another range. Recurrences and repeated values are not expected/allowed.
*   symbolicValue (type: String.t, default: nil) - The field is set if the range is the result of resolving/grounding a relative datetime expression referring to a part of the day. E.g. "morning", "afternoon", "evening", "night", "tonight", etc.

Keeps track of any individual clusters this mid is a member of. Cluster_id and cluster_sibling_mid stores the cluster all together, while the subcluster keeps track of each individual cluster information separately.

A user specified location to trigger weather for a specific location. Also it can be generalized for other verticals.
*   latLng (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeLatLng.t, default: nil) - (Mandatory) Coordinates of the location for which weather is requested.
*   locationName (type: String.t, default: nil) - The name to display. If specified it will override the formatted address of "feature_id".
*   mid (type: String.t, default: nil) - MID corresponding to the location from feature_id.
*   timezone (type: String.t, default: nil) - The timezone to display the current conditions observation time. Optional and will override the timezone of "feature_id".







Intentionally empty. Used to disambiguate consumer and customer use cases in oneof below.


For general information about Limited Profiles, see go/limited-profiles-api. LINT. IfChange
*   language (type: String.t, default: nil) - IETF BCP-47 language code that should be used for localizing the name computation (go/bcp-47). If not provided, we'll use the name origin detector to infer it. If unable to detect, "en" will be assumed.

Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
*   pageRefs (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentPageAnchorPageRef.t), default: nil) - One or more references to visual page elements


Alternative names with info like RecognitionAlternateSource indicating where is it from.

A message representing a coreferenced value defined elsewhere in the meaning struct.
*   argPath (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgPath.t, default: nil) - A coreference is represented by an argument path starting from the root of the whole tree to the referenced value.

This class represents a range of numbers in an address. It is an optional additional field in the 'AddressComponentProto' message. This structure can be used to model both single addresses and address ranges. There are two primary use-cases for address ranges: definitions and references. Ranges are being defined when they are present on the addresses of segment features. Ranges are being referenced when they are present on non-segment features. NOTE: If you add fields in this proto, consider updating the AreAddressRangesEquivalent() function in google3/geostore/base/internal/addressrange.cc
*   number (type: list(integer()), default: nil) - Two or more address numbers. Each number represents an address that was mentioned by the data provider.
*   parameter (type: list(number()), default: nil) - For address range definitions: Two or more interpolation parameter values. The length of this array must match the length of the number array, and each parameter number specifies the position of the corresponding address number. Each value is an interpolation between 0.0 and 1.0 inclusive. The value is proportional to the distance traveled along the segment's polyline starting at its origin. The parameters must be provided in increasing order and the values in the number array must be in strictly increasing or decreasing order. We make an exception for singleton addresses, which are represented as two copies of a (number, parameter) pair, for backwards compatibility. For address range references: This array must be empty.
*   prefix (type: String.t, default: nil) - If specified, the prefix or suffix is applied to all numbers in the range. For example, this can be used to indicate that addresses B1 through B99 are on one side of the street, while A1 through A99 are on the other side of the street.
*   sameParity (type: boolean(), default: nil) - If 'same_parity' is true, then all 'number' values must have the same parity (even or odd), and this address range only includes addresses whose parity is the same as the given 'number' values.
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to an address range. Never set in MapFacts. Here are some examples: Example #1: Single non-numeric address (e.g., "Twelve") At the moment this can only be represented as a street number (with the value in the parsed_name field of the AddressComponentProto). We have future plans to make other changes so we can handle this case. Example #2: Single semi-numeric address (e.g., "12bis") The number array contains two copies of the single numeric value (12). The prefix is empty and the suffix contains "bis". The parameter array has two identical values specifying the position of the single address. Example #3: Simple address range (e.g., "100 to 198, even numbers only") The number array contains the two values "100" and "198". The prefix and suffix strings are empty in this example. The parameter array has two values, one for each number. The same_parity flag is set in this example.

Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
*   daysBeforeActiveDate (type: integer(), default: nil) - Positive number of days before active date. The value 0 will denote a notification on the same day.
*   notificationTimeOfDay (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t, default: nil) - Time of day that notification is sent to user. This is local to the user's device.





Extension data for the whole person entity.
*   aboutMeExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedData.t, default: nil) - For use by AboutMe and SmartProfile clients.
*   appsWaldoExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphWireProtoPeopleapiExtensionAppsWaldoExtendedData.t, default: nil) - For use with Apps Waldo Availability Data extension
*   callerIdExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiCallerIdExtendedData.t, default: nil) - For use with caller ID extension
*   contactsExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiWebContactsExtendedData.t, default: nil) - For use with Contacts extension.
*   domainName (type: list(String.t), default: nil) - Hosted domain this person is a member of. The domain_name is also returned as part of the person's ReadOnlyProfileInfo, so requesting it via this extension is no longer necessary.
*   dynamiteExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData.t, default: nil) - For use with Dynamite extension.
*   gpayExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiGPayExtendedData.t, default: nil) - For use with Google Pay extension.
*   gplusExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiGplusExtendedData.t, default: nil) - For use with Google+ extension.
*   hangoutsExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiHangoutsExtendedData.t, default: nil) - For use with Hangouts extension.
*   isPlaceholder (type: boolean(), default: nil) - For use with gmail extensions and lookup by email. If true, no person was actually found using the specified email address, but we want to return TLS info about the email address regardless.
*   mapsExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiMapsExtendedData.t, default: nil) - For use with Maps extension.
*   paisaExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphWireProtoPeopleapiExtensionPaisaExtendedData.t, default: nil) - For use with Paisa extension
*   peopleStackExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphWireProtoPeopleapiExtensionPeopleStackExtendedData.t, default: nil) - DEPRECATED: Use people_stack_person_extended_data instead. For use with PeopleStack extension.
*   peopleStackPersonExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData.t, default: nil) - For use with PeopleStack extension.
*   playGamesExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData.t, default: nil) - For use with Play Games Product Profile extension. See go/jam-games-profile. The play games profile will be returned only for profile-centric requests.
*   tlsIsPlaceholder (type: boolean(), default: nil) - For use with the TLS extension and lookup by email. If true, no person was actually found using the specified email address, but we want to return TLS info about the email address regardless. DEPRECATED: Use is_placeholder instead.
*   youtubeExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiYoutubeExtendedData.t, default: nil) - For use with Youtube extension.

Following are the MDA compatible loggings for media focus, default settings and nearby devices.

A summary of the reasons that we chose a certain target device.


This message is embedded in the RankDetailsProto (below). It represents one rank signal, which is a floating point value estimating the Oyster Rank of the feature.
*   rank (type: number(), default: nil) - A value in the range [0, 1] estimating Oyster Rank according to this signal. Non-provider specific signals (e.g. SIGNAL_POPULATION) are interpreted by some common code in the ranking pipeline. Because of that, data providers should leave this field empty when setting such signals (so that the rank assignment can be uniform across all features regardless of contributing data providers). On the other hand, provider-specific signals (e.g. SIGNAL_ZENRIN_CITY_CATEGORY) are required to specify the rank field (it is not optional for them). That is because no code other than that of the provider itself will be able to fill in a meaningful value later on. We don't want clients to be reading from the raw_scalar / raw_string fields to interpret the data.
*   rawScalar (type: number(), default: nil) - The raw scalar value that was used to compute 'rank' above. The meaning of this attribute changes depending on the signal type.
*   rawString (type: String.t, default: nil) - The raw string value that was used to compute 'rank' above. The meaning of this attribute changes depending on the signal type.

PropertyValueStatusProto specifies what we know about a field corresponding to FeaturePropertyId's value in the absence of any specific value. For now, it just indicates when we know that there is no value. Eventually it might also indicate that we know it has value, just not what it is, etc.
*   propertyId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto.t, default: nil) - The property ID whose value status is defined by this proto.
*   valueStatus (type: String.t, default: nil) - value_status specifies whether the feature has a value for the property. This should always be set to something other than the default value (PROPERTY_VALUE_STATUS_UNSPECIFIED).

LocationHint is used to specify a location as well as format.
*   location (type: String.t, default: nil) - Location is the location, provided in the format specified by format.

Flags that describe the information about a special word. If you add another flag please add it to the special words implemenation in google3/maps/quality/internal/special_words.cc. -- Next available id: 22 --
*   isAlleyAffix (type: boolean(), default: nil) - An affix that indicates an alley. Alleys are unnamed, numbered routes that are always linked to a "parent street". As these parent streets can be named e.g. "7th street" and alleys might be referred to as "7th alley", we need to be able to distinguish those affixes. For more details about alleys see go/vn-alley-geocoding.
*   isDeconstructible (type: boolean(), default: nil) - Whether this special word is part of a name without a separator (like e.g. suffix "strasse" in Freigutstrasse).
*   isDistanceMarker (type: boolean(), default: nil) - An affix that indicates distance marker on a route, e.g., 'km'.
*   isForbiddenWord (type: boolean(), default: nil) - Whether geo paths are forbidden to contain this word.
*   isLandmarkIdentifier (type: boolean(), default: nil) - An affix that indicates a landmark, e.g. "opposite", "near" etc.
*   isNameSynonym (type: boolean(), default: nil) - Whether this is a name synonym and should be allowed to be matched on when searching (that is, added to the retrieval query with the name/ prefix).
*   isNotForLegacyStreetNumberDetection (type: boolean(), default: nil) - Terms which are not allowed to be used by the legacy street number detection.
*   isNotOptionalizable (type: boolean(), default: nil) - Terms which are not allowed to be treated as optional.
*   isPenalizedIfMissing (type: boolean(), default: nil) - Optional terms that should not geocode by themselves.
*   isStopWord (type: boolean(), default: nil) - E.g.: the, in, near, where.





Per-doc data for premium documents in the Google index.
*   IsArchival (type: boolean(), default: nil) - True if a free document is archival in nature.
*   IsEntitled (type: boolean(), default: nil) - User is entitled to see the premium content for free.
*   Publication (type: String.t, default: nil) - negative values for prior dates) FP of the Premium publication name

The attributes of encoded thumbnail images. Next id: 10.
*   byteSize (type: String.t, default: nil) - Image size in bytes. Meaningful when contents are not stored inline (e.g., via image_blob_id).
*   crc32c (type: integer(), default: nil) - CRC-32 checksum of the image bytes. Can be used for data integrity check.
*   imageBlobId (type: String.t, default: nil) - The Blob ID of the thumbnail image in the Blobstore. We recommend absolute IDs with universe prefix if this field is passed across systems. The owner of this blob is also responsible for data Wipeout compliance.
*   imageBytes (type: String.t, default: nil) - Encoded thumbnail bytes. Prefer this over image_string as we are not supposed to store image bytes in a proto string field.

Metadata about clusters. See go/webref-variants for details. Next available tag: 6.
*   isSet (type: boolean(), default: nil) - If true, this entity is a synthetic entity created to represent a "set" in a cluster, i.e. to represent a set of entities (its children in the cluster graph) when we cannot disambiguate among them. This is similar to a KG Collection, but this is not in KG.
*   ruleInstance (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoRuleInstance.t, default: nil) - Explanation of where this cluster, and this entity, come from. All entities in a cluster have this, not just entities that have been created because of the cluster.

A message holding all of the color information about a signal: -Color primaries identify the meaning of red, green, and blue ( and the white point). -The transfer characteristic identifies the mapping used to go between linear and coded values of light. -The matrix coefficients identifies, e.g., the conversion between Ycbcr to RGB (in the space of the primaries) -And the color range defines the min/max of the levels used.

Per language display name from reliable sources (e.g. Freebase, Wikipedia). The name can be ambiguous (e.g. "Springfield" rather than "Springfield, Idaho"), and is thus to be used in a context which provides sufficient disambiguation. See: http://go/entity-names WARNING: This data is DEPRECATED and any user-visible entity names need to be fetched from TopicServer. Note that any display names included in this proto are merely a pass-through from KG and have no freshness guarantees.
*   canonicalName (type: String.t, default: nil) - An encylopedia style topic name (e.g. "Dog", not "Dogs"). Corresponds to Freebase /type/object/name and similar sources.
*   language (type: String.t, default: nil) - The language of this name. See http://goto/iii for all the details on the language identifiers.
*   subjectName (type: String.t, default: nil) - A name as it would be used for a news topic, an interest, the subject of a story. E.g. in list of things ("Related topics: Smartphones, computers, accidents". "Interests: Dogs"). Fall back: If the field is not populated, fall back to the "canonical_name" field. This field is usually not populated since (a) in most cases the subject form name is the same as the canonical name, and (b) data coverage of subject-form names is currently much lower than data coverage of canonical names. Note: In some languages (e.g. French) the difference between canonical names and subject names is larger than in English (not just plural vs. singular), but still strictly grammatical (including an article, capitalization, plural vs. singular). Corresponds to Freebase /freebase/linguistic_hint/subject_form.

Describes the parking allowances for a feature, or the situations and requirements under which one may be permitted to park, such as certain vehicle types, valet parking, and permit parking. Also describes the cost of parking, which may vary based on the time and duration parked. Includes vehicle type, any other conditions for eligibility, and the cost of parking, which may vary based on the time and duration parked. If is_discount is set to true on a given allowance, that allowance represents a discount that can be applied to lower the cost of non-discount allowances specified on feature via parking_provider_feature. In this way, allowances can be 'layered,' i.e. appended, onto each other when denormalizing references via parking_provider_feature.
*   allowanceType (type: String.t, default: nil) - The type of parking for this allowance. Allowance details only apply to the type of parking specified.
*   isDiscount (type: boolean(), default: nil) - If true, this allowance represents a discount rather than an individual rate; any rate values specified in this allowance describe a discount to be applied to the non-discount allowances in the ParkingProto.
*   minPurchaseForValidation (type: list(GoogleApi.ContentWarehouse.V1.Model.FreebaseTopic.t), default: nil) - If this rate requires validation, this expresses the minimum purchase required for validation in each applicable currency. Should have an ID of /measurement_unit/money_value and consist of two properties: one with an ID of /measurement_unit/money_value/amount and a float value with the amount, and another with the ID /measurement_unit/money_value/currency and an ID value with the MID of the proper currency (from the /finance/currency type). A value of 0 suggests that no purchase is required. If empty, this suggests that no validation is required for this rate.
*   permitType (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLanguageTaggedTextProto.t), default: nil) - Any additional details about the permit type; e.g. “Zone A”. In any local languages. Should only be set if allowance_type is PERMIT.
*   serviceType (type: list(String.t), default: nil) - The types of services that this parking allowance applies to. For instance, some cities have streets that only allow traditional taxis to pick up passengers.
*   timeBasedRate (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeBasedRateProto.t), default: nil) - Describes the rate structures. Each TimeBasedRateProto defines a rate which may apply based on a particular arrival, departure or utilization time; for example, one rate might apply if arriving before 9am, and another might apply regardless of arrival or departure time.
*   vehicleType (type: String.t, default: nil) - Restrictions on which vehicle type(s) the allowance applies to. By default, the allowance applies to any vehicle types.

Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of java.awt. Color in Java; it can also be trivially provided to UIColor's +colorWithRed:green:blue:alpha method in iOS; and, with just a little work, it can be easily formatted into a CSS rgba() string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor fromProto(Color protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color toProto(UIColor color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha  255); var green = Math.floor(greenFrac  255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
*   alpha (type: number(), default: nil) - The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: pixel color = alpha * (this color) + (1.0 - alpha) * (background color) This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).
*   blue (type: number(), default: nil) - The amount of blue in the color as a value in the interval [0, 1].
*   green (type: number(), default: nil) - The amount of green in the color as a value in the interval [0, 1].
*   red (type: number(), default: nil) - The amount of red in the color as a value in the interval [0, 1].




The image license info for licensable images(go/Licensable-Images-PRD) This proto in design doc: go/licensable-images-edd
*   acquireLicensePage (type: String.t, default: nil) - Records web page url about how to use the licensed image.
*   isRetiredCcUrl (type: boolean(), default: nil) - Whether this license url is in retired license list, which is from: https://creativecommons.org/retiredlicenses/
*   safesearchFlags (type: integer(), default: nil) - A bitwise-OR of SafeSearch filtering flags. If present, the flags will be a bitwise-AND between this value and all the classifier_porn::query::Vertical enums. If the value is -1, it indicates there is some error with SafeSearch classifier. The default value 0 means no filtering flags are set.

Provides some debug info for the entity. This data shown to engineers (for debugging) and to raters (so it ultimately impacts eval metrics), but is also used to train ML models (see below). IMPORTANT: Despite the proto naming, this data has production quality impact. The data below is mostly human-readable text that is useful to help engineers with debugging. However the text is also used as input to machine-learned natural language processing models, which are used in production Webref.
*   description (type: String.t, default: nil) - A human-readable description of the entity. This can range from brief, machine-generated notes to lengthy human-written paragraphs from Wikipedia.
*   language (type: String.t, default: nil) - The language (III LanguageCode) of the title and description fields.
*   score (type: float(), default: nil) - Internal score to merge debug info. should not set in final entityjoins.
*   title (type: String.t, default: nil) - A short human-readable name/title of the entity, similar to what is displayed at the top of a Hume page. Suitable to be displayed in a list.
*   url (type: String.t, default: nil) - Link to a page with more information about the entity (internal Hume page, external Wikipedia page, etc.).





A word, punctuation mark, or other small piece of text.
*   bytes (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t, default: nil) - The bytes in this token.
*   characters (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t, default: nil) - The characters in this token.
*   dependency (type: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaTokenDependencyEdge.t, default: nil) - DEPRECATED: PLEASE USE dependency_head AND dependency_label FIELDS. One edge of the dependency parse.
*   dependencyHead (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The head of this token. By default, the root of the sentence is its own head; it should also have deprel as 'root'.
*   dependencyLabel (type: String.t, default: nil) - Relation label for this dependency. Generally this should be using the Universal Dependencies label format, using fine-grained labels like nsubj:pass.
*   document (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The document that contains this token.
*   paragraph (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The paragraph that contains this token.
*   sentence (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The sentence that contains this token.
*   text (type: String.t, default: nil) - The text of this token. Must contain valid UTF-8.


A reference to a photo in either Photos Backend or SGI storage. This message should be treated as an opaque blob to avoid a dependency on a specific storage backend. This version of ImageReference is visible outside of SGBE. Do not add fields that should not be exposed outside of Profile Service and Image Service.
*   contentVersion (type: String.t, default: nil) - Identifies the most recent version of this photo. Use this as a FIFE param (ie -iv12) to prevent reads of a stale version.
*   mediaId (type: String.t, default: nil) - Unique identifier for the photo. For now, this will always be a Photos Backend media key.


The configuration of the Cloud Storage Ingestion with DocAI Processors pipeline.
*   extractProcessorInfos (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ProcessorInfo.t), default: nil) - The extract processors information. One matched extract processor will be used to process documents based on the classify processor result. If no classify processor is specified, the first extract processor will be used.
*   inputPath (type: String.t, default: nil) - The input Cloud Storage folder. All files under this folder will be imported to Document Warehouse. Format: gs:///.
*   pipelineConfig (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1IngestPipelineConfig.t, default: nil) - Optional. The config for the Cloud Storage Ingestion with DocAI Processors pipeline. It provides additional customization options to run the pipeline and can be skipped if it is not applicable.
*   processorResultsFolderPath (type: String.t, default: nil) - The Cloud Storage folder path used to store the raw results from processors. Format: gs:///.
*   skipIngestedDocuments (type: boolean(), default: nil) - The flag whether to skip ingested documents. If it is set to true, documents in Cloud Storage contains key "status" with value "status=ingested" in custom metadata will be skipped to ingest.
*   splitClassifyProcessorInfo (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ProcessorInfo.t, default: nil) - The split and classify processor information. The split and classify result will be used to find a matched extract processor.





Represents a music recording (usually a song). Each populated field can be thought of as additional constraint about the song's identity. For instance, if no fields are set, then this represents "some song." If only the music_artist is set, then it represents "some song by the specified music_artist." Inspired (but not strictly adhered to) http://schema.org/MusicRecording Next ID: 22
*   book (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaBook.t, default: nil) - Like an audio book. "Listen to (moby dick) audiobook"
*   dateTime (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - A date time constraint for audio entity, for example, "jazz station 1980".
*   episodeConstraint (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaEpisodeConstraint.t), default: nil) - Constraining the query to some detail about the episode. Example: "listen to episode (13) of this american life with (mike birbiglia)" would have the 2 constraints in parens.
*   game (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaGame.t, default: nil) - Soundtrack or theme song (see score_type param that indicates whether the user refers to a soundtrack or a theme song) of the game. "Play soundtrack from (Deus Ex Human Revolution)".
*   movie (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMovie.t, default: nil) - Soundtrack or theme song (see score_type param that indicates whether the user refers to a soundtrack or a theme song) of the movie. E.g. "Play (Let It Go) from (Disney's Frozen)"
*   noExplicitAudio (type: boolean(), default: nil) - True when the query does not contains an explict audio name. E.g. When user says "play" or "listen to".
*   rawText (type: String.t, default: nil) - The query for backends to use in search. e.g. for an user query of "play kids song video on tv" from assistant, this field would be "kids song". Note: there is no guarantee this field is populated; when it is not, backends should fall back to "raw_text" fields in song, artist, album etc.
*   scoreType (type: String.t, default: nil) - If any of movie, game or tv show fields is populated this field indicates specific score type requested in the query. E.g. for [play soundtrack from frozen] this field is SOUNDTRACK, for [play frozen song] this field is THEME_SONG.
*   seasonConstraint (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaSeasonConstraint.t, default: nil) - Constraining the query to some detail about the season. Example: "listen to season 2 of serial"
*   tag (type: list(String.t), default: nil) - Optional tags associated with how the media entity should be played. For example, this can be set to SEED_RADIO to signify that the user wants to play a radio station seeded by the entity.
*   tvShow (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaTVShow.t, default: nil) - Soundtrack or theme song (see score_type param that indicates whether the user refers to a soundtrack or a theme song) of the tv show. E.g. "Play soundtrack from (Friends)".


author names should be in the order specified in the paper
*   Department (type: String.t, default: nil) - not in bibtex - from paper
*   GuessOrderType (type: integer(), default: nil) - Tracks the GuessNameOrder case used to parse this author name, defaults to 0 simply means that GuessNameOrder wasn't used.
*   Institution (type: String.t, default: nil) - not in bibtex - from paper
*   Type (type: integer(), default: nil) - Type is one of the contributors types. Writers are the default.

Specification of which communication features can be used.


A BusinessHoursProto stores a weekly schedule of opening hours for a business (represented as a BusinessHours message) together with other closely related information that is Geo-specific.
*   data (type: GoogleApi.ContentWarehouse.V1.Model.BusinessHours.t, default: nil) - The actual hours represented by this BusinessHoursProto.

There are a few types of locations: - Basic locations are sequences of location elements which can be either actual locations or modifiers. E.g., "Mountain View CA 94040" may be the sequence "Mountain View" (an actual location), "CA" (an actual location, and "94040" (a numeric modifier). - Compound locations: these are two locations combined by a joiner. E.g., "Target in Mountain View CA 94040" has the joiner "in" and two basic locations ("Target", and "Mountain View CA 94040"). Note that the definition is recursive, e.g., "Parking garage near Target in Mountain View". - Vicinity location: indicates an area around a certain location. The area can be defined by time or space. E.g., "within 1 hour of Palo Alto", "10 blocks from Union Square", "a few miles from here". Next ID: 14 LINT. IfChange()
*   basicLocation (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalBasicLocation.t, default: nil) - Exactly one of the location types should be populated.
*   isMerged (type: boolean(), default: nil) - True if the location is merged, for example by CombineLocationsFn.
*   locationConstraint (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocationConstraint.t), default: nil) - The constraint includes various constraints on the location such as amenities, price range, ratings, or attributes such as new, cheap, etc. These constraints are a part of the location but are not modeled as location elements and are not included in the location text. The (debatable) motivation is that they do not stand on their own and are not an intrinsic part of the location. Note on texts and spans. For a location such as "kid friendly hotels with an indoor pool" we expect to get a basic location with a single location element and two constraints: - For the location element: - Both text and span match "hotels" - For the first constraint: - Both text and span match "kid friendly" - For the second constraint: - Both text and span match "indoor pool" - For the full location: - text: "hotels" - span covers "kid friendly hotels with an indoor pool"
*   resolvedLocalResult (type: GoogleApi.ContentWarehouse.V1.Model.QualityDialogManagerLocalResult.t, default: nil) - A LocalResult corresponding to the location the user specified, populated by local dialog (generally following a search). This field will only be set if the location is unambiguous, possibly following a series of disambiguation turns of dialog.
*   startByte (type: integer(), default: nil) - The span, in the raw input, which corresponds to this location, expressed as a byte offset and byte size. This allows the extraction of the location string as it appears in the raw text.
*   text (type: String.t, default: nil) - A string representation of the location. Depending on the annotators and the location itself the string may represent the raw query, the pre-processed query, or something else. As a non-trivial example, for [target address mountain view] we will generate the text "target mountain view" without "address". We make a best-effort to come up with a good string, but make no formal guarantees. You should never present this text directly to outside users.
*   userSpecifiedLocation (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeVerticalsWeatherProtoUserSpecifiedLocation.t, default: nil) - A location info including featureId and lat/lng that uniquely identifies the location the user specified.

Each SubSet contains LocalDescriptors of a specific type. The type indicates which algorithm has been used to generate the descriptors. No enum is defined for the descriptor_type. For most applications it is sufficient to know if two descriptors are of the same or a different type, while ignoring the details of their generation. The descriptor type '0' is reserved and must not be used.
*   isBinaryDescriptor (type: boolean(), default: nil) - Used to indicate if the descriptor is binary or not. When decompressing feature this is useful to decide calling different decompression functions.
*   numDescriptors (type: integer(), default: nil) - Used to store the number of descriptors for statistical purposes, if the descriptors themselves are not stored.







Painted element logical color. Most legal definitions only specify a color category (like "yellow") and don't specify an exact hue, rather stating that the colors must be distinguishable from each other. We refer to this as the "logical" color.


Median, mean and standard deviation of a feature value.

Data needed to construct a go/scroll-to text fragment. The url fragment is: #:~:text=[prefix-,]text_start,text_end
*   prefix (type: String.t, default: nil) - Prefix to help with disambiguating between multiple text matches on page. Optional.
*   suffix (type: String.t, default: nil) - Suffix to help with disambiguating between multiple text matches on page. Optional.
*   textEnd (type: String.t, default: nil) - End of the text span to be highlighted. Optional.
*   textStart (type: String.t, default: nil) - Start of the text span to be highlighted.

Specifies the size limits on responses receivable by the client.
*   maxAssistResponseSizeBytes (type: integer(), default: nil) - Max size in bytes of the total serialized AssistResponse receivable by the client. If response exceeds this max, response may be modified by the server.
*   maxDisplayLinesBytes (type: integer(), default: nil) - Maximum size in bytes (not characters) of text the display can handle (which may be different from how much the display can show at a time due to scrolling).
*   maxSuggestionChipBytes (type: integer(), default: nil) - Maximum size in bytes (not characters) for each suggestion chip.
*   maxSuggestionChips (type: integer(), default: nil) - Maximum number of suggestion chips the device can handle to display.

A conceptual structure for storing sentiment snippet information in mustang. Essentially an adaptation of PhraseAnnotationProperties from //repository/annotations/proto/annotations.proto.
*   snippetText (type: String.t, default: nil) - This protobuffer is serving double duty as both a Mustang attachment and the response proto that gets returned by Mustang in the WWWSnippetResponse's info MessageSet. When stored as an attachment, this field will always be empty. However, when returned with the WWWSnippetResponse, Mustang will print and store the actual sentiment snippet's text here.

The value is used for CurrentQuery.annotator and PreviousQuery.annotator to indicate what annotator annotated the argument

Sentiment information extracted from the annotated content by Goldmine. This mirrors nlp_sentiment. SentimentAnnotation. Next tag: 5.
*   magnitude (type: number(), default: nil) - Total magnitude of the sentiment. A positive number representing the total intensity of sentiment regardless of positive vs negative polarity.
*   polarity (type: number(), default: nil) - Polarity of the sentiment. Value is between -1.0 and 1.0 inclusive, with larger numbers representing more positive sentiment and negative numbers representing negative sentiment.
*   score (type: number(), default: nil) - The average score over sentences. This combines the polarity and magnitude signals into one value. Bounded between -1.0 and 1.0.

An internal message to signal that this recurrence has no end date.

Robots Info encapsulates all robots.txt or related information that we know about the Document collected from multiple sources such as HTTP headers, meta robots tags etc.
*   contentExpiry (type: integer(), default: nil) - time in unix time format after which this content should not be shown in the results. This in inferred from the X-Robots-Tag HTTP header with unavailable_after: Do not use this field directly. There is a column called content_expiration in Alexandria that includes this and other signals.
*   indexifembeddedReason (type: integer(), default: nil) - IMPORTANT: if you add a new field here, update the MergeRobotsInfo() function to merge the new field.
*   maxImagePreview (type: String.t, default: nil) - Max image preview restriction applied to this data. A value of THUMBNAIL_UNSPECIFIED can be treated as though there is no restriction.
*   maxSnippetLength (type: String.t, default: nil) - Max snippet preview restriction applied to this data. If this field is zero, it indicates that no snippet data can be displayed, therefore this field should be checked using has_max_snippet_length to determine if it was set.
*   noindexReason (type: integer(), default: nil) - Bit map of RobotedReasons values. When set to a non-zero value, the document should not be indexed or archived etc. based on the name of the tag.

The versioned signals used by the ExperimentalNsrTeamData proto.


The geo-location of a single point, or of the "center" of a group of points.
*   altitudeMeters (type: float(), default: nil) - Altitude of the point above the earth's surface, in meters.
*   fromGps (type: boolean(), default: nil) - Indicates if the lat/lon above is assumed to come from a GPS device.
*   lat (type: float(), default: nil) - Latitude in degrees north. Values south of the equator are negative.
*   latErrorBound (type: float(), default: nil) - When applied to a single point, represents the estimated error bounds of manual geotagging. The estimate is based on size of the bounding box of the map used for manual geotagging. When applied to a group of points, the error bounds represent the dispersion around the group center (lat/lon above). The dispersion in this case is computed as half the interquartile range. Reference: http://en.wikipedia.org/wiki/Interquartile_range (lat +/- lat_error_bound, lng +/- lng_error_bound).
*   lon (type: float(), default: nil) - Longitude in degrees east. Values west of 0 deg are negative.

An absolute point in time independent of timezone or calendar, based on the proto3 Timestamp (//google/protobuf/timestamp.proto). NOTE: THIS IS NO LONGER RECOMMENDED TO BE USED. It was originally defined separately from google.protobuf. Timestamp due to incompatibility with proto2 syntax. The incompatibility issues have since been resolved and so the Google-wide standard representation of google.protobuf.Timestamp should be preferred. In fact, google.protobuf.* protos in general are now recommended to be used in new APIs.
*   nanos (type: integer(), default: nil) - Non-negative fractions of a second at nanosecond resolution.
*   seconds (type: String.t, default: nil) - Seconds of UTC time since the Unix epoch.





Audio-based language information about a Watch Page. For more information: https://g3doc.corp.google.com/video/timedtext/g3doc/ali.md
*   language (type: String.t, default: nil) - Audio language of video classified by Automatic Language Identification. It corresponds to the first language (the highest confidence) in ALIResults.lang_results.


Misc. attachments to be added to the dynamic repository the docservers build. These override any attachments created by parsing the GDocumentBase.

//////////////////// DeviceRawContactId ////////////////////// Used by Device Contacts Only. The Raw ID as assigned to the original contact on the device. For more details see go/fbs-support-for-device-contacts.
*   RawContactId (type: String.t, default: nil) - Raw ID assigned by the device. Cast this field to string in javascript to make it compile in js.


Quality constraints about the establishment. In the future we can add to this message Zagat ratings, user reviews, etc. Next ID: 6.
*   unspecified (type: boolean(), default: nil) - The user mentioned something about quality, but didn't mention a specific constraint. This is used to indicate an intent to remove all quality constraints, in queries like [forget the rating].

Specifies the desired format for the server to use when it returns audio_out messages.
*   audioMode (type: String.t, default: nil) - Current audio mode on the device while issuing the query.
*   audioRoutingMode (type: String.t, default: nil) - Current audio routing on the device while issuing the query.
*   encoding (type: String.t, default: nil) - Required The encoding of audio data to be returned in all audio_out messages.
*   preferredBitrateBps (type: integer(), default: nil) - Optional Specifies preferred encoding bitrate (bits-per-second). Currently this is only implemented for OGG_OPUS for bitrates of 12000, 16000, 24000, 32000. If not specified, OGG_OPUS defaults to 32000.

Used when a field is accessible to a circle.
*   displayName (type: String.t, default: nil) - Equivalent to Circle.display_name for the circle_id. Included when FieldAclOption.FULL_ACL_WITH_DETAILS is requested. This field is read-only and ignored on update.


SearchLink metadata, for SEARCH_LINK segments. For a search link, the "text" field should contain the display text. This is currently not indexed.
*   mid (type: String.t, default: nil) - MID of the KG entity being linked.

Represents details of a member of a roster. Used in RosterDetails. Corresponds to http://cs/symbol:google.apps.cloudidentity.groups.internal. Membership


Represents a reference made by a user that refers to some personal entity.
*   personalReferenceType (type: String.t, default: nil) - The manner in which the entity was referenced (e.g. "my hotel", "the airport").

Used to store debug information of the overall classifier.

A special type representing a StateOfAffairs. Currently (as of 2021Q2) this is duplicative with semantic_type { name: "StateOfAffairs" } but we (mrf-team) will encourage clients to migrate to this new type.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

The end of the recurrence can be represented in one of three ways. 1. An abstract DateTime. (inclusive) 2. An absolute timestamp, in milliseconds from UTC epoch. 3. A number of occurrences. Exactly one of the fields [end_date_time, end_millis, num_occurrences] in this message must be set. Repeating tasks for which the user did not specify an end date are automatically given a reasonable end conditions by the system and auto_renew will be set to true. Similarly, if the user- provided end date is too far in the future to reasonably create all instances, the server will set an auto_renew_until end condition.
*   autoRenew (type: boolean(), default: nil) - Should be used in cases where the size of the recurrence is infinite (no end date specified), in which case we rely on an offline process to extend. Set by server only, setting it on a new recurrence will throw an exception.
*   autoRenewUntil (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDateTimeAnnotation.t, default: nil) - Used in cases where the recurrence is too large to create in a single transaction. In this case we create a manageable number of instances initially and rely on an offline process to continually extend the recurrence until this date. Set by server only, setting it on a new recurrence will throw an exception.
*   numOccurrences (type: integer(), default: nil) - Note that auto-renewing is not supported in conjunction with num_occurrences. Therefore we impose a hard limit of 1000 when using this field.





Capabilities of Google assistant conversation service(GACS) devices. These capabilites including supported GACS actions and response size limitations.
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - DeviceId of the accessory device (eg. watch) Commonly the go/dusi (eg. client_instance_id) is provided.
*   ttsEncoding (type: String.t, default: nil) - DEPRECATED: Format of TTS audio requested by the device.

Features to be extracted from Device GP for ranking in HGR. Each candidate from Device GP will be associated with its own DeviceGroundingProviderFeatures. Next ID: 5
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedDeviceId.t, default: nil) - ID for the device. This feature is needed specifically for PRR and it contains PII. Note that not every device has a corresponding DeviceId.
*   surfaceIdentity (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedSurfaceIdentity.t, default: nil) - The set of information that helps identify the surface.

The top non-forwarding dups of the canonical url.
*   ecnFp (type: String.t, default: nil) - Fp96 of webmirror equivalence class as of last time this was exported.
*   url (type: String.t, default: nil) - The url of the non-forwarding dup.

Structure to identify provenance relationships between annotations in different revisions.
*   id (type: integer(), default: nil) - The Id of this operation. Needs to be unique within the scope of the revision.
*   parents (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentProvenanceParent.t), default: nil) - References to the original elements that are replaced.
*   revision (type: integer(), default: nil) - The index of the revision that produced this element.

Feel free to ignore this lint warning if only the trivia (e.g., comments) is is changed. LINT. IfChange
*   audioStream (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoAudioStream.t), default: nil) - Each entry corresponds to one audio stream in the original media file.
*   containerId (type: integer(), default: nil) - Container type of the file, e.g. FLV, H264, MP3. Uses the numeric value corresponding to the ContainerId enum objects, in order to avoid the dependency on vsi/videostreaminfo.proto. http://cs/symbol:ContainerId%20f:google3/video/vidproc/vsi/videostreaminfo.proto
*   overview (type: GoogleApi.ContentWarehouse.V1.Model.VideoMediaOverview.t, default: nil) - This is a high-level description of the media. It does not contain PII.
*   videoStream (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoVideoStream.t), default: nil) - Each entry corresponds to one video stream (usually just one) in the original media file.

Identifier for frames associated with a video.
*   timestampMs (type: integer(), default: nil) - Offset of the frame from the beginning of the video (in milliseconds).

This protocol buffer holds attributes for features of TYPE_SKI_TRAIL.




Example: "ukraine" in a query like "read me news about Ukraine"
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!


These capabilities represent the audio output features associated with the device. This includes what kind of audio output the device can handle, and what the privacy circumstances of that output are.

Fields used to track cache use in the rendering microservice. Next tag available: 6
*   cacheExpireTimestampUsec (type: String.t, default: nil) - When the rendered content would expire from the cache in microseconds.
*   lastRenderedTimestampUsec (type: String.t, default: nil) - The last time the document was rendered, in microseconds. Does not update in case of cache use.

Log how many urls finally goes to trawler on a host in rendering.














Unreliable dates signals per Domain+Petacat. go/unreliable-dates-dd NOTE(tomwesolowski): As of now, we can safely keep up to 8 4-bytes fields in this proto due to Laelaps constraint of max. 50k bytes per single value. We keep all the petacats categories for a domain under the same key. The largest sites (Youtube, Wikipedia, Facebook) have up to 1.5k different petacat verticals. 1500  4  8 / 1024 bytes = 46.9k bytes
*   dateExposureScore (type: number(), default: nil) - This is date_exposure after sigmoid transformation.
*   dateVsContentageDistributionSkew (type: number(), default: nil) - Auxiliary scores. The unreliable_dates_score is a product of these scores excl. date_exposure. The definition for each of the scores you can find at go/unreliable-dates-dd


Data to generate the list preview for organic list snippets.
*   header (type: String.t, default: nil) - The texts of header and listing items.
*   headerTitleRedundancy (type: number(), default: nil) - The ratio of header tokens covered by title.
*   headerUsedInSnippet (type: boolean(), default: nil) - If the header being used in organic snippet.
*   originalTotalItems (type: integer(), default: nil) - The number of items in the original list.
*   radishScore (type: number(), default: nil) - The score of the radish signal.

Duo related call settings on the device. Next ID: 5
*   allowKnockKnock (type: boolean(), default: nil) - True if Duo Knock Kncok feature is enabled on the device.
*   shouldBeLinked (type: boolean(), default: nil) - Boolean indicating if user has explicitly marked this device to be linked or not. This bit is used in case where unexpected errors occur and we have to check for account/device status and mark the device linked after verification.
*   state (type: String.t, default: nil) - The call state of the device (i.e. whether a Duo call account has been setup on the device).
*   talkbackEnabled (type: boolean(), default: nil) - Client device settings: settings which are populated by client to give to duocore. TalkBack is an accessibility service that helps blind and vision-impaired users interact with their devices. Indicates whether talkback is enabled for the device. Note: this is per device settings currently filled by client for all users.


Capability with regard to support of alarms by the client.
*   maxSupportedAlarms (type: integer(), default: nil) - Maximum number of alarms that can be created on the client. Zero or unset indicates no maximum limit.
*   restrictAlarmsToNextDay (type: boolean(), default: nil) - Whether the client restricts alarms to ring within the next 24 hours.
*   supportsGenericMutations (type: boolean(), default: nil) - Whether the client supports mutation of any alarm attribute such as time_pattern, recurrence_pattern, etc through the MUTATE action. If this is false, MUTATE may only be used to disable or dismiss an alarm. This field is true by default for backwards-compatibility; clients which don't support mutation outside of Disable/DismissAlarm should explicitly set this to false.
*   supportsStopAction (type: boolean(), default: nil) - Whether the client supports the STOP alarm action. If this is false, stop actions will be represented by the MUTATE action, and the device may need to check alarm state to determine if there's a firing alarm that needs to be dismissed.

The identifier of a WebrefEntity (see webref-entities.proto). IMPORTANT: Please consider reading this proto through GetWebrefEntityMid() in webref-entities-util.h, because this proto may: a) contain both freebase_mid and concept_id (this is frequently the case to avoid breaking downstream clients), b) only contain freebase_mid or only contain concept_id (as the other one is technically redundant), c) contain neither of them or be missing entirely (potentially in future).
*   conceptId (type: String.t, default: nil) - The MID in integer format. Nowadays, this field contains the equivalent representation of freebase_mid, i.e. what metaweb::ParseId() returns.
*   freebaseMid (type: String.t, default: nil) - The MID in the same format that is returned by metaweb::MidToString(), e.g. "/m/02mjmr" or "/g/11b6vyscgb" or "/t/24bjj59_jbj9f".

Principal associated with a given RBAC role. This principal is used by Sphinx Provisioning Service for RBAC provisionable (go/sphinx-rbacz).
*   rbacRoleName (type: String.t, default: nil) - Format: "role/z?" - "role" is the Sphinx globally unique name of the Sphinx role that provisions the RBAC role. - "/z?" suffix indicates which Zanzibar environment stores the role membership data ("/zd": dev, "/zs": staging, "/zp": prod, "/zt": local test instance). Example: "mysystem_myrole/zp"

Contact state and related metadata. See go/fbs-contacts-trash. This message is a pure wrapper of the shared ContactState message so that it can be a top-level person field. No other fields should be added to the message.




Contains the app privacy bits used for App Integrations implicit request. (go/app-privacy-settings-for-implicit-requests)
*   handleRequestsWithPredictedApps (type: String.t, default: nil) - Whether to enable Assistant to handle request with predicted apps.


When an anchor label has a long duration (for example, labels that contain multiple sentences), this field stores the mapping between label segments and the start time.
*   asrConfidence (type: number(), default: nil) - The ASR confidence for the label span, if available.
*   isSentenceStart (type: boolean(), default: nil) - Whether or not this token is the first token in a sentence.
*   labelBeginCharIndex (type: String.t, default: nil) - The character index range for the span. The end index is exclusive.
*   timeMs (type: String.t, default: nil) - The time of the span.

Stores all human ratings collected for a given entity name.
*   ratings (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityNameRatingsEntityNameRating.t), default: nil) - Every entity name receives one or a few ratings from human raters.
*   tags (type: list(String.t), default: nil) - Multiple tags can be assigned to a rated entity name. The tags can be used when computing metrics in the Name Eval, so that different metrics are computed separately for different sets of examples that have the same tag.


The docshards are a FlatSSTable from (64-bit) urlfp to data containing the information found in this protocol buffer. (It's not actually one of these PBs for various performance reasons; instead, the DocumentFormat class handles serialization and deserialization in our own way) Next available ID: 37
*   averageTermWeight (type: integer(), default: nil) - The average weight of terms in the document. If not available, there will be no term weight averaging: font sizes will be taken literally from the document HTML.
*   doc (type: GoogleApi.ContentWarehouse.V1.Model.GDocumentBase.t, default: nil) - The document itself. If present, the docservers parse the contents to create a mustang repository.
*   extendedDocid (type: String.t, default: nil) - The serialized ExtendedDocId, needed to construct a proper docinfo response if the docinfo request is missing it and it's present.
*   globalDocid (type: String.t, default: nil) - the global docid, we need it in the docservers (Continuum mode) to construct proper docinfo response when the docinfo request does not contain a valid global docid
*   sectionType (type: String.t, default: nil) - Indicates format of 'tokens' field in all Section entries.

There are templated functions that fill the abstract fields designed to take either ScienceCitation or ScienceCitation::AlternateAbstract, so these field names must match those used for the primary abstract.
*   AbstractHtml (type: String.t, default: nil) - Version of abstract field for display. This may contain XML/HTML tags.
*   AbstractHtmlLeftOver (type: String.t, default: nil) - Leftovers from AbstractHtml. These are usually unrecognized xml/html entities or xml/html tags
*   AbstractTypeFromSource (type: String.t, default: nil) - The original (unnormalized) type of an abstract. AbstractDisplay holds a normalized type deduced from things like tagnames, tag-attributes, keywords in documents or the placement of the abstract in the document. This field is meant for the type of the abstract identified explicitly by the source document. E.g., the value of the 'abstract-type' attribute from a tag in XML ('primary abstract', 'summary', 'highlights' etc.).


Optionally returned by Delver API in the response's debug_info field.


Features to be extracted from Endpoint GP for ranking in HGR. Next ID: 2
*   isUserConfirmed (type: boolean(), default: nil) - Proxy signal which tells whether the user provided a confirmation to a prompt or not. See http://shortn/_XnZAJBIiwG for more details.

Accepts any non-empty value. This is meant for special cases allowing any value or any composition to be valid in a slot. If you are thinking of using this, please contact mrf-team@.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

Possible patterns of a crossing stripe (any element that denotes a point on a segment or lane at which the vehicle must stop or yield). These include crosswalks, stop, and yield lines.

LINT. IfChange Contexts regarding the preferences from OPA_RECIPES. For example, users can click a recipes and say they don't like one cuisine. OpaRecipesContext will contain the doc_id/url of that recipes.
*   docId (type: String.t, default: nil) - The recipe doc id where the setting comes from.
*   url (type: String.t, default: nil) - The recipe url where the setting comes from.





Used when a field is accessible to a legacy contact group. Contact groups are discouraged and may be deprecated soon. ContactGroupAcls are read-only. If they are included as part of an ACL on an Update, an exception is thrown.
*   contactGroupId (type: String.t, default: nil) - A contact group ID. This is either a user-defined contact group hex ID, or it is the string name of the enum constant in Group.PredefinedId in FBS backend.proto for predefined groups. Common values for the predefined name include, but are not limited to: all, myContacts, starred, chatBuddies, friends, family, coworkers, and blocked.
*   displayName (type: String.t, default: nil) - The localized display name for the predefined group, if known; or, the display name for the user-defined contact group. Included when FieldAclOption.FULL_ACL_WITH_DETAILS is requested.

Provide the deeplink information specific to YouTube PMAs. Next ID: 3
*   uploaderChannelId (type: String.t, default: nil) - For YouTube Channels, by default the deeplink is set to be the playlist of all uploads from the channel. This field is used for YouTube in-app browse when we need the YouTube channel's main page url. We will use the uploader_channel_id to construct the needed channel deeplink.

Additional information about a container. TO BE DELETED: replaced by DeviceContactInfo.
*   rawDeviceContactInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRawDeviceContactInfo.t), default: nil) - When the container is a DEVICE_CONTACT, this list provides account information from the raw contact which is the source of this field.







Annotations of a single docjoin segment. A CDoc has several distinct data types which we call "segments" (see SegmentType for complete list). SegmentMentions contains all the mentions for a given (document, segment) pair. For queries there is only a single CONTENT segment.
*   mention (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMention.t), default: nil) - A list of all the places the entity in question was annotated within this segment. The (indexing.annotations.goldmine) option is for Goldmine AnnotationsFinder to include Mention only when segment_type="CONTENT"




A latitude-longitude rectangle, represented as two diagonally opposite points "lo" and "hi". The rectangle is considered to be a closed region, i.e. it includes its boundary. The latitude bounds must be in the range -90 to 90 degrees inclusive, and the longitude bounds must be in the range -180 to 180 degrees inclusive. Various cases include: - If lo == hi, the rectangle consists of a single point. - If lo.longitude > hi.longitude, the longitude range is "inverted" (the rectangle crosses the 180 degree longitude line). - If lo.longitude == -180 degrees and hi.longitude = 180 degrees, the rectangle includes all longitudes. - If lo.longitude = 180 degrees and hi.longitude = -180 degrees, the longitude range is empty. - If lo.latitude > hi.latitude, the latitude range is empty.




Used to represent the unique id of an attribute.
*   id (type: String.t, default: nil) - The id of the attribute. Stored as a stripped format of the gcid (e.g. "foo" instead of "gcid:att_foo").
*   providerId (type: String.t, default: nil) - Set because it's required, but not really meaningful in geostore (always set to "Geo").

A date-time specification, combining a date and civil time (relative to a given timezone).


Metadata related to the history of a given feature in the Geo repository.
*   featureBirthTimestampUs (type: String.t, default: nil) - The timestamp (in microseconds since the UNIX epoch) when this feature first went live in the Geo repository. Note that this has no relation to the birth data of that geographical entity in the real world.
*   lastModificationTimestampUs (type: String.t, default: nil) - The timestamp (in microseconds since the UNIX epoch) of the last modification to the feature. Note this includes attachment modifications. The feature's initial creation is also considered as a modification. This is useful for those that consume features via both listening to notifications and reading from repository snapshots. This timestamp can be used to decide whether a feature in the snapshot was already seen in a more recent state through the notifications.
*   removalTimestampUs (type: String.t, default: nil) - The timestamp (in microseconds since the UNIX epoch) of the deletion time of the feature. If the feature is currently removed, this field gets populated with the timestamp the feature first became removed after being live (or being removed from beginning). This field won't be set if the feature is live.

Don't change the field names. The names are used as sparse feature labels in client projects.
*   childScore (type: number(), default: nil) - The probability that the youngest person in the image is a child.
*   csamA1Score (type: number(), default: nil) - Experimental score. Do not use. Google confidential!
*   csamAgeIndeterminateScore (type: number(), default: nil) - Experimental score. Do not use. Google confidential!
*   iuInappropriateScore (type: number(), default: nil) - This field contains the probability that an image is inappropriate for Images Universal, according to this policy: go/iupolicy.
*   racyScore (type: number(), default: nil) - This score is related to an image being sexually suggestive.
*   semanticSexualizationScore (type: number(), default: nil) - This score is related to racy/sexual images where scores have semantic meaning from 0 to 1.
*   ytPornScore (type: number(), default: nil) - Deprecated, use porn_score instead. The most recent model version does not produce this anymore.


Principal associated with a given RBAC subject. This principal is used by Sphinx Provisioning Service for RBAC provisionable (go/sphinx-rbacz).

A bitmap of bool values associated with a link kind. Next available tag: 12







title (type: String.t, default: nil) - Product info extracted by Product Blocks go/sdu-shopping-page-intro and go/product-block-extraction. Here is an example of a page with a ## list_title (Shoes) and 3 blocks with their own titles: | Shoes | | ---------------------| |  For Running | | ---------------------| |  Men's Hiking | | ---------------------| ## | * Dress Shoes | The field full_title is what we constructed to best describe the product in the block. For example, for the above 3 blocks, their full_titles will contain info from list_title: "Shoes For Running", "Shoes Men's Hiking", "Dress Shoes". Note that the list_title is not repeated for the 3rd block Real sample pages: http://screen/6UaoBtwWsLfbSKg http://screen/BDHRgDonKG3KcXu, http://screen/53tLwNaX8mmYzDz





Intent level instructions apply to the entire intent and all its argument values.




This proto captures the output of analyses that ran on Automatic Speech Recogntion produced by the recognizer.
*   numGibberishSegments (type: integer(), default: nil) - The number of the above segments that were classified as gibberish.
*   numSegmentsClassified (type: integer(), default: nil) - The number of ASR segments that were sent for classification.

Information for transforming a point from an "old" to "new" coordinate frame. Applied as follows: vertex_new = scale * vertex_old + translate
*   scale (type: float(), default: nil) - Relative scale of the vertices in the new coordinate system relative to the old coordinate system. Applies to all three x,y,z coordinates.
*   translate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoTransformTranslate.t, default: nil) - Offset of each vertex in the new coordinate system relative to the old coordinate system.

The annotation of a document by a given entity, for a given type of relationship.
*   format (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosFormatRelationship.t, default: nil) - The annotation is a format annotation, i.e. it tells the format of the video.
*   present (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosPresentRelationship.t, default: nil) - The annotation is present in the video. Semantic Legos and Presence Legos naturally overlap and can contain the same entities. However, we do not enforce a strict subset relation.
*   semantic (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosSemanticRelationship.t, default: nil) - The annotation is a semantic annotation, i.e. it tells what the document is about and what the reasons to watch the video are. The annotation should be valid for the complete annotated document, not simply a part of the document such as a video segment.
*   taxonomic (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosTaxonomicRelationship.t, default: nil) - The annotation is a taxonomic annotation, i.e. it tells to which class of the Legos taxonomy the document belongs to.

Per-doc data for the web page about the cited book Approximate size is on average ~10bytes
*   bookId (type: String.t, default: nil) - the book id for the main citation
*   discretizedCitationScore (type: integer(), default: nil) - the discretized citation score for the main book. we map the raw score 1.0-20.0 to 0 - 127
*   previewable (type: boolean(), default: nil) - Is there a preview or excerpt of the book on this document?
*   secondBookId (type: String.t, default: nil) - book id for the second citation if we can't separate the two top citations (they are too close).
*   secondDiscretizedCitationScore (type: integer(), default: nil) - the discretized score for the second citation


These capabilities represent capabilities that have to do with casting that pertain to this device. Next ID: 9
*   cameraReceiverCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCameraReceiverCapabilities.t, default: nil) - Whether the device has limited camera stream capability and if yes, which receivers are supported.
*   cameraStreamSupportedProtocols (type: list(String.t), default: nil) - The supported protocols for camera streaming. The value is used as string in go/smarthome-internal-api#camera-stream, so using a string for this field instead of an enum. Supported protocols: (align the definition in go/smarthome-camerastream-trait) - "hls": HTTP Live Streaming - "dash": Dynamic Adaptive Streaming over HTTP - "smooth_stream": Smooth Streaming - "progressive_mp4": Progressive MP4 (will likely only be used for Clips) - "webrtc": WebRTC (currently, only H.264 is supported) - "nexustalk": Internal-only protocol used for Nest
*   canReceiveCast (type: boolean(), default: nil) - True if we can cast things to this device.
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - Optional for primarily cast devices (e.g., Chirp, Chromecast). For devices that are NOT primarily cast devices, but having a cast receiver as secondary functionality, this field SHOULD store the cast-device-id to be used to send remote casting commands to the device. Example: Android TV, which supports both Android-native actions as well as remote casting using its built-in cast receiver. Android TV device id contains a DUSI id, which is not a cast-device-id. When executing a cast command on the Android TV, this field is used to route the cast command (through CloudCastService) to the cast receiver on the device.
*   dynamicGroupsSupported (type: boolean(), default: nil) - Whether this device supports dynamic groups or not. It implies if a Stream Control operation (transfer, expansion, and contraction) could be applied on this device since Stream Control is implemented as part of dynamic groups (ie, adding/removing devices from playback)
*   overlayApplicationsSupported (type: boolean(), default: nil) - Whether UI overlay applications are supported on this device. It's used by Chromecast only.
*   yetiGamingSupported (type: boolean(), default: nil) - Whether the device supports playing games through Yeti. This is set by the cast device when the device is updated: Chromecast updates -> Chromecast registers its capabilities with CCS -> CCS passes the capabilities to the AssistantSettingsService -> AssistantSettingsService stores the device's capabilities. go/yeti-gaming-supported-cast-capability


Contains a mimetype supported by a third-party app together with additional ids and other data that the apps use to complete the action for the given mimetype. For example, an app_specific_endpoint_id that corresponds to a WhatsApp Profile. Full Design: go/3p-contact-upload LINT. IfChange
*   data (type: list(GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiDataColumn.t), default: nil) - Set of column-name and value for the given mimetype. The semantic meaning of the column values is mime-type specific. For example they may contain app_specific_endpoint_ids for WhatsApp. This is uploaded from CP2 http://go/cp2-data1 through http://go/cp2-data14.
*   mimetype (type: String.t, default: nil) - The mimetype of the action defined by the third-party app.

Describes our knowledge about whether a stored file is truncated with respect to its original file online.
*   truncationState (type: String.t, default: nil) - Indicates whether the stored file is equal to the original file (COMPLETE), is only a prefix (TRUNCATED), or that we don't know (UNKNOWN, the default).

Product profiles failure type: the status of the rpc to fetch the product profile.

Hashtag metadata, for HASHTAG segments. For a hashtag, the "text" field should contain the display text, and the search_text field should represent the topic being referenced, without the hash symbol; for example, we might have: text = "#Google" hashtag_data.search_text = "Google" Another example: text = "#pikachu" hashtag_data.search_text = "Pokemon" Both strings should be considered part of the searchable text. In go/sbe, both are indexed and searchable.




A route is a collection of segments that forms a logical group - usually a named road or highway. Segments can belong to more than one route, and the segments of one route may be a subset of the segments of another route (e.g. I-5 N is a subset of I-5). Segments in the collection that define the route do not need to constitute a single uninterrupted line, there can be disconnects. The standard feature properties are interpreted as follows: name - Routes should have one or more names. (While unnamed roads certainly exist in the real world, we choose not to create route features for such roads. Instead, the unnamed segments are merely not part of any route.) address - This should always be empty. type - Specifies a particular route subtype, see feature.proto. point - This should always be empty. polyline - This should always be empty. polygon - This should always be empty. child - The pairs of segments that belong to this route (a given route should always reference segments in both travel directions).
*   childType (type: integer(), default: nil) - The feature type of the route children. Should be set if and only if all children are of the same feature type.


A 32 bit fingerprint of a state level geotoken. The geotoken is in the following format: statecountry. These indicate a page is of interest to these states/regions of a country. The use of message is to enable easy additions of probabilities or weights per metro id in the future.

The information associated with an error while selecting the target device. Next ID: 2


Our TYPE_INTERSECTION features model the point where one or more segments terminate. This is topological definition: it may not match what a typical user would think of as an "intersection". Consider the intersections where Hayes, Market, Larkin, and 9th Street meet near (37.77765, -122.41638) in San Francisco. Most people would probably consider this a single feature, even though we model it as four separate TYPE_INTERSECTION features. The TYPE_INTERSECTION_GROUP is used to model the user's concept of a real-world intersection, which also includes turn lanes or a whole roundabout (a logical intersection). For the purposes of modeling turn restrictions and lane connections, a smaller grouping is needed to model the "core" part of the intersection where there are no lane markings. This is called a core or artifact group. An intersection group must contain at least two intersections or add some information (e.g. a name or a polygon) compared to the intersection itself, or else must not exist. The standard feature properties are interpreted as follows: name - Can be used to specify any "special" names associated with this intersection (e.g. Reads Corner intersection, PEI, Canada). Intersections that are named according to their cross streets do not need to specify this field, since this can be determined by looking at the routes associated with each segment. address - This should always be empty. point - Specifies the center of the intersection. This is basically the point where the intersection name should be rendered. Can be omitted in favor of a polygon. polyline - This should always be empty. polygon - Specifies the two-dimensional extent of the intersection. This may substitute to the point field, though having a center set is desirable in this case. child - This should always be empty.
*   childGroup (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - All artifact intersection groups that are in this logical group.
*   intersection (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The list of TYPE_INTERSECTION features that form this intersection group, but are NOT in any of this group's child groups. This could be an empty list, though that is sub-optimal. Even an empty list would allow the paint team to draw a label for a named intersection, but a non-empty list would, for example, enable PathFinder to generate better directions. Each of the TYPE_INTERSECTION feature referred here must refer back to this feature in its IntersectionProto.
*   parentGroup (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Parent logical intersection group. An artifact group that does not have an associated parent logical group is assumed to be both an artifact and logical group.

go/entity-authority NB: currently all facts associated with Authority Feedback are externally traceable to the requests from which they originate.

Histogram result that matches HistogramQuery specified in searches.
*   histogram (type: map(), default: nil) - A map from the values of the facet associated with distinct values to the number of matching entries with corresponding value. The key format is: * (for string histogram) string values stored in the field.

Identifier used to represent a single application (a.k.a. provider). This model represents the surface-agnostic counterpart for assistant.api.core_types. Provider. E.g. it should avoid directly using package names for Android, bundle identifiers for iOS, etc. We require the transformation between assistant.context.ProviderId and assistant.api.core_types.Provider to either be lossless, or "lossy yet retrievable" (e.g. if package name is not available in ProviderId, it can still be retrieved using the ProviderMappingsModule). NOTE: 1. As of May 2021, verticals are highly fragmented in terms of how they represent/identify a provider, and so we may need to accommodate some vertical-specific representations. However, these should be generalized as much as possible so that they can be used by other verticals if needed. 2. If we need to differentiate between whether a provider is a media provider, app actions provider, timer provider, etc. we should capture this information in the context proto that contains a ProviderId field, rather than in the ProviderId message itself. 3. Any common fields across different provider identifier representations (e.g. ecosystem type) should be part of assistant.context.ProviderId directly.
*   mediaProviderId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantContextMediaProviderId.t, default: nil) - DEPRECATED. Fields in MediaProviderId have been pulled out into separate fields in ProviderId and ProviderMetadata. TODO(b/243953766) Deprecate this field.
*   mid (type: String.t, default: nil) - The MID of the provider. A MID is a unique identifier issued by Knowledge Graph for all entities contained in its graph.
*   providerCorpusId (type: String.t, default: nil) - ID issued by the Provider Corpus to uniquely identify a provider entity e.g. an Android app, a Cast app or a Cloud provider. In practice, a single partner can have multiple providers entities. For more detail, see go/se-storage-provider-id. This is the preferred/ standardized ID to use for ProviderId that all use-cases should eventually migrate to.
*   providerVariant (type: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderVariant.t, default: nil) - Provider variant corresponding to the current provider. It's used together with mid to uniquely identify provider.

The version of the surface/client. New surfaces are encouraged to only use the “major” field to keep track of version number. The “minor” field may be used for surfaces that rely on both the “major” and “minor” fields to define their version.

The restricts that are computed before building a Mustang index.




Collects signals from one query used for prior learning.
*   candidates (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefNameDebugInfoCandidateInfo.t), default: nil) - List of per-candidate signals derived from annotation of this query.
*   query (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLocalizedString.t, default: nil) - Query with region (language is set in parent NameInfo).




Video level container for thumbnail with its attributes, e.g., timestamp, id, quality scores, annotations, or features.


The dynamic IAM bindings to be granted after tenant projects are created.
*   members (type: list(String.t), default: nil) - Input/Output [Required]. The member service accounts with the roles above. Note: placeholders are same as the resource above.
*   resource (type: String.t, default: nil) - Input/Output [Required]. The resource name that will be accessed by members, which also depends on resource_type. Note: placeholders are supported in resource names. For example, ${tpn} will be used when the tenant project number is not ready.
*   resourceType (type: String.t, default: nil) - Input/Output [Required]. Specifies the type of resource that will be accessed by members.
*   role (type: String.t, default: nil) - Input/Output [Required]. The role for members below.

These are the set of ClientOps that are supported by the device.
*   clientOpName (type: String.t, default: nil) - This should be the same as the name of the SemanticClientOp that is supported.
*   clientOpProperties (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiProtobuf.t, default: nil) - The properties associated with the ClientOp. This proto should be associated with the client_op_name.
*   version (type: integer(), default: nil) - A version of 0 is the equivalent to not having support for that client_op type. Note that a client_op is also unsupported if it is not included at all in the list of supported client_ops.

This protocol buffer indicates actions that we take based on Cookbook recipes (see http://cookbook/) matching a particular document.

Note: As of May 2021, multiple providers use the same mids (e.g. YouTube Main, YouTube Go, and YouTube Music all have the same mids). However, quite often we end up using surface specific identifiers (e.g. Android package names, iOS bundle identifiers, etc.) to differentiate amongst them. This field allows us to move away from surface specific identifiers towards a surface-agnostic enum representing the same information.

--------------------------------------------------------------------------- WARNING - if you add new fields to SegmentProto (or to other protos used by SegmentProto), you need to: - ensure that the ShortSegmentsMerger class (in geostore/tools/internal/mr-mergesegments.cc) is aware of them, otherwise the new fields will be discarded randomly. - consider whether they should be cleared in the ClearFeature() function (in maps/render/process-high-priority-roads.cc) if they are irrelevant for rendering high priority roads at far-out zoom levels. - update the test cases that ensure these two packages know all the SegmentProto fields in both mr-mergesegments_test.cc and maps/render/process-high-priority-roads_test.cc or you will break the VersaTile build. ---------------------------------------------------------------------------
intersection (type: GoogleApi. ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The intersection feature corresponding to the destination of this segment. Intersections are used to represent the connectivity between segments. Each intersection stores the segment ids of all the incoming and outgoing segments that meet at that intersection. Turns can be made from this segment to any of the outgoing segments of its intersection, unless there is a restriction that explicitly disallows the turn (see below). Every segment has an intersection object, even if there are no other segments to connect to (i.e., a cul-de-sac or dead end).  onRight (type: boolean(), default: nil) - Specifies whether this segment carries right-hand traffic (cars keep to the right side of the road) instead of left-hand traffic (cars keep to the left side). This is true for US roads and false for UK roads, for example. See go/wikip/Left-_and_right-hand_traffic.  surface (type: String.t, default: nil) - clang-format on LINT.ThenChange(//depot/google3/geostore/base/proto/lane.proto) Specific lanes may override this segment-level surface type.  pedestrianCrossing (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePedestrianCrossingProto.t, default: nil) - Defines the pedestrian crossing(s) between the end point of this segment and the start point of this segment's sibling.  legalMaximumSpeed (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAppliedSpeedLimitProto.t), default: nil) - The legal maximum, legal minimum, and advisory (recommended but non-legally binding) maximum speed limits that are permitted on this segment. These should be the segment's legal limits; however, note that it may contain estimated values based on country-wide defaults and other heuristics (see 'AppliedSpeedLimitProto.trust_level'). Before exposing these fields to users as the legal speed limit please consult with Google lawyers.  routeAssociation (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRouteAssociationProto.t), default: nil) - Holds metadata about the associations between this segment and the route features listed in the route field. This metadata need not be present; the only consistency requirement is that every feature ID that appears inside 'route_association' must also appear in the repeated 'route' field. If a route does not appear in route_association, consumers should assume that it has a default initialized RouteAssociationProto.  roadMonitor (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The road monitors that monitor this segment for traffic violations.  maxPermittedSpeedKph (type: number(), default: nil) - The maximum speed that is permitted on this segment, in kilometers per hour. This should be the segment's legal speed limit; however, note that it may contain estimated values based on country-wide defaults and other heuristics (see 'is_max_permitted_speed_derived' below). Before exposing this field to users as the legal speed limit please consult with Google lawyers.   distanceToEdge (type: number(), default: nil) - Average distance between the segment's polyline and edge of the road on this side in meters. It need not be equal to the sum of width of all lanes in this direction. This width includes on-street bicycle lanes but excludes off-street lanes such as sidewalks. The edge of the road is the rightmost edge for segments in right side driving countries and leftmost edge for left side driving countries. Width of the road is sum of this and sibling's distance_to_edge.  slope (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreSlopeProto.t), default: nil) - Each slope instance is tied to a point along the segment polyline (unrelated to the vertices in the segment's polyline) and represents the slope of the segment between that point and the point tied to the next slope istance, or the end of the segment if it's the last slope instance. A segment should have at least one slope.  visibleLandmark (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLandmarkReferenceProto.t), default: nil) - A collection of landmarks that are visible when traveling along this segment and useful for wayfinding to users following routes using this segment. The landmark need not be on the segment. Each segment in a pair of siblings specifies its landmarks independently. A landmark applicable to both appears in both.  gradeLevel (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreGradeLevelProto.t), default: nil) - Detailed information about grade levels along the segment. If a GradeLevelProto is not present for any point (index) along the segment, the default grade level is zero. In between two points (indexes), the grade level of the segment is taken to be the max of the grade levels on either side of it. See gradelevel.proto for semantics of repeated indexes.  edgeFollowsSegmentBeginFraction (type: number(), default: nil) - These indicate for what portion of the segment does the outer curb of the segment follow the segment polyline - i.e., where do the sweep curves connect along the outer curb. If unspecified, may be assumed to be equal to lane retraction, preferring outermost lane.  roadSign (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The road sign(s) which this segment refers to. These are features of TYPE_ROAD_SIGN that are applicable to this segment. For example, a sign that says "TO KIRKLAND" might apply to several segments on a freeway off-ramp (until the end of the ramp). Note that this field makes it easy to find the signs for a given road segment. The feature for the sign lists the segments that refer to it.  avgSpeedKph (type: number(), default: nil) - The average speed that should be expected along this route under normal conditions, in kilometers per hour. (Hopefully we'll replace this with something a lot more sophisticated.)  tollRoad (type: boolean(), default: nil) - If this segment is part of a toll road. It would be nice to have data about the toll cost, locations of toll booths, and so forth. Sadly, we don't have this data at this time.  route (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The route(s) to which this segment belongs.  restriction (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t), default: nil) - The set of restrictions that apply to this segment. Restrictions may make a single segment, turn, or more complex maneuver along a set of segments unroutable for the specified travel modes, or may only add penalties or warnings, depending on the restriction type. Turn restrictions are one example of a restriction. By default, turns are allowed onto all outgoing segments from this segment's intersection (including the sibling of this segment, i.e. U-turns are allowed by default). If any of these turns are disallowed they will be listed as "subpath restrictions". A subpath restriction disallows travel on given sequence of segments. In the case of a disallowed turn, the subpath simply consists of the source and destination feature ids. There may also be restrictions that apply to all travel on this segment (e.g. chains required, or closed in winter), or restrictions that just apply to certain lanes (e.g. high occupancy vehicle lanes).  covered (type: boolean(), default: nil) - Whether the segment is covered by a roof etc. If this field is missing, the status is unknown.  sibling (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The other segment of this segment pair (see above). The segment that is referenced by the sibling field refers to this feature back via the same sibling field. Both segment and sibling should have the same properties such as geometry, country code, elevation, level relation, priority etc. Since routes are required to have segment and sibling at the same time, the set of routes on a segment is same to that of the sibling.  separatedRoadways (type: boolean(), default: nil) - Indicates whether the segment's opposing lanes of traffic are separated from this segment, and hence have been represented in a separate feature. This means that there are two pairs of siblings instead of one.  isMaxPermittedSpeedDerived (type: boolean(), default: nil) - Specifies whether the max_permitted_speed_kph was derived from a heuristic as opposed to coming from an authoritative source.  sweep (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreSweepProto.t), default: nil) - The geometric sweeps between this segment and nearby segments, used for real road width rendering. A sweep describes the surface that connects to segments.  constructionEndDate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDateTimeProto.t, default: nil) - If known, the date that construction is scheduled to end.  interpolationOffsetMeters (type: number(), default: nil) - If specified, the perpendicular offset in meters from a road segment to an interpolated address along that road segment. See go/synthetic-address-positions.  constructionBeginDate (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDateTimeProto.t, default: nil) - If known, the date that construction is scheduled to begin.  lane (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLaneProto.t), default: nil) - Detailed information about each lane in this direction, if available. Lanes are numbered from inside of the road outward, i.e. the lane next to the center line has lane_number 0. Note that lanes that are valid for travel in both directions appear in both segments of a segment pair (left turn lanes, one-lane roads, some passing lanes, reversing lanes). Some lanes may not be usable by cars, such as bike lanes. Also, some lanes may not exist along the entire segment, e.g. left- or right-turn lanes that appear just before the intersection.

Information pertaining to how this reachable state was established.
*   keyValue (type: String.t, default: nil) - The value of the key by which the user said they may be reachable. E.g., the phone number.




Contains video level features for generated queries that are applied at the video level.
*   filterReason (type: list(String.t), default: nil) - A description of why the video was removed. This is intended for debugging generated queries that are filtered at the video level.
*   prefilteredPassageCount (type: integer(), default: nil) - The total number of passages that were input to generating queries for this video. This count might be bigger than the total number of anchors in the video as some of the anchors might have been filtered by the pipeline.
*   titleEntityAnnotations (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchEntityAnnotations.t, default: nil) - Entity annotations for one of the mids representing the video title. This entity is either one of the blocklisted entities if at least of the mentioned entities in the title belongs to the blocklisted categories, or is the highest confidence entity for the title.
*   totalRestrictedQueries (type: integer(), default: nil) - The total number of queries that belong to the blocklisted categories for this video.


Used to describe app capabilities of the device installed apps reported to the server.
*   allowlistedForMediaFulfillment (type: boolean(), default: nil) - Indicates whether the provider is compatible for media fulfillment on this surface. For example, Amazon Music isn't compatible with the driving mode.
*   appIntegrationsSettings (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppIntegrationsSettings.t, default: nil) - Currently unused. Will be used in the future when integrating with incremental app capabilities.
*   disabledSystemApp (type: boolean(), default: nil) - This system app is disabled in settings.
*   provider (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t, default: nil) - The installed app of the provider.
*   routableToProviderCloud (type: boolean(), default: nil) - This provider has integrated its cloud backend with Google, and Google can route the user queries to the provider's cloud.
*   searchableOnDevice (type: boolean(), default: nil) - This provider has an app that supports on-device search through the provider's own inventory.
*   searchableOnServer (type: boolean(), default: nil) - This provider has integrated its content with Google, and Google has enabled to serve its content as a server-side solution.
*   supports3pPodcastPlayback (type: boolean(), default: nil) - Indicates whether the provider supports playback of 3P(externally hosted) podcasts.
*   supportsScreenlessInitiation (type: boolean(), default: nil) - This provider has an app that supports starting new media playback when there is no screen (e.g. by integrating with the Bisto SDK).
*   whitelistedForAnnotation (type: boolean(), default: nil) - This provider is an app which should be used for query annotations. This is useful for apps which may not be already indexed by Google or are client specific.

A room that is available for a potential meeting or has been booked for a scheduled meeting. Next id: 4
*   email (type: String.t, default: nil) - Room email that identifies the room and is used to book it.
*   name (type: String.t, default: nil) - Room name (ex: "MTV-PR55-5-A-Shadow 5K0 (13) GVC (No external guests)").





Versioning Information used for Logging Purposes. See go/sori-logjoining.


this information is specific to anchors and is only returned if type == ANCHOR




Example: "my library", "some music".
*   annotationList (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaAnnotationList.t, default: nil) - Annotations from custom media annotator. Deprecated - generic music deeplinks should be added to the Provider config, not to the grammar.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!
*   rawText (type: String.t, default: nil) - Required, corresponds to the raw text, like "my tracks"




SalientTermSet is a collection of terms (unigrams and bigrams) with associated weights that can describe something. The "salient terms".
*   salientTerm (type: list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm.t), default: nil) - salient_term is the list of terms that are good descriptors, sorted in decreasing order of weight.
*   version (type: String.t, default: nil) - version is the Salient Terms version used to create the SalientTermSet. This is specific to web documents salient terms.


This message holds metadata and signals of one video. It is typically used for holding debug data in tables produced by offline pipelines related to video anchors. Please never populate this message into the search serving stack. Next ID: 31
*   amarnaDocid (type: String.t, default: nil) - A hash of the video bytes used as a key to Amarna's video_metadata table.
*   hasAsr (type: boolean(), default: nil) - Whether or not automatic speech recognition has been generated for this video.
*   hasDescriptionAnchors (type: boolean(), default: nil) - Whether or not the video has description anchors.
*   isSafe (type: boolean(), default: nil) - Convenience field that is false if any of the video's anchors have their is_safe field set to false.
*   isWatchpage (type: boolean(), default: nil) - Whether or not this is watchpage.
*   pseudoVideoData (type: GoogleApi.ContentWarehouse.V1.Model.PseudoVideoData.t, default: nil) - ASR with timing info for each token copied from doc_videos.content_based_metadata.transcript_asr.
*   saftDoc (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftDocument.t, default: nil) - The Saft document generated from the anchor labels.
*   saftTranscript (type: String.t, default: nil) - The transcript used to generate the Saft doc.
*   salientTermSet (type: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTermSet.t, default: nil) - Salient term set from the document. This message contains a lot of data and dependencies, so sub-messages are disabled in model evaluation in scorer.
*   subindexid (type: list(integer()), default: nil) - The subindexid from the cdoc. Stored as an int to avoid a cyclical dependency. Should be convertible to CompositeDoc.SubIndexType.
*   transcriptAnnotations (type: GoogleApi.ContentWarehouse.V1.Model.QualityWebanswersTranscriptAnnotations.t, default: nil) - Transcript annotations that include information about the ASR including timing and entity mentions.
*   verticalItem (type: list(GoogleApi.ContentWarehouse.V1.Model.IndexingMlVerticalVerticalItem.t), default: nil) - Top petacat verticals of the video produced by indexing/ml/vertical, sorted in descending order by vertical confidence.
*   videoGenre (type: String.t, default: nil) - Genre of the video from the page metadata. Concatenate all with a comma separator if there are multiple genres.
*   videoUrl (type: String.t, default: nil) - Video url. Note that VideoInfo::url is a page url that has this video, while this is a video file url.
*   webrefEntities (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntities.t, default: nil) - Represents a collection of entities returned by the WebRef service. This message contains a lot of data and dependencies, so sub-messages are disabled in model evaluation in scorer.

This provides a semi-abstract description for relative datetime expressions. - ShiftedRelativeDateTime encodes datetimes that arise from before/after expressions (e.g. [three days ago], [2 days after March 1st]). - FetchedRelativeDateTime encodes expressions that are retrieval-type statements (e.g. [next weekend], [the last two Mondays]). Next field: 5
*   modifier (type: String.t, default: nil) - When a relative datetime which resolves into a range is being used as the endpoint of a range (begin_relative/end_relative), its begin/end will be taken accordingly unless this modifier indicates the opposite: begin_relative with relative range and modifier == AFTER means that its end will be taken as the beginning of the resulting range. Similarly, end_relative with a relative range and modifier == BEFORE means that its begin will be taken as the end of the resulting range. E.g. "after next month" will be a range with a begin_relative that will take the end of "next month" as its starting point (exclusive). values other than AFTER and BEFORE in the specific conditions explained here will be ignored and have no effect in the resolution of RelativeDateTimes.


This wrapper is used for passing in additional information to generate embeddings in Goldmine.


If the label is for something that links to another piece of content (in this volume, outside, a url, a citation, etc.).
*   UrlTarget (type: String.t, default: nil) - For URL labels, we note the url here directly (it's also available by grabbing all text symbols within the labeled span). SCHOLARLY_CITATION labels or even CAPTION labels may occasionally contain URLs.

An object representing a latitude/longitude pair. More info in https://cs.corp.google.com/piper///depot/google3/google/type/latlng.proto
*   latitude (type: float(), default: nil) - The latitude in degrees. It must be in the range [-90.0, +90.0].
*   longitude (type: float(), default: nil) - The longitude in degrees. It must be in the range [-180.0, +180.0].

This protocol buffer supports a name per region per language, allowing it to represent the name of a given feature in different regions and languages. For example, the Persian Gulf has different English names in UAE versus Lebanon.
*   displayableAsAlternativeName (type: boolean(), default: nil) - If true, this region specific name should be appended, in parentheses, to the appropriate name from FeatureProto.name, for the default rest of world behavior.
*   name (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreNameProto.t, default: nil) - Name to be used for this feature in a specific region and language.
*   regionCode (type: String.t, default: nil) - Region code (or other identifier) for the region.


The method of sign in which the client supports.
*   signInRequired (type: boolean(), default: nil) - Make Google sign-in mandatory for using Google Assistant on the device.


This message will specify supports for fields in |assistant.embedded.v1. DeviceOp|, for a device model package. See go/easi-client-op2 for more info. Next ID: 17
*   callCall (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCallCallCapability.t, default: nil) - |call_call| specifies the support for the call.CALL clientop, and the corresponding call_call field in assistant.embedded.v1.DeviceOp.
*   clientReconnect (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoClientReconnectCapability.t, default: nil) - |client_reconnect| indicates support for client.RECONNECT using assistant.embedded.v1.DeviceOp. There is an alternative API/capability for client.RECONNECT specified in RoutineCapability.supports_reconnect. Client should choose between this and RoutineCapability but not both.
*   coreDismissAssistant (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCoreDismissAssistantCapability.t, default: nil) - [core_dismiss_assistant] specifies the support for core.DISMISS_ASSISTANT client_op and the corresponding core_dismiss_assistant field in assistant.embedded.v1.DeviceOp.
*   deviceModifySetting (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoDeviceModifySettingCapability.t, default: nil) - |device_modify_setting| specifies the support for device.MODIFY_SETTING client_op, and the corresponding device_modify_setting field in assistant.embedded.v1.DeviceOp.
*   deviceTakePhoto (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoDeviceTakePhotoCapability.t, default: nil) - [device_take_photo] specifies the support for the device.TAKE_PHOTO clientop, and the corresponding device_take_photo field in assistant.embedded.v1.DeviceOp.
*   executionWait (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoExecutionWaitCapability.t, default: nil) - |execution_wait| specifies the support for execution.WAIT client_op, and the corresponding execution_wait field in assistant.embedded.v1.DeviceOp.
*   providerFulfill (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoProviderFulfillCapability.t, default: nil) - |provider_fulfill| specifies the support for provider.FULFILL client_op, and the corresponding provider_fulfill field in assistant.embedded.v1.DeviceOp.
*   providerOpen (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoProviderOpenCapability.t, default: nil) - |provider_open| specifies the support for provider.OPEN client_op, and the corresponding provider_open field in assistant.embedded.v1.DeviceOp.
*   sendChatMessage (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoSendChatMessageCapability.t, default: nil) - |send_chat_message| specifies the support for the chat_message.SEND clientop, and the corresponding send_chat_message field in assistant.embedded.v1.DeviceOp.

Pattern for when in the day the repeating task should trigger. Applies to all frequencies greater than or equal to DAILY. Exactly one of the containing fields should be set (i.e. a specific time or period).

Represents a S/MIME certificate config for use with Gmail. See //caribou/smime/proto/certificate_status.proto. There can be zero or more certificates associated with an email address, be it profile email or contact email.
*   configurationName (type: String.t, default: nil) - The name of this certificate configuration. Examples could be "High security level" or "For domain emails only".
*   metadata (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata.t, default: nil) - It is conceivable that certificates could be ACLed. We also need to indicate which certificate is the default. The PersonFieldMetadata can accomplish both of these.

This is deprecated in PEOPLE_API/SHARPEN, and should only be used for PROFILES. Clients should use InAppNotificationTarget field instead. Which apps the person has indicated they are reachable at for the requester. See go/d13y and com.google.focus.proto. InAppReachability.




The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.
*   id (type: integer(), default: nil) - The id of the parent provenance.
*   index (type: integer(), default: nil) - The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.
*   revision (type: integer(), default: nil) - The index of the index into current revision's parent_ids list.

Represents a verified owner of the given email address. Note that a single address may have many owners, and a single user may own many addresses. (All lower-case, in display form -- see com.google.gaia.client. GaiaEmail)

Identifies a set of Image NavBoost queries in the CompositeDoc. Each CompositeDoc can contain several images, so we store the image index from the CompositeDoc::doc_images with the index of the particular query inside ImageData::image_data_navboost.
*   canonicalDocid (type: String.t, default: nil) - The (canonical) image docid of the ImageData this image query is part of. Useful for identifying the ImageData even after doc_images are updated in between Webref annotation runs. Use docid only when canonical_docid == 0.
*   imageIndex (type: integer(), default: nil) - WARNING: The doc_images in docjoins are subject to updates including non-deterministic reordering of doc_images and their image_nb_data extensions. This means that without re-running WebrefAnnotator one cannot rely on the accuracy or even consistency of either image_index or query_index when parsing a cdoc from docjoins. In those situations one ought to rely on canonical_docid (or docid when canonical_docid is absent viz. 0). The index of the source image in CompositeDoc::doc_images.

This proto represents metadata of the users SearchProfile like profile state, GOG account id etc.,
*   accountId (type: String.t, default: nil) - Unique contributor account id allocated by presence/janata infrastructure. This will be used in the frontend for various actions like reporting errors, photo uploads etc., go/boba-janata, go/cleanup-contributor-creation
*   accountMid (type: String.t, default: nil) - Account KG entity mid assigned to this user required by old janata serving stack. This is not required anymore for serving. But might need it for historical purposes. See https://hume.google.com/edit/g/11gg6cyvch for more details.
*   aresId (type: String.t, default: nil) - Ares id used for tracking the auto moderation.

Scoring signals for computing the sitelink score. This message is currently intended only for debugging. Accordingly, this is populated in CDoc but not in MDU. It is enforced by the [(exclude_from_mdu) = true] annotation of the corresponding fields in Target and TargetGroup.

Information derived from alexandria when processing the cross-link validation (e.g. when this was done the last time, or when we started to see the outlink for the first time).
*   firstSeenMs (type: String.t, default: nil) - When was the first time a link seen. Defaults to last crawled timestamp.
*   lastVerifiedMs (type: String.t, default: nil) - When was the last time a link validated. Validation is the process of (re)reading the relevant information for a linked document from its respective row in the document table. Data needed for understanding the correctness of the cluster is copied over to have it available locally.

Message representing a versioned NSR score used for experimentation. This protobuf is copied from quality_nsr::NSRVersionedItem.
*   value (type: number(), default: nil) - The NSR value corresponding to this version.


Represents the action responsible for deleting the document.
*   enableHardDelete (type: boolean(), default: nil) - Boolean field to select between hard vs soft delete options. Set 'true' for 'hard delete' and 'false' for 'soft delete'.




Contains only the signals necessary to perform per-URL click prediction. Used by Index Selection for scoring. NEXT ID TO USE: 7

User preference for shared endorsements. See go/se-devguide and go/sharedendorsements for details, including guidance on which contexts are which.

SmartHome feature flags that may be enabled per-item. LINT. IfChange
*   circadianLightingEnabled (type: boolean(), default: nil) - Flag indicating whether the background Circadian Lighting effect is enabled for a particular light (go/circadian-lighting-e2e).
*   energySavingsEnabled (type: boolean(), default: nil) - Flag indicating whether automatic Energy Savings are enabled for this item.
*   gentleWakeupEnabled (type: boolean(), default: nil) - Flag indicating whether Gentle Wake Up is enabled for this item (go/sleep-wake-design).
*   homeAwayOverMatterEnabled (type: boolean(), default: nil) - Flag indicating whether the user has enabled / disabled sending Home/Away status updates to the device through the Google custom IntelligenceEvents Matter cluster. (go/google-clusters-design)


Proto to store vertical indexing information for the document and associated video outlinks. The video content can be indexed to multiple verticals, including videosearch. It can also be indexed only in verticals, not in videosearch.
*   name (type: String.t, default: nil) - List the string representation of the vertical that this image is indexed into.

A cloud endpoints associates with this device, it can be used for query parsing, or cloud execution.
*   name (type: String.t, default: nil) - The name for this cloud endpoint. It's unique per Locale. This is not an API resource name. Ex: sample-nlu-endpoint
*   scopes (type: list(String.t), default: nil) - The list of scopes to be provided in the OAuth2 token. They must be a subset of the scopes registered in the Account Linking flow, or the request will fail. If the client itself provides the token, then this field is ignored.
*   url (type: String.t, default: nil) - The URL for this endpoint, it must start with https.

Byte-offset and timing information in videos. In CompositeDoc, we will store the instance per sentence.
*   begin (type: integer(), default: nil) - Byte offsets in HTML. begin is inclusive and end is exclusive.

Used for sensitive calendar events that require additional BUILD visibility protection. See go/multi-account-event-representation.

Contains info about the entity that something is, or is owned by.


Represents a list of synonyms for a given context. For example a context "sales" could contain: Synonym 1: sale, invoice, bill, order Synonym 2: money, credit, finance, payment Synonym 3: shipping, freight, transport Each SynonymSets should be disjoint
*   context (type: String.t, default: nil) - This is a freeform field. Example contexts can be "sales," "engineering," "real estate," "accounting," etc. The context can be supplied during search requests.
*   name (type: String.t, default: nil) - The resource name of the SynonymSet This is mandatory for google.api.resource. Format: projects/{project_number}/locations/{location}/synonymSets/{context}.
*   synonyms (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1SynonymSetSynonym.t), default: nil) - List of Synonyms for the context.


A collection of any number of QRefAnnotations that designate a Copley Personal Reference and its Resolutions. This is used to handle personalized intents such as "navigate to my hotel" or "when is my mom's anniversary". See go/copley. This Annotation may contain only a reference with no resolutions for the failure case (go/copley-punts). TODO(bhorst) Rename this to remove the Copley codename.
*   reference (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t, default: nil) - A Copley Personal Reference represents a user's reference to a something that could be personal entity, e.g. "my hotel", "mom", "brunch".
*   resolutions (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t), default: nil) - A Copley Personal Resolution represents the resolution of a Reference, e.g. if the user has a reservation at The Kendall Hotel, the reference "my hotel" could be resolved to The Kendall Hotel, and there would be a QRefAnnotation containing the mid and other data. It is possible for there to be zero resolutions for a given reference.


Indicates a question, requesting the value of a specified slot. Not applicable if the requested slot simultaneously appears as an argument. See go/requested-slots for details. Next ID: 3
*   slotKey (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.t, default: nil) - Note: This is still under development and not available for general use. Contact meaning-platform-eng@ for questions.
*   slotName (type: list(String.t), default: nil) - One or multiple slots may be requested by the marker. See go/mrf-multiple-output-slots for details on requesting multiple output slots.

Defines the presence of a field. This can help distinguish between empty vs. not-present annotations.
*   present (type: boolean(), default: nil) - Whether the field (data field or pointer) is defined.


Information about one of the types of a linked entity.
*   flags (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLinkKindFlags.t, default: nil) - The flags associated with the link kind.
*   topicPropertyName (type: String.t, default: nil) - If the link was extracted from a property, the name of the property. Can start with an exclamation mark "!" to indicate that the inverse relationship is specified. (e.g. "!/tv/tv_series_episode/series" is the inverse of "tv/tv_program/episodes").


All the possible location constraints. This message is associated with a location and can be nested accordingly. E.g., for a compound location the constraint may be associated with the entire location or with either of the two internal locations (loc_1 and loc_2). There is an implicit AND relation between the different constraints. Next ID: 26.
*   evcsConnectorConstraint (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalEvChargingStationConnectorConstraint.t, default: nil) - Used for populating ElectricVehicleConnectorRefinement from QBF go/evcs-qbf-connector
*   evcsPaymentConstraint (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalEvChargingStationPaymentConstraint.t, default: nil) - Used for populating ElectricVehiclePaymentRefinement from QBF go/evcs-qbf-payment
*   gcidConstraint (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalGcidConstraint.t, default: nil) - Used for GCID filter. Unlike other grammar, for now this is populated in Superroot (currently based on QBLD classification, and an allowlist of GCID).
*   hyperReliableData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData.t, default: nil) - Some constraints are also hyper-reliable, such as [brunch] and [coffee].
*   startByte (type: integer(), default: nil) - The span, in the raw input, which corresponds to this constraint, expressed as a byte offset and byte size.
*   unspecified (type: boolean(), default: nil) - Used to remove all constraints, e.g. [forget all the filters]

Since this is stored in BE, any update on this proto needs LGTM by ARIS storage owner
*   hasReferencedEntityAtCreation (type: boolean(), default: nil) - Whether the reminder created has a referenced_entity attached to it or not(go/hub-memory-payload). Since we plan to set this in Assistant reminder creation path flow, in case later the referenced_entity is removed from the reminder, then this bit might still remain true. Also in case referenced_entity is later added to reminder(for example when referenced_entity is attached by Server), then also this bit might remain false. This bit will be used to guess if the user has a memory-enabled AGSA, thus we'll surface the "open memory" button on hubpage. This check is not perfect, as the user might have other phones with older AGSA, so this is just a best guess. This field won't be stored in Memory backend, and will not be populated back when retrieving reminders.
*   recordId (type: String.t, default: nil) - Id of record that is associated with Reminder. This will be set for all Assistant reminders created after the first launch of the Reminder Memory integration, see go/reminders-memory for more details. Also, this might apply to all other types of reminders.

A single understood lexicon of the |category| on byte range from |begin_offset| (inclusive) to |end_offset| (exclusive). The offsets are all byte offsets relative to the full original query and cover both the mentions and surrounding markers.
*   direction (type: String.t, default: nil) - Direction defines the relation between the measurable aspect and the facet.
*   facetMid (type: String.t, default: nil) - The mid of the facet associated with ASPECT category.





Identifies a business policy used for selecting a given content provider in the form of a name and a resulting scoring action.
*   policyName (type: String.t, default: nil) - Name of the policy.

The device to perform an action. Both device_type and device_name are optional and they can coexist: [on my phone]: device_type = PHONE [on my nexus 4]: device_name = "nexus 4" [on my nexus phone]: device_type = PHONE, device_name = "nexus"
*   deviceName (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDeviceName.t, default: nil) - The name of the device (Nexus 5, Nexus 10, etc).
*   deviceType (type: String.t, default: nil) - The type of the device (phone, tablet, watch, etc).


Token to be exposed and stored by the bot
*   expiryTimeMicros (type: String.t, default: nil) - Time since epoch (micros) that this will expire

These capabilities represent the tactile features associated with the device. This includes, for example, whether the device has a screen, how big the screen is, and privacy of the screen. Next ID: 11
*   fontScaleFactor (type: number(), default: nil) - The scale factor used to convert Scalable Pixel (SP) units to Density-independent Pixel (DP) units (DP = SP * scale factor). Fonts are measured in units of SP, and on some platforms such as Android the SP to DP scale factor can be affected by the font size a user selects in accessibility settings.
*   inputType (type: list(String.t), default: nil) - The types of input that this screen supports. Note that this can be empty in which case the screen's input type is unknown.
*   mask (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesMask.t, default: nil) - Mask defined for this device, if any.
*   resolution (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesResolution.t, default: nil) - If this field is absent, the resolution of the screen is unknown.
*   screenOff (type: boolean(), default: nil) - If screen is turned off.
*   screenStateDetection (type: String.t, default: nil) - The ability of the client to correctly report screen state.
*   supportedRenderingFormat (type: String.t, default: nil) - The primary supported rendering format for display on the device's screen. This may be used to determine what format of card to be returned when rendering cards.
*   supportedScreenStates (type: list(String.t), default: nil) - The screen states that the client supports. The current screen state is specified in DeviceProperties.screen.
*   visionHelpEnabled (type: boolean(), default: nil) - Whether the device enabled vision help features in accessibility settings. The settings is config in Assistant App and on-device settings, and stored in footprints. When enabled, font, color and TTS will be adjusted.





SRM signal data. Properties here should be nonsemantic. Semantic properties should be modeled directly in the SRM.
*   answersHeaderSignals (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsAnswersHeaderSignals.t, default: nil) - Signals that are used to generate answers header.
*   responseMeaningApplication (type: String.t, default: nil) - The intended application this response meaning is used for. It is intended for downstream dispatching.

Transient generic data that will not be saved on the server.

The site porn score of the site to which the page of interest belongs to. Multiple versions are kept across large changes for some time. The Version-4 score is the average Universal Page Probability of all the site's pages, and will come with populated verticals4_score and site_rule (if any rule fires) fields. When using this score it is recommended to subscribe to the following mailing list: g/safesearch-announce.
*   verticals4Score (type: number(), default: nil) - Please talk to safesearch@ before relying on any of these internal fields:







An AttachmentProto contains structured data of a client-specified type. An attachment is uniquely identified by the combination of its attachment_id and client_name_space fields.
*   attachmentId (type: String.t, default: nil) - attachment_id distinguishes messages of the same type_id associated with the same feature. It can not be set to 0x0.
*   clientNameSpace (type: String.t, default: nil) - This field specifies a namespace identifier that can be used to track the sources of attachments in a human friendly format. Name spaces must be at most 64 characters long and must be composed entirely of alphanumeric characters, hyphens, and underscores. No other characters are allowed.
*   comment (type: String.t, default: nil) - comment is a human-readable string that is logged whenever this attachment is processed by the framework.
*   messages (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - messages contains the structured data for this attachment. It should contain a single message with a type ID matching the value of the type_id field below.
*   typeId (type: String.t, default: nil) - type_id determines the type of the actual attachment that should be set in the messages MessageSet. It can not be set to 0x0.

This protobuf specifies the results of https certificate validation, typically used for the BadSSLCertificate field in FetchReplyData. -------------------------- Next Tag: 13 -------------------------------
*   ALPNNegotiatedProtocol (type: String.t, default: nil) - ALPN negotiated protocol, see https://tools.ietf.org/html/rfc7301 The value will either be empty, or one of the protocol names sent by the client that the server accepted. Examples include "h2" and "acme-tls/1".
*   CertificateChain (type: list(String.t), default: nil) - If present, this consists of the remote webserver's X.509 certificate chain in DER format. The chain stored here is the reversed result of SSL_get_peer_cert_chain(). That is to say, it is the chain presented by the peer (which may differ from the chain that was built and verified), but in leaf-last order. Typically the root cert will not be included. But do not assume anything, because servers do all manner of weird things. (For example on the beginning of the chain, there might be also some irrelevant certificates besides the root certificate.) Certificates may be the empty string, indicating an encoding failure. See also |IsTruncated|. Certs can be loaded with util/sig/cert.h Cert::LoadBinaryCert(), converted to ASCII PEM format (CertificateUtil::CertificateToPEM()) or shown as text at the commandline by piping them into 'openssl x509 -text -inform DER'.
*   ErrorMessages (type: list(String.t), default: nil) - ErrorMessages contains errors from HTTPS validation. Examples of such errors include invalid certificates, failure to build a certificate chain, certificates that do not match the expected hostname, and internal errors. If ErrorMessages is empty, HTTPS validation succeeded. Otherwise, it failed. This is the only guarantee about the contents of this field, though legacy code exists that embeds invalid assumptions, b/70904498. New code should not do anything with this field other than test whether it is empty and display its value to humans. If you need to know more about the details of a particular HTTPS validation, you can revalidate |CertificateChain| independently.
*   IsTruncated (type: boolean(), default: nil) - This SSLCertificateInfo had its fields truncated because it was too large. It is no longer set (cl/205356251) but may be true in old records.
*   OCSPResponse (type: String.t, default: nil) - Stapled OCSP response obtained during the TLS handshake, if any. An OCSP (Online Certificate Status Protocol) response is an indication, signed by the issuing CA, that the certificate has not been revoked. A TLS handshake extension allows servers to "staple" a response to the certificate served in the handshake, saving the need for the client to fetch it itself from the CA. This field contain the stapled OCSP response if the server served one. See RFC6066, Section 8 for the data format: https://tools.ietf.org/html/rfc6066#section-8
*   SCTList (type: String.t, default: nil) - SCTList obtained during the TLS handshake, if any. See RFC6962, Section 3.3 for the data format: https://tools.ietf.org/html/rfc6962#section-3.3
*   SSLProtocolVersion (type: integer(), default: nil) - Details about the SSL/TLS protocol and cipher. See RFC5246 and google3/crawler/trawler/hope/proto/ssl.proto for more details.
*   SSLProtocolVersionName (type: String.t, default: nil) - The names of the SSL protocol version and cipher suite. These strings are implementation defined and may be subject to change.

Holds extra info except annotations and raw cdoc for buildint the final cdoc.

Per-doc data in the Ocean index. Ocean indexing details are in https://www/eng/designdocs/scanning/ocean-indexing.html

ClusterInfo no longer being populated (they are the 'old' version of storing meta-information only available in old not-reprocessed documents, all documents processed since July 2014 use the 'TargetLinkSet' instead.
*   fpOutlinks (type: String.t, default: nil) - A fingerprint of all outlink-URLs of this document that have been used as algorithmic input.
*   lastModifiedInputTimestampMs (type: String.t, default: nil) - The last time the set of outgoing links of this document was modified. This is the input for our calculation.
*   lastProcessedOutputTimestampMs (type: String.t, default: nil) - The last time the cross-validation of the links was done. Between that last timestamp and now, only cached results have been used.
*   linkMember (type: list(GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfoLinkMember.t), default: nil) - All verified members of the cluster (including recursive inclusions).

Response to a query. The main result is the nearest neighbor list, but we also optionally include debugging information if the appropriate field is set in the request. Last used: 8
*   latency (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamOnlineSearchLatencyStats.t), default: nil) - Debugging fields: The wall and CPU time used by each query on each machine. For successful queries, there will be one entry here for each machine that the query used if QueryRequest.enable_latency_stats was enabled. For unsuccessful queries, the contents of this field will be undefined. NOTE: The following accounting rules apply in batched mode, assuming there are
*   numDeadlineExceededMachines (type: integer(), default: nil) - The number of non-root machines for which a DEADLINE_EXCEEDED error occurred when they were contacted. This value does NOT include machines for which no reply was received because their parent machine timed out. Therefore, num_total_machines may be larger than num_ok_machines + num_unreachable_machines + num_deadline_exceeded_machines.
*   numOkMachines (type: integer(), default: nil) - Number of machines that contributed to the results; this might be less than the total number of machines if a machine has failed. The impact of a single machine failure could be larger than just one machine, if it happens to be one of the machines involved in distributing the query and collecting results.
*   numTotalMachines (type: integer(), default: nil) - The number of machines used in this service for the dataset that was queried. If everything went right, this should be equal to num_ok_machines. If num_ok_machines < num_total_machines, some neighbors may be missing from results.
*   numUnreachableMachines (type: integer(), default: nil) - The number of non-root machines for which an UNREACHABLE error occurred when they were contacted. This value does NOT include machines that were implicitly unreachable because their parent machine was not reachable. Therefore, num_total_machines may be larger than num_ok_machines + num_unreachable_machines + num_deadline_exceeded_machines.
*   restrictStats (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictStats.t), default: nil) - The number of "active" datapoints for each dataset, i.e. points that are whitelisted by restricts and could be returned if they were close enough to the query. For successful queries, there will be one entry here for each dataset queried, if QueryRequest.enable_restrict_stats was true. For partially-successful successful queries, this field will contain results
*   results (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamNearestNeighbors.t), default: nil) - The results for each dataset searched. If per_dataset_parameters was empty in QueryRequest then this will have one entry, the results for dataset 0. If per_dataset_parameters was not empty in QueryRequest, this will contain the results for each dataset queried, in order corresponding to the order of QueryRequest.per_dataset_parameters.
*   status (type: GoogleApi.ContentWarehouse.V1.Model.UtilStatusProto.t, default: nil) - USEFUL ONLY IN CUSTOM BINARIES. In the stock ScaM server binary, all errors are relayed via the RPC's status. Thus, if RPC's status is ok, this field is guaranteed to be ok and if RPC's status is an error, no QueryResponse will be returned. The status of this query. This is useful when using a batched postprocessing lambda, which may ignore erroneous subqueries, continue postprocessing the valid ones and return OkStatus. In this case, this field will inform the client of any invalid subqueries.

THIS ATTACHMENT IS DEPRECATED, SEE go/udr/migrate-wma. . We still allow legacy use case to exist (no forced migration), but we will not accept any new usage of WMA, incl. from existing clients. UDR has the same features and can be used similarly: - To consume the topical entities (+properties, incl. hitcat, browsy, ...) go/udr/migrate-wma provides a migration with minimal changes. - To consume IQL, please consult go/udr/superroot#access and go/pianno team. The top-level proto used to store WebRef entities and IQL expressions in Mustang/TG. The proto uses packed repeated fields and variable-length integers in order to be as compact as possible. See http://b/5802389 and b/7473898 for details on other approaches that were considered and space/readability/extensibility trade-offs made. Note: It is not recommeded to read this proto directly. Clients of the attachment should use the decoder instead: repository/webref/tools/kc/indexing/webref-attachment-decoder.h Next available tag: 25
*   categoryConfidenceE2 (type: list(integer()), default: nil) - The confidence of the category. In the range [0, 100].
*   categoryEncodedMid (type: list(String.t), default: nil) - See go/category-annotations-api about the story behind various types of category annotations that are provided using the catmid token and category_encoded_mid fields below. Some of these annotation types are experimental, so please contact related-entities@ if you consider using this data. For production uses, please: 1. Add your use-case to go/hits-clients. 2. Subscribe to hits-users@ to receive general updates and info about deprecations. To convert it to the string form use metaweb::MidToString(encoded_mid) defined in metaweb/util/mid/mid.h The uint64-encoded MIDs of HitCat categories. See google3/repository/webref/hits/hitcat/category.textproto for the complete list of HitCat categories. Should have the same number of elements as the category_confidence_e2 field.
*   confidenceE2 (type: list(integer()), default: nil) - The confidence scores of all entities in the encoded_mid array. For space reasons this is also represented as a fixed-point integer with two decimal precision. Convert it to confidence_score using the following formula: float confidence_score = confidence_e2 / 100.0f Should have the same number of elements as the encoded_mid field.
*   encodedMid (type: list(String.t), default: nil) - The int64-encoded MIDs of the entities in the document sorted by topicality score. To convert it to the string form use metaweb::MidToString(encoded_mid) defined in metaweb/util/mid/mid.h Should have the same number of elements as the topicality_e2 field.
*   entityMetadata (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefAttachmentMetadata.t), default: nil) - Per-entity metadata. Not packed (not every entity has metadata). If you'd like to add per-document metadata, see document_metadata instead.
*   iqlAttachment (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryIndexingIQLAttachment.t, default: nil) - A sub-proto to encode IQL expressions. To be used by Pianno page-level intents and Webref Compounds.
*   isAuthorIndex (type: list(integer()), default: nil) - The indices of all the reference entities in encoded_mid that are authors of the page. Not packed as in most cases when populated, it contains 1 element.
*   isPublisherIndex (type: list(integer()), default: nil) - The indices of all the reference entities in encoded_mid that are publishers of the page (e.g. /m/cnn on "http://www.cnn.com/foo/bar"). Not packed as in most cases when populated, it contains 1 element.
*   referencePageIndex (type: list(integer()), default: nil) - Only populated when the document is a reference page for an entity. Contains the indices of all reference entities in the encoded_mid and topicality_e2 arrays. Not packed as in most cases when populated, it contains 1 element.
*   topicalityE2 (type: list(integer()), default: nil) - The topicality scores of all entities in the encoded_mid array. For space reasons this is represented as a fixed-point integer with two decimal points precision. Convert it to topicality_score using the following formula: float topicality_score = topicality_e2 / 100.f Should have the same number of elements as the encoded_mid field.
*   unboundIntentMid (type: list(String.t), default: nil) - The uint64-encoded MID of the unbound intents generated by Pianno. An unbound intent is the annotation of an intent without slots arguments (e.g. Age) declared in Intent Catalog. See go/pianno-asteroid-belt-migration for details. We only keep the top unbound intents with the highest orbit scores. Should have the same number of elements as unbound_intent_score_e2.
*   unboundIntentScoreE2 (type: list(integer()), default: nil) - The confidence of the unbound intent. represented as a fixed-point integer with two decimal precision. In the range [0, 100]. Should have the same number of elements as unbound_intent_mid.





Aesthetics score of a style image. Check http://go/styleai-indexing-g3doc#aesthetic-model for more details about the Style AI Aesthetics Model.




We can return the content attribute for some or all meta tags.

userInterestsSalientSimilarity (type: float(), default: nil) - Match score between user interest mids and episode salient entities. in a 0.0 to 1.0 range.  ulpLanguage (type: list(GoogleApi. ContentWarehouse.V1.Model.SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage.t), default: nil) - Inferred language preferences of the user with their probabilities.  subscribedShowListeningAffinity (type: number(), default: nil) - This captures the fraction of total listening time accounted for by this subscribed show.  kmeansShowLevelRank (type: String.t, default: nil) - Ranks are integral values starting with 1 for the highest affinity show.  ulpLanguageMatch (type: number(), default: nil) - How much of ulp match the language of this episode  clusterFeedMinutes (type: String.t, default: nil) - The total minutes listened to this podcast show by users in this cluster  episodeImpressionsPastWeek (type: String.t, default: nil) - Number of episode impressions during the past week.  popularLift (type: float(), default: nil) - Per cluster lift where the lift_squashing_factor is set to -3  showPopularRank (type: String.t, default: nil) - Expresses the absolute popularity rank within all documents.  showBaseQuality (type: float(), default: nil) - Base quality of the document, used as a multiplier for the query-specific score. Should be in [0, 1] range. See: http://g3doc/indexing/moonshine/generic/g3doc/doc/scoring  longUserListeningWebrefSimilarity (type: float(), default: nil) - Match score between user listening mids and episode webref entities, where the listening can have happened at any time in the past. Values are in a 0.0 to 1.0 range.  numSubscribersShow (type: String.t, default: nil) - From: indexing/speech/proto/colisten-matrix.proto The number of subscribers for this podcast series.  listenedShowLevelRank (type: String.t, default: nil) - The rank of the show in the top listened shows candidate generator. Ranks are integral values starting with 1 for the highest affinity show.  finalReactionBoostScore (type: number(), default: nil) - final reaction boost score computed from positive_reaction_boost_score and negative_reaction_boost_score. The score will be applied as a multiplier on the ranking score to adjust the ranking.  listenTimeMin (type: integer(), default: nil) - Number of minutes of podcasts listened by the user  userLanguage (type: list(GoogleApi.ContentWarehouse.V1.Model.SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage.t), default: nil) - Language of shows in user history and how much they listened to each.  peListenScoreShow (type: number(), default: nil) - Anima User Embedding based features. Dot product of Anima User Embedding and podcast embeddings from UserEmbeddingBasedSignals (podcasts/quality/proto/ranking_signals.proto)  secondsSincePublication (type: String.t, default: nil) - A reranking feature showing the age of the episode that is being recommended. This is computed as (current time - publication_time) publication_time of the episode is defined: (http://shortn/_S46Ouk5ZWW) publication_time is specified as seconds since Unix Epoch.  recentUserListeningWebrefSimilarity (type: float(), default: nil) - Match score between user listening mids and episode webref entities, where the listening is limited to recent activity. Values are in a 0.0 to 1.0 range.  dnnV2aScoreSigmoid (type: number(), default: nil) - Sigmoid of the score obtained by dot product of user embedding and show embedding. See https://b.corp.google.com/issues/158602034#comment2 for intuition.  isCanonical (type: boolean(), default: nil) - A binary value based on whether this is a canonical source for a cluster.  numListenersToShowInKmeansCluster (type: String.t, default: nil) - The number of users in the k-means cluster who have listened to this feed.  languageMatch (type: float(), default: nil) - How much of user listening history match the language of this episode  episodeDurationSec (type: String.t, default: nil) - The duration of a single episode, in seconds. - For show documents, this is a duration of a typical recent episode, or an approximation thereof. - For episode documents, this is the duration of the episode itself.  userClusterDistance (type: number(), default: nil) - The distance between user's Anima embedding and the centroid of the cluster in k-means.  subscriptionShowLevelRank (type: String.t, default: nil) - The rank of the show in the subscription candidate generator. Ranks are integral values starting with 1 for the highest subscribed affinity show.  episodesPublishedPerMonth (type: String.t, default: nil) - How frequently are podcasts published by this show. To see publishing frequency calculation go here: http://shortn/_6zzfyEpBRq  durationTotalSecondsShow (type: String.t, default: nil) - Total duration listened for this show by all users. Ignores duration < 10s. Computed offline  balancedLift (type: float(), default: nil) - Per cluster lift where the lift_squashing_factor is set to 0.4  mediumUserListeningWebrefSimilarity (type: float(), default: nil) - Match score between user listening mids and episode webref entities, where the listening is limited to last two mohths activity. Values are in a 0.0 to 1.0 range.  rank (type: String.t, default: nil) - The index in the list of most popular podcasts.  fractionTotalShow (type: float(), default: nil) - Some of all fraction of this show listened by users. Ignores duration < 10s. Computed offline  nicheLift (type: float(), default: nil) - Per cluster lift where the lift_squashing_factor is set to +2  showLanguage (type: String.t, default: nil) - Language of the show from show data.  dnnV2aScore (type: number(), default: nil) - Dot product of user embedding and podcast show embedding from the two tower model v2a  explicitShow (type: String.t, default: nil) - Whether the show is marked as explicit by the authors  dnnShowLevelRank (type: String.t, default: nil) - Ordinal rank features like this have been found to be useful in Hermione Recipes, where the top ranked items from a candidate generator is always retained. Ranks are integral values starting with 1 for the highest affinity show.  userInterestsWebrefSimilarity (type: float(), default: nil) - Match score between user interest mids and episode webref entities. in a 0.0 to 1.0 range.  showImpressionsPastWeek (type: String.t, default: nil) - Number of show impressions during the past week.  queryLanguage (type: String.t, default: nil) - This is the language extracted from the query_language.  numUniqueListenersShow (type: String.t, default: nil) - From: indexing/speech/proto/colisten-matrix.proto Absolute number of unique listeners during the past month.  feedPagerank (type: float(), default: nil) - Scaled pagerank score for the feed url in [0..1]. Not to be confused with pagerank above, which measures the pagerank for the feed's homepage.  colistenedShowColistenAffinity (type: number(), default: nil) - This captures the probability that this show could have been listened by the user in lieu of what they have subscribed or listened to.  negativeReactionBoostScore (type: number(), default: nil) - boost score from the similarity between the candidate and the shows with user negative feedback, currently the score will be applied directly to the final ranking score: go/podcast-reaction-reranking-v1, but can be used as reranker model feature in the future.  fractionTotalEpisode (type: float(), default: nil) - Some of all fraction of this listened by users. Ignores duration < 10s. Computed offline  numListens (type: integer(), default: nil) - Number of podcasts listened by the user  durationTotalSecondsEpisode (type: String.t, default: nil) - Total duration listened for this episode by all users. Ignores duration < 10s. Computed offline  numListenersInKmeansCluster (type: String.t, default: nil) - The number of users in this k-means cluster.  categoryMatch (type: float(), default: nil) - category_match is a 0 to 1 score depicting how much of the user's listening history matches the categories of this podcast recommendation.  inClusterProb (type: float(), default: nil) - Probability of a random user from this cluster listening to this podcast randomly (K-means specific feature)  locationFeatureId (type: String.t, default: nil) - Feature ID of a location. For more info, see go/feature-id.  listenedShowListeningAffinity (type: number(), default: nil) - This captures the fraction of total listening time accounted for by this show.  rankPercentContrib (type: float(), default: nil) - rank_percent_contrib = 100 / ( 1 + rank_percent ) Here rank_percent was derived from show level data in Wernicke corpus So if rank_percent of a feed was 3, then the feature value would be: 100 / (1 + 3) = 25. This indicator falls off quickly from 100 to almost 1 as we go from rank_percent 0 to 100.  globalProb (type: float(), default: nil) - Probability of a random user listening to this podcast randomly  colistenedShowLevelRank (type: String.t, default: nil) - This captures the rank of the podcast show in the colisten candidate generator.  positiveReactionBoostScore (type: number(), default: nil) - boost score from the similarity between the candidate and the shows with user positive feedback, currently the score will be applied directly to the final ranking score: go/podcast-reaction-reranking-v1, but can be used as reranker model feature in the future.

The Home app information of the provider. Next ID: 3
*   packageName (type: String.t, default: nil) - Unique package name that identifies a Home app of the provider.

Metadata associated with a region in an image. NEXT_ID: 14
*   boundingBox (type: GoogleApi.ContentWarehouse.V1.Model.MediaIndexBoundingbox.t, default: nil) - The bounding box corresponding to the region.
*   labels (type: GoogleApi.ContentWarehouse.V1.Model.MediaIndexSparseFloatVector.t, default: nil) - The labels associated with the region encoded as a SparseFloatVector to facilitate dot product computation during sorting. The columns are the fingerprints of the labels and the values are the corresponding confidence scores. The vector is L2 normalized.

The ContactEditContext message is a wrapper around the generic ContactMutationContext data to represent when and where a contact edit was performed.







Pattern for a YEARLY recurrence. A YEARLY recurrence is specified using a monthly pattern and a set of months the pattern applies to. Some examples: "Every January 16" : monthly_pattern { monthly_day_recurrence { month_day: 16 } } months: JANUARY "Fourth Thursday of November and December" : monthly_pattern { monthly_weekday_recurrence { week_day: THURSDAY week_day_number: 4 } } months: NOVEMBER months: DECEMBER Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
*   months (type: list(String.t), default: nil) - The months of the year to apply the pattern.

Contains information mostly used within indexing (e.g. not used for building the production serving shards). Most of this data is generated only in Alexandria, however there are exceptions.
*   cdocBuildInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerCDocBuildInfo.t, default: nil) - To hold extra info for building a final cdoc from raw cdoc and goldmine annotations.
*   contentProtected (type: boolean(), default: nil) - Whether current page is under content protection, i.e. a page has been crawled as an error page, but we preserve its last known good content and keep its crawl_status as converter.CrawlStatus::CONTENT.
*   convertToRobotedReason (type: integer(), default: nil) - If set, indicates that the crawl status was converted to ROBOTED for the reason specified by the enum value in converter.RobotedReasons.ConvertToRobotedReasons. See indexing/converter/proto/converter.proto for details. If unset, then the document was not converted to roboted, and if the document crawl status is ROBOTED, then the document is disallowed (at least to Google) in robots.txt.
*   crawlStatus (type: integer(), default: nil) - One of the enum values in converter.CrawlStatus.State (see indexing/converter/proto/converter.proto for details). Default is converter.CrawlStatus::CONTENT. The document is roboted if the value is converter.CrawlStatus::ROBOTED.
*   errorType (type: integer(), default: nil) - One of the enum values in converter.ErrorPageType (see indexing/converter/proto/error-page-detector-enum.proto for detail). Default is converter::ERROR_PAGE_NONE.
*   hostid (type: String.t, default: nil) - The host id of the document. Used chiefly to determine whether the document is part of a parked domain.
*   ieIdentifier (type: String.t, default: nil) - A short descriptive string to help identify the IE application or setup where this CDoc is generated. For example: websearch_m3 This field is for debuggability purposes.
*   indexingTs (type: String.t, default: nil) - The timestamp (the time since the Epoch, in microseconds) when the docjoin is exported from indexing. The main purpose of this field is to identify different versions of the same document.
*   noLongerCanonicalTimestamp (type: String.t, default: nil) - If set, the timestamp in microseconds when the URL stopped being canonical. This should never be set for exported canonical documents. This field is used by dups during canonical flip, and by webmain when doc selection switched between desktop and mobile. Union respects this timestamp to prevent old doc being deleted until the new doc is picked up
*   normalizedClickScore (type: number(), default: nil) - This score is calculated by re-mapping the back onto the partition's score distribution, such that the score represents the score of the equivalently ranked organically-selected document.
*   primaryVertical (type: String.t, default: nil) - Vertical membership of the document. - primary_vertical is the vertical that initiated indexing of this document (or empty if the vertical was websearch). - verticals is the full list of verticals that contained this document (excluding websearch) at indexing time. primary_vertical may or may not be an element of verticals because of vertical membership skew between the ingestion time and indexing time. See go/one-indexing-for-web for more background.
*   rawNavboost (type: integer(), default: nil) - The raw navboost count for the canonical url without aggregating the navboost from dup urls. This field is used when building forwarding map.
*   rowTimestamp (type: String.t, default: nil) - The timestamp (the time since the Epoch, in microseconds) to represent doc version, which is used in the downstream processing after Raffia. If it's not set, indexing_ts will be used as row_timestamp. The timestamp is generally set by reprocessing to set slightly newer indexing_ts such that the system can respect the reprocessed version to overwrite old data in storage.
*   selectionTierRank (type: number(), default: nil) - Selection tier rank is a language normalized score ranging from 0-1 over the serving tier (Base, Zeppelins, Landfills) for this document.
*   tracingId (type: list(String.t), default: nil) - The tracing ids is to label the version of url for url status tracking. This repeated field will carry at most 10 tracing id. See more details in go/rich-tracing-design There will be less than 2% base+uz cdocs carrying this field. The major sources of tracing ids include:  Indexing API pushed urls  Index Metrics sampling urls The tracing ids will be written into cdocs by Webmain Ramifier. The consumer of the tracing ids is Union serving notification collector see more at go/serving-notification-from-union
*   urlChangerate (type: GoogleApi.ContentWarehouse.V1.Model.CrawlerChangerateUrlChangerate.t, default: nil) - Changerate information for this doc (see crawler/changerate/changerate.proto for details).
*   urlHistory (type: GoogleApi.ContentWarehouse.V1.Model.CrawlerChangerateUrlHistory.t, default: nil) - Url change history for this doc (see crawler/changerate/changerate.proto for details). Note if a doc has more than 20 changes, we only keep the last 20 changes here to avoid adding to much data in its docjoin.
*   urlPatternSignals (type: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorUrlPatternSignals.t, default: nil) - UrlPatternSignals for this doc, used to compute document score in LTG (see indexing/signal_aggregator/proto/signal-aggregator.proto for details).

Note: A merchant may have multiple merchant center ids, and each one can have multiple purposes. The existing fields merchant_id, local_merchant_id fields are not enough to capture this. Instead we will have a repeated field name mcid with this structure.





Protocol buffer for attaching attributes and values to instances. This is for assigning a particular attribute and value to a repository item, not for metadata. For protocol buffers that represents metadata about attributes and values, see CanonicalAttribute in itemclass.proto and ValueSpace in valuespace.proto.
*   canonicalAttributeId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreAttributeIdProto.t, default: nil) - The canonical attribute for this attribute instance.
*   enumIdValue (type: String.t, default: nil) - For those attribute ids that expect their values to be taken from an enumeration-style set of values, that value's gcid should be stored here, e.g. "gcid:attval_yes".
*   protoValue (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - Fully qualified package name because genprotohdf uses genproto for this proto2 syntax: https://wiki.corp.google.com/twiki/bin/view/Main/Proto2WithGenproto
*   stringValue (type: String.t, default: nil) - The attribute value falls into one of these fields, based on value_type:
*   valueDisplay (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAttributeValueDisplayProto.t), default: nil) - Used to store language-specific names of this attribute's value (e.g. a translation into another language).

This message holds all info the local assistant team will need to lookup a LocalResult in search.
*   geocodingAddress (type: String.t, default: nil) - The full address of the result. This should be a verbose address string that geocodes reliably.
*   kgMid (type: String.t, default: nil) - The knowledge graph reference of the result.
*   position (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - The position of the result.
*   rect (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRectProto.t, default: nil) - The position of the result, if it can't be expressed as a pointproto.

MapFacts GAIA ID assigned to this feature. These values are virtual GAIA IDs from MapFacts, and as such are not stored in Focus.
*   baseGaiaId (type: String.t, default: nil) - WARNING: Please do NOT introduce new uses; treat this field as if it were deprecated.
*   claimedGaiaId (type: String.t, default: nil) - GAIA ID used when a business has been claimed. This value is a robot GAIA ID. Robots are a special type of GAIA account used to denote identity for a user or a group of users, but are not logged-in directly by a user.
*   gaiaIdForDisplay (type: String.t, default: nil) - WARNING: Please do NOT introduce new uses; treat this field as if it were deprecated.










This deprecates the above:  confidence=3  source=4 This allows us to merge AppInfo data per package_name.
*   teleportSourceData (type: GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals.t, default: nil) - Signals present when the source is TELEPORT.

Some per-doc info is returned for all www DocInfo requests. Next id: 94
*   noimageframeoverlayreason (type: integer(), default: nil) - If not 0, we should not show the image in overlay mode in image snippets.
*   hasBadSslCertificate (type: boolean(), default: nil) - If true, the original document has a bad SSL certificate.
*   docVersionId (type: String.t, default: nil) - Fields generated by the docserver, but whose meaning is unclear. Sometimes last crawl time
*   isSitePorn (type: boolean(), default: nil) - Consider the page classification is_porn as an alternative for is_site_porn, and talk to safesearch@google.com for additional information if needed.
*   visualType (type: String.t, default: nil) - Is this doc visual RTL? See enum VisualType in visualtype.h. Default is NOT_VISUAL_DOCUMENT.
*   imageLicenseInfo (type: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageLicenseInfo.t, default: nil) - Image license info such as license url and how to acquire the license.
*   subindex (type: integer(), default: nil) - Subindex id of the document should be one of the values defined by enum CompositeDoc::SubIndexType. Used for superroot/gws logging if a shard has documents from multiple indices.
*   failsSafeSearch (type: String.t, default: nil) - fails_safe_search is never filled in production.
*   pornStats (type: integer(), default: nil) - 'porn_stats' is used in porn demotion and filtering. See classifier/porn/public/porn-attachments.h.
*   seenNoodp (type: boolean(), default: nil) - NOTE(kinoue): ODP/GWD snippet is unlaunched as of June 2017. This is no longer used.
*   rootpageDuplicateMetadescription (type: boolean(), default: nil) - True if the meta-description is duplicated on many other pages and this page is the rootpage of such pages which have the same meta-description.
*   foreignMetadescription (type: boolean(), default: nil) - Indicate if the meta description in a different language than its page.
*   nearbyText (type: String.t, default: nil) - Nearby text of the image on landing page. Used to construct Scroll to Image urls.
*   isRoboted (type: boolean(), default: nil) - Is disallowed for crawling according to host's robots.txt.
*   contentType (type: String.t, default: nil) - If not present, then the type
*   colorDetectionResult (type: integer(), default: nil) - Detected color in the image in RGB565 format in the lower 16 bits.
*   languageTag (type: String.t, default: nil) - This returns the most probable language for the document. The complete set of languages is in the GenericSearchResponse. (If some future use requires all languages from the doc request, note that fetching that will require decoding the entire per-doc data attachment, which is a performance hit) Use docinfo-util.h to set & read language fields. Language tag as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47 If not present, then use language.
*   ip (type: integer(), default: nil) - If ipaddr is set, ip should be ignored (it should not be set). Ipaddr should be either 4- or 16-byte string for IPv4 or IPv6 addresses. If ipaddr is not set, ip is set to the IPv4 address for the host.
*   qualityWithoutAdjustment (type: number(), default: nil) - Quality score (also known as QScore, see go/qscore-faq).
*   visibleImage (type: boolean(), default: nil) - If an image request, was the coupled image visible on the page?
*   fileTypeId (type: String.t, default: nil) - If converted to TEXT or HTML
*   indexingTs (type: String.t, default: nil) - The timestamp (the time since the Epoch, in microseconds) when the docjoin is exported from indexing. This is mainly exported and used by Youtube Search. See MustangBasicInfo.indexing_ts for more details.
*   licensedWebImagesOptInState (type: String.t, default: nil) - Indicates the web-master opt-in state of this image. This project is still in MVP stage, please contact us licensed-media-team@ before use.
*   metaDescriptionLanguages (type: list(String.t), default: nil) - If meta description/body title were detected to be in a different language from the document language (the 'language' field above) in RosettaLanguageAnnotator, the detected languages are populated here. Note: as of ariane/154728, no more than one language is populated for each field.
*   nsrSitechunk (type: String.t, default: nil) - Sitechunk used by NSR. For most pages this is equivalent HOST_LEVEL_V3 sitechunk. Main difference is that, for sites like youtube.com and vimeo.com, nsr_sitechunks are channel level (based on schema.org markup, not url alone). See go/nsr-chunks for more details.





dynamicDepthMetadata (type: GoogleApi. ContentWarehouse.V1.Model.PhotosDynamicDepthMetadata.t, default: nil) - DynamicDepth (go/dynamic-depth) metadata is described in the metadata of sub-images in the container. The presence of this field can be used to determine that an image is in the dynamic depth format.  gcameraburstprimary (type: integer(), default: nil) - A value of 1 indicates that this was the primary (“best shot”) at capture time. Within Photos we should only treat this image as the best shot if the user hasn’t made an explicit choice. Defining the initial primary allows consistency between OEMs, Photos clients, and the Photos backend. This value is optional, cameras are not required to set it on any photo in a burst. Clients will default to the 0th frame, but may run an algorithm to pick a better default.  hasAlpha (type: boolean(), default: nil) - The image has an alpha channel (potential transparency). If the image is decoded, this will be updated to indicate whether there is any active transparency. Formats supporting alpha: png, webp, gif, heif.  thumbnailerBuildCl (type: integer(), default: nil) - The build CL for the version of thumbnailer that built this image.  gpsdatestamp (type: String.t, default: nil) - This is in UTC time. Format is YYYY:mm:dd.  gcameramotionphotoversion (type: integer(), default: nil) - Indicates the Motion Photo version of the spec (initially 1).  gcameraspecialtypeid (type: String.t, default: nil) - Camera creations metadata. The opaque id string created by the OEM. For bursts, this field should not be present. Instead, the two properties below will allow Photos to identify and provide special treatment for bursts.  gcameramicrovideooffset (type: integer(), default: nil) - The offset in bytes from the end of the file to the point where the appended mp4 begins (equivalent to the length of the compressed mp4). This field might be provided in the original MicroVideo from client, but it might become invalid when the image component is edited, so it is expected that the thumbnailer will validate it and find the correct value (by scanning through the JPEG) if it is invalid. In other words, only a valid offset should be returned by thumbnailer.  gcameramicrovideopresentationtimestampus (type: integer(), default: nil) - The presentation timestamp in microseconds of the video frame corresponding to the image still. Value may be -1 to denote unset/unspecified.  width (type: integer(), default: nil) - width and height are before any rotation (including EXIF orientation).  motionphotovideodataboxheader (type: String.t, default: nil) - The Motion Photo Video Data (MPVD) box header of a HEIF motion photo. It is used for reconstructing the original moton photo bytes. See go/photos-be-heic-motion-photos for more details.  timezoneoffset (type: list(integer()), default: nil) - The elements in the timezone and daylight savings field arrays correspond to the following date/time fields: 0) datecreated (ie. DateTimeOriginal) 1) datetime (ie. DateTime or last modified date) 2) datetimedigitized (ie. DateTimeDigitized) If the field does not exist, then there is no valid time zone information for that date/time field. Offset in hours.  gcameramotionphotopresentationtimestampus (type: integer(), default: nil) - The presentation timestamp in microseconds of the video frame corresponding to the image still. Value may be -1 to denote unset/unspecified.  gcameramicrovideoversion (type: integer(), default: nil) - Indicates the file format version of the MicroVideo (initially 1).  gpstime (type: list(number()), default: nil) - This is in UTC Time. Contains three floats: hour, minute and second. Supports subsecond resolution.  microvideooriginaloffset (type: integer(), default: nil) - This is similar to gcameramicrovideooffset, except it stores the unverified value that was provided in the motion photo file. This field is not part of the XMP or spec. It is used to ensure we preserve data from the original file when offset is modified.  hdrMetadata (type: GoogleApi.ContentWarehouse.V1.Model.PhotosHdrMetadata.t, default: nil) - Indicates that the image has some form of HDR present or available to it.  chromasubsampling (type: String.t, default: nil) - A typed representation that translates the values from ycbcrsubsampling.  exifTimeUtcSource (type: String.t, default: nil) - The exif_time_utc_source indicates the source from which the exif_time_utc field is calculated.  DEPRECATEDGpstimestamp (type: number(), default: nil) - This field was originally marked incorrectly as optional (rather than repeated). In order to fix it, the first field has been marked as deprecated and replaced with a field with a new name and tag number.  autoenhance (type: boolean(), default: nil) - Indicates whether auto-enhance has been applied to the image.  exifTimeUtc (type: String.t, default: nil) - The exif_time_utc field is a UTC-based alternative to the exif_time field, which is in local time, rather than UTC. If they were not separate, clients would be unable to distinguish if the source were UTC- or local-based.  gcameramicrovideo (type: integer(), default: nil) - The following XMP metadata are used specifically for MicroVideo. More information about MicroVideo format can be found at go/photos-microvideo-format A value of 1 indicates that this file was a MicroVideo at capture time. Otherwise, this is not a MicroVideo (not set or 0).  gcameradisableautocreation (type: list(String.t), default: nil) - The possible values are: “Animation”, “Collage”, “Pano”, “Movies”. Photos will avoid creating the listed types using the containing image or video. The property is optional. The property can be included multiple times to disable creation of multiple different types.  colorprofile (type: boolean(), default: nil) - Indicates whether or not the source image had an embedded color profile.  bitDepth (type: integer(), default: nil) - The number of bits per pixel used to express a color. Most images have 8-bit depth and Photos/thumbnailer currently do not support more than 8 bits (except RAW).  daylightsavings (type: list(integer()), default: nil) - 0 = no daylight savings, 1 = daylight savings enabled. Note that this field only represents whether the setting in the camera was turned on or off. It must not be used to modify the timestamp of the photo. That is, the capture time is already completely determined by exif_time, timezoneoffset and timezoneminutes.  exif4c (type: GoogleApi.ContentWarehouse.V1.Model.PhotosFourCMetadata.t, default: nil) - 4C metadata (caption, copyright, creator, credit) specific to each of the three metadata segments (EXIF, XMP, IPTC). These are used to keep separate the 4C data from each segment so that we can properly preserve the per-segment 4C data on write (when PreserveLevel is set appropriately).  exifTime (type: String.t, default: nil) - Timestamp embedded in the image. The value comes from the first valid date-time field extracted from the metadata in the order: 1) datecreated (ie. DateTimeOriginal) 2) datetimedigitized (ie. DateTimeDigitized) 3) datetime (ie. DateTime or last modified date) The type of this field is equivalent to a time_t (ie. number of seconds since the epoch - 00:00 hours, Jan 1, 1970) except that it is an int64 rather than an int.  usepanoramaviewer (type: boolean(), default: nil) - GPano-related fields. A handful of these have been deprecated due to a change in the spec since its initial design.  gcameraburstid (type: String.t, default: nil) - A unique String. The property should be present and identical for all images that make up a burst. It should be unique across devices (UUID recommended). Unlike GCreations:CameraBurstId, we should use images with this property to create auto collages and animations.  rotate (type: integer(), default: nil) - This field is deprecated. Rotation is now accomplished via ImageInfo.exif_orientation and ImageInfo.edit_list. WARNING: the presence of rotate is used by FIFE to identify older images. Setting this (even to the correct number of degrees) on newer images can cause incorrectly rotated thumbnails. This was the cause of omg/58543 Number of degrees (0, 90, 180, 270)  gcameramotionphoto (type: integer(), default: nil) - An indication that this item should be treated as a Motion Photo. 0 -> Not Motion Photo, 1 -> Motion Photo, everything else is undefined per the spec. If it's a motion photo, the previous gcamera fields should be ignored.  gcreationstype (type: String.t, default: nil) - String representation of creation type. Should be one of {"GCameraCollage", "GCameraAnimation", "GCameraGroupSmiles", "GPhotosCollage", "GPhotosAnimation"}.  bitspersample (type: integer(), default: nil) - Start of reflected fields. These do not duplicate the above fields.

Additional metadata about the entity, that can be derived from the "raw data" (composite doc, domain specific data...), or come from other sources. Next available tag is 35.
*   bookEditionMetadata (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefBookEditionMetadata.t), default: nil) - For a book entity, store its book editions metadata. Used by Juggernaut to do /book/book_edition recon, see ariane/265006. This field is used by Juggernaut only.
*   categoryInfo (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryInfo.t, default: nil) - Information about category types of the entity.
*   displayInfo (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDisplayInfo.t, default: nil) - Information for displaying the entity in applications.
*   equivalentEntityId (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntityId.t), default: nil) - An entity in KG that represents the same (or equivalent) entity in the real world. In particular, this is used for mid-forwarding: when de-duping entities in KG, the old ids represent the exact same entity as the one they were merged with. So when we see one id in the query and the other in a document, they are treated as the same entity.
*   latentEntities (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLatentEntities.t, default: nil) - A list of entities that are latent given this entity. For example, "Lionel Messi" can have the latent entity "FC Barcelona". The latent entity links are materialized in an offline pipeline using r/w/scripts/latent_entities/latent-entities.pq. For more information, see go/latent-entities.
*   primaryRecording (type: String.t, default: nil) - The primary recording mid of a recording cluster entity. Used by Juggernaut to do /music/recording recon, see b/139901317. The primary recording is unique to a recording cluster. This field is used by Juggernaut only.
*   productMetadata (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProductMetadata.t, default: nil) - Products-specific entity metadata. Only available in QrefMetadata output.
*   supportTransferRules (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSupportTransferRule.t), default: nil) - Metadata about support transfer rules defined for this entity.

This message denotes an ingredient information of a food dish.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - The repeated name_info field is for the ingredient in multiple languages.

Metadata proto to be stored in concept tables. Note: Name table only stores name_type_mask for better performance. Remember to change NameToConceptEntry if you add a field to this proto. Note: in the annotator output only URL and PHONE_NUMBER are populated.

Airline contact info grouped by language. The language locale subcode will determine the country.

Detailed scores about the topicality of an entity. Next available tag: 17
*   connectedness (type: number(), default: nil) - Represents how much the entity is connected/related to the other entities in the document. This signal partially influences the topicality score, but it is not totally aligned with it: an entity can be very related to the rest of the document, but not central for understanding it. Likewise, an entity can be central to understand a document, but not very related to the rest of the document. The value is in [0, 1].
*   docScore (type: number(), default: nil) - How well the document scores for the entity. The score is unnormalized, and serves as a relative ranking signal between different documents for an entity.
*   isAuthor (type: boolean(), default: nil) - True if the entity is the author of the document. This was mainly developed and tuned for news articles (e.g. /m/02x27qn on "www.vogue.com/article/flint-town-netflix") but is also popluated for other content (e.g. scientific articles). Important: the semantics of this field may change in the future or it might be removed and replaced with a different API. If you want to use this field, please reach out to ke-authors@ first.
*   isPublisher (type: boolean(), default: nil) - True if the entity is the publisher of the page (e.g. CNN on "http://www.cnn.com/foo/bar").
*   isReferencePage (type: boolean(), default: nil) - Set to true iff the entity matches the full URL of the document, meaning that it is a reference page or related page of the entity.
*   normalizedTopicality (type: number(), default: nil) - Representation of the topicality score that is normalized in [0, 1] and which sum over all entities in the document is 1. It represents the "proportion" of the document that talks about the entity. This score is less human interpretable as the bucketized topicality score (EntityAnnotations.topicality_score), but is more suited for some usages like aggregations.
*   profileUrl (type: String.t, default: nil) - Contains the link to the author's profile url on the platform.
*   referencePageScores (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores.t, default: nil) - Signals used for mining new reference pages, set by the reference-page-scorer processor (that is turned off by default). This field is not populated, except for special reference page extraction runs.
*   relevanceScore (type: number(), default: nil) - Relevance score generated by a Machine Learning entity classifier. This signal is similar to topicality, but machine learning based and supported by EntitySignals, not Webref. See http://go/entityclassifier for details on the classifier.

Statistics about a particular font size (from CharLabel. FontSize) aggregated over a range of symbols
*   medianHeight (type: integer(), default: nil) - The measurements are in pixels
*   medianLineSpace (type: integer(), default: nil) - bottom to next top in para
*   medianLineSpan (type: integer(), default: nil) - top to next top in para
*   numLineSpaces (type: integer(), default: nil) - Lines (out of num_lines) that have a successor line within their para
*   numLines (type: integer(), default: nil) - Line stats for this font. "top" corresponds to the highest ascender and "bottom" to the lowest descender. num_lines = # lines with > 50% symbols having this font


This protocol buffer holds metadata about the association between a segment and a route.
*   route (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Identifies the route feature to which this metadata applies. This is one of the routes the segment refers to via the SegmentProto.route field.
*   routeDirection (type: String.t, default: nil) - The direction of the TYPE_ROUTE feature in this route association. A small number of countries (mostly just the United States, Mexico, and Canada) use directional routes. For example, in the United States highway US-1 is referred to as US-1 North or US-1 South on the sides where flow of traffic moves in those directions.

The HitCat page classifier. See go/hitcat2 If you use any HitCat score, please: 1. Add your use-case to go/hits-clients. 2. Subscribe to hits-users@ to receive general updates.
*   confidence (type: number(), default: nil) - Confidence of the category in the range [0.0, 1.0). If a page has the category "NBA" with high confidence we also expect it to have the "Basketball" with high confidence. Categories with a confidence lower than 0.05 are omitted. This can be interpreted as a confidence of 0, i.e. a strong signal that the category is not relevant for the page. For some categories this score is calibrated per-category to estimate the true precision. E.g., 70% of documents retrieved within the confidence range [0.7 - eps, 0.7 + eps] will be relevant when eps is close to 0.
*   cumulativeConfidence (type: number(), default: nil) - Calibrated cumulative confidence guaranteeing maxmial recall for a precision target. E.g., At least 90% of documents retrieved with cumulative_confidence >= 0.9 will be relevant. This score is always calibrated per-category to estimate the true cumulative precision and is not set for uncalibrated categories.
*   experimentalConfidence (type: number(), default: nil) - Note: For testing the next version. May change at any time. Experimental confidence of the category in the range (0.0, 1.0).

Annotation for common text style attributes. This adheres to CSS conventions as much as possible.
*   fontFamily (type: String.t, default: nil) - Font family such as Arial, Times New Roman. https://www.w3schools.com/cssref/pr_font_font-family.asp
*   fontWeight (type: String.t, default: nil) - Font weight. Possible values are normal, bold, bolder, and lighter.
*   textStyle (type: String.t, default: nil) - Text style. Possible values are normal, italic, and oblique.


Custom location specified by the user.
*   label (type: String.t, default: nil) - The custom location label as a string entered manually by the user.

The StadiaAssistantConfig. This field should only be set if the device model is a Stadia.

Translates to IAM Policy bindings (without auditing at this level)
*   members (type: list(String.t), default: nil) - Uses the same format as in IAM policy. member must include both a prefix and ID. For example, user:{emailId}, serviceAccount:{emailId}, group:{emailId}.
*   role (type: String.t, default: nil) - Role. (https://cloud.google.com/iam/docs/understanding-roles) For example, roles/viewer, roles/editor, or roles/owner.


The byte offset and text of a span.
*   text (type: String.t, default: nil) - The text of the span: a substring of ParserInput's canonical_input.


A message representing the function argument. Next ID: 9 Important: If you add new fields that do not reflect signals data, but actual semantics of the FunctionCall, please also update CreateFuncallCopyWithoutSignals and CreateFuncallCopyWithArgumentSignals in function_call_utils. LINT. IfChange
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field is used inside Aqua and outside Aqua for identifying the token indices and/or byte offsets of this argument
*   heuristicEvalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Eval_data was not derived at parsing time (i.e. is not expected to be produced by the IG), but heuristically determined by matching the ArgumentValue to an annotation/query fragment.
*   key (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.t, default: nil) - Slot schema key for this Argument. Note: This is still under development and not available for general use. Contact meaning-platform-eng@ for questions. Note: Currently MeaningSchemaSlotKey proto has both mid and unique_id. In future, only mid will be present in it. We are in the process of moving "unique_id" out of it. See (b/168907943). Note: The logged version of intent_query will only have "mid" populated in it to save space and avoid data duplication.
*   modifiers (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentModifiers.t, default: nil) - A flattened representation of all intent modifiers that apply to this argument.
*   name (type: String.t, default: nil) - Name of this argument. If this Argument is part of a FunctionCall, it must have a name or it is not well-formed. If this Argument is from an Annotator, the name field should be empty.
*   signals (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals.t, default: nil) - Signals associated with this argument.
*   value (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentValue.t, default: nil) - The value of this argument.

A mention that has been matched in the context (or a substring of it).
*   mid (type: String.t, default: nil) - The entity the mention was referring to.
*   score (type: number(), default: nil) - The average score the mention was given across all occurrences of the n-gram.


A rule that defines a Cluster based on a list of mids. It creates a single Set, and makes it the parent of each of the mids in the list.
*   id (type: String.t, default: nil) - Id of this rule; this is used to generate ids for the synthetic entities created for a cluster. Required.
*   mid (type: list(String.t), default: nil) - The mids of the entities that will be made into a cluster.




This protocol buffer holds attributes for features of TYPE_SKI_LIFT.

CoverPhoto is the long banner photo (also called full bleed photo) at the top of G+ profile page.





Recurrence rule for specifying date- and time-based repetition for tasks. Next id: 12.
*   dailyPattern (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrenceDailyPattern.t, default: nil) - Optional. Specifies when in the day the task should occur. Applies to all frequencies DAILY and greater. If absent, the repeating tasks are considered "all day" type.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field of the Recurrence message should not in general be used by outside clients of the grammar. It is intended to be used internally in Aqua for evaluation purposes. The rationale is that token counts depend on the particular tokenization used in Aqua which may be different from the one used by the client and may change from time to time. Outside clients should not create a dependency on the current tokenization used in Aqua.
*   every (type: integer(), default: nil) - Multiplier on the frequency of the recurrence. Use this to specify patterns that recur every X days, months, years, etc. Example: [remind me to call mom every 2nd week]. Default is 1 (every day, every month, every year). Floating point numbers are understood and rounded to the nearest integer. E.g. "every 2.8 months" => (every 3)
*   frequency (type: String.t, default: nil) - Required. The high-level frequency of the recurrence.
*   monthlyPattern (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrenceMonthlyPattern.t, default: nil) - Specify a monthly recurrence. Valid and required for MONTHLY frequencies only.
*   numInstancesInFrequency (type: integer(), default: nil) - How many times the task should be repeated within the frequency interval. Floating point numbers are understood and rounded to the nearest integer. E.g. "3.8 times per week" => (num_instances_in_frequency 4)
*   recurrenceEnd (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrenceRecurrenceEnd.t, default: nil) - Required. The end condition for the recurrence.
*   recurrenceStart (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrenceRecurrenceStart.t, default: nil) - Required. The start of the recurrence.
*   time (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - Optional time included with some types of recurrence phrases, such as "every morning".
*   weeklyPattern (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrenceWeeklyPattern.t, default: nil) - Specify a weekly recurrence. Valid and required for WEEKLY frequencies only.
*   yearlyPattern (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrenceYearlyPattern.t, default: nil) - Specify a yearly recurrence. Valid only for YEARLY frequencies.

How the entity was presented in this mention at a surface level. For example, "President Barack Obama" or "Barack Obama" or "he" might all be reasonable surface forms for the MID /m/02mjmr.

This holds data specific to rendering a POI on a map. It's derived from data already in MapFacts, e.g. containing features and the feature's point field. If empty, this proto should be ignored for rendering. See go/maps-render-alignment for motivation and more details.
*   displayLocation (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - The location where this feature should be rendered.

A collection of annotations returned by Legos for a document.
*   annotations (type: list(GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosAnnotation.t), default: nil) - The annotations for this document. For a given (entity, relationship type) pair, there will be at most one annotation. The list has no particular order.


Specification of which third party apps can be used.




An N-gram context encountered on the document.
*   mention (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefNgramMention.t), default: nil) - The entities that were annotated on the context
*   weight (type: number(), default: nil) - The weight of the context on the document; depends on how many times we saw the string in the document.


LINT. IfChange(ArgPath) Given a FunctionCall and an Argument somewhere in it, an ArgPath is a list of name-index pairs that uniquely determines the path down to that Argument. For each pair, the |index|, starting from zero, distinguishes between "sibling" (i.e. belonging to the same sub-FunctionCall) Arguments with the same name. For example, given the following FunctionCall: A(X=D(W=5), Z=B(Z=6), Z=C(Y=7)) The path to the Z=6 argument is {{"Z", 0}, {"Z", 0}} It's the first of two Z "siblings" under A, then the only Z under B. The path to the Y=7 argument is {{"Z", 1}, {"Y", 0}} It's the second of two Z "siblings" under A, then the only Y under C. The path to the Z=B(...) argument is {{"Z", 0}} It's the first of two Z "siblings" under A.





DataVersion tracks the version of data in CompositeDoc. The notion of "data" here is loose and people can define the name of their own. For example, a signal generated by Index Signals or an annotation generated by Goldmine (and other components) can all be considered as data here. Each field in this proto represents the human readable version string and the timestamp of one particular data. We choose to explicitly list out all of the data here for better understanding about which data are tracked. NOTE that human_readable_version is not intended for comparison, use timestamp_micros. In addition, we have an annotation about the field paths of each data. With proto reflection (using google3/net/proto2/util/public/field_path.h), downstream systems can take advantage of this annotation to automatically handle newly introduced data without modifying their code. Please also see the comment of FieldProjector above. There are also some fields in DataInfo that annotate who generates the data, the Index Signals or Goldmine annotator name for the fields already onboarded or being onboarded to FDP. Fields without annotation of signal_names or goldmine_annotator_names are not onboarded. Next ID: 539

Protocol record used for collecting together all information about a document. Please consult go/dj-explorer for two basic questions about CompositeDoc: - Where should I look up certain information (e.g: pagerank, language)? - What does each field in CompositeDoc mean and who should I contact if I have questions? To add a new field into CompositeDoc, or change existing field's size significantly, please file a ticket at go/dj-new-field, fill in necessary information and get approved by docjoin-access@ team. Next id: 193
*   docAttachments (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A generic container to hold document annotations and signals. For a full list of extensions live today, see go/wde.
*   ContentChecksum96 (type: String.t, default: nil) - Visible content checksum as computed by repository::parsehandler::checksum::Checksum96bitsParseHandler. The value is a Fprint96 in "key format" (i.e., by Fprint96::AsKey()).
*   localizedAlternateName (type: list(GoogleApi.ContentWarehouse.V1.Model.IndexingConverterLocalizedAlternateName.t), default: nil) - Localized alternate names are similar to alternate names, except that it is associated with a language different from its canonical. This is the subset of webmaster-provided localized alternate names being in the dup cluster of this document. Used during serving for swapping in the URL based on regional and language preferences of the user.
*   registrationinfo (type: GoogleApi.ContentWarehouse.V1.Model.RegistrationInfo.t, default: nil) - Information about the most recent creation and expiration of this domain. It's extracted from domainedge signal.
*   richsnippet (type: GoogleApi.ContentWarehouse.V1.Model.RichsnippetsPageMap.t, default: nil) - rich snippet extracted from the content of a document.
*   accessRequirements (type: GoogleApi.ContentWarehouse.V1.Model.IndexingPrivacyAccessAccessRequirements.t, default: nil) - Contains necessary information to enforce row level Docjoin access control.
*   url (type: String.t, default: nil) - WARNING!!! "url" field in CompositeDoc is optional, and is usually missing: e.g., Docjoin CompositeDoc's don't have CompositeDoc::url. has_url() checking is often useful. So don't rely on CompositeDoc::url unless you're sure otherwise. Usually you want to use CompositeDoc::doc::url instead.
*   docImages (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageData.t), default: nil) - Info about "selected" images associated with the document for which we (already) have ImageData. For each image URL, some fixed number of documents are selected as web referrers for the image URL, and within those selected documents, we say the image is "selected". Within the remaining documents, we say the image is "rejected". Note that this distinction is slightly different from selected for indexing. Only images within doc_images where is_indexed_by_imagesearch is true will be selected for indexing. You can find the rejected images at composite_doc.doc_attachments().get(). You can find images that are selected, but for which we have no ImageData (yet) at composite_doc.image_indexing_info().selected_not_indexed_image_link()
*   richcontentData (type: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRichContentData.t, default: nil) - If present, indicates that some content was inserted, deleted, or replaced in the document's content (in CompositeDoc::doc::Content::Representation), and stores information about what was inserted, deleted, or replaced.
*   docinfoPassthroughAttachments (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - This message set is used for data pushed into the index using the signals framework that is never to be used in Mustang or TG Continuum scoring/snippeting code. Any protocol buffer stored in this message set is automatically returned in a docinfo response - it ends up in the "info" message set in the WWWSnippetResponse, so it can be used in post-doc twiddlers and for display in GWS with no code changes in Mustang or Teragoogle.
*   badSslCertificate (type: GoogleApi.ContentWarehouse.V1.Model.IndexingBadSSLCertificate.t, default: nil) - This field is present iff the page has a bad SSL certificate itself or in its redirect chain.
*   anchors (type: GoogleApi.ContentWarehouse.V1.Model.Anchors.t, default: nil) - Mark as non-personal since no personal fields will be populated in anchors.link_additional_info and anchors.additional_info. For more details of Search personal data, see go/dma52-search-cdoc-fields.
*   sitemap (type: GoogleApi.ContentWarehouse.V1.Model.Sitemap.t, default: nil) - Sitelinks: a collection of interesting links a user might be interested in, given they are interested in this document. WARNING: this is different from the crawler Sitemaps (see SitemapsSignals in the attachments).
*   docVideos (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoProperties.t), default: nil) - Info about videos embedded in the document.
*   ptoken (type: GoogleApi.ContentWarehouse.V1.Model.PtokenPToken.t, default: nil) - Contains information necessary to perform policy decision on the usage of the data assosiated with this cdoc.
*   embeddedContentInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentEmbeddedContentInfo.t, default: nil) - Data produced by the embedded-content system. This is a thin message, containing only embedded_links_info data for the embedder and JavaScript/CSS embedded links (the embedded-content bigtable also contains snapshots, compressed document trees and all embedded link types). Provided using the index signal API.
*   anchorStats (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorStatistics.t, default: nil) - Mark as non-personal since it's an aggregation of anchors. For more details of Search personal data, see go/dma52-search-cdoc-fields.
*   dataVersion (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerDataVersion.t, default: nil) - Contains the tracking version of various data fields in CompositeDoc.
*   porninfo (type: GoogleApi.ContentWarehouse.V1.Model.ClassifierPornDocumentData.t, default: nil) - Porn related data used for image and web search porn classification as well as for diagnostics purposes.
*   urldate (type: String.t, default: nil) - Date in the url extracted by quality/snippets/urldate/date-in-url.cc This is given as midnight GMT on the date in question.
*   csePagerankCutoff (type: integer(), default: nil) - URL should only be selected for CSE Index if it's pagerank is higher than cse_pagerank_cutoff.
*   labelData (type: GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelData.t, default: nil) - This field associates a document to particular labels and assigns confidence values to them.

All link data for a given source.
*   kgProperty (type: String.t, default: nil) - KG-property if the SourceType is associated with a KG-property (TOPIC_PROPERTY, NEW_TOPIC_PROPERTY).
*   score (type: number(), default: nil) - Score in [0, \infty) that represents how relatively likely it is to see that entity cooccurring with the main entity (in the entity join). A value of 1.0 means that the two entities are basically independent. The higher the more likely (relatively to the individual entity probabilities) they are to cooccur.

LINT. IfChange Identifier for an application provider. NOTE: AppProviderId contains surface-specific info, such as the Android package name of the application. This was necessary for supporting current use cases that rely on surface-specific info in feature code. Eventually we want to deprecate AppProviderId and fetch surface-specific info in some other way (e.g. in a surface-translation layer). But until then, we may continue extending AppProviderId with other surface-specific info.
*   androidPackageName (type: String.t, default: nil) - Unique package name that identifies an Android app of the provider.
*   castAppId (type: String.t, default: nil) - Unique cast app id that identifies a Cast app of the provider.

Reuse information returned if UrlState == CRAWLED, specifying when we may have reused from cache. See also ReuseInfo below. NOTE: Please use the CrawlTimes below. CrawlDates is deprecated. use CrawlTimes instead!
*   NotChangedDate (type: integer(), default: nil) - fetched from the web. Timestamp indicates when
*   OriginalCrawlDate (type: integer(), default: nil) - Timestamp when the page was
*   ReuseDate (type: integer(), default: nil) - the page was last checked but found to be the same as before. If set, timestamp to indicate

Stats pertaining to incoming edges and views, visible to the requester (with acls applied). Related to, but not equal to, com.google.focus.proto. Storage.UserVisibleStats.
*   incomingAnyCircleCount (type: String.t, default: nil) - Replacement for deprecated follower_count. Comes from the EdgeSummary.
*   viewCount (type: String.t, default: nil) - Deprecated. This field is no longer populated by the server.

Compression type to be applied to section/attachment.

Client-specific binary blob stored with Person data. This differs from ClientData, which stores structured, key-value pairs.





The MEDIA_PROVIDER source can further specify information about the content served by the app.
*   providerKey (type: String.t, default: nil) - The unique provider key/enumeration string as used in KG. See also /base/mediaasset/provider/provider_enumerator.
*   providerType (type: String.t, default: nil) - The type of content served by the App. See also chrome.dongle.pints.ProviderType.

A product that can be purchased.
*   maxPrice (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t, default: nil) - The highes price this product is available for.
*   minPrice (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t, default: nil) - The lowest price this product is available for.
*   title (type: String.t, default: nil) - Title of the product. Example: Moto X Blue 64GB Note: This refers to only the catalog title not user specified phrase

Patent specific fields. Currently empty, but need to move the fields below into here at a later date
*   applicationDate (type: String.t, default: nil) - this is in ONIX format.
*   contentLanguage (type: String.t, default: nil) - 2-letter language of the document such as "en" or "fr" This field was created for plumbing in the OFE API intl patent flow, and is probably not otherwise filled in.
*   documentNumber (type: String.t, default: nil) - Just the number, no bibkey prefix. Called 'doc number' b/c it could be patent number for patents, application number for applications.
*   domesticClassification (type: list(String.t), default: nil) - US and Int'l patent classification codes for "related patents".
*   issueDate (type: String.t, default: nil) - this is in ONIX format.
*   publicationNumber (type: String.t, default: nil) - For applications, the 'publication number' Something like US20071234567A1: 'US' prefix, 4 digit year, 7 digit serial number, 2 character code, all stuck together.
*   relativeThumbnailPath (type: String.t, default: nil) - Path identifying the image used for the thumbnail of this patent. e.g. "EP1234567B1/imgf0001.png" The client is expected to fill in the rest of the url such as: https://patentimages.storage.googleapis.com/thumbnails/EP1234567B1/imgf0001.png







The grade level of a segment represents the relative altitude of the segment at a particular point along the segment. This level is in relation to other segments at the same point. For example, you might have a freeway at level = 0 and an overpass at level = 2. Vertical segments are represented by a polyline containing only 1 vertex and exactly two grade_level in segment.proto whose indices are 0. grade_level(0) represents the relative height at the start point of the segments, and grade_level(1) represents the one at the end point.
*   index (type: integer(), default: nil) - The index of the point along the segment, where 0 is the starting point. This means that the index of a point along a segment and its sibling will be different.
*   level (type: integer(), default: nil) - The grade level of the indexed point. The grade level can be thought of as a relative vertical ordering with respect to other segments at the same point, where larger/more positive numbers are "higher". Negative grade level values are allowed and are typically used for points below grade level (0 is a common choice to represent the level of points at the ground level). For vertical segments, the height, i.e. the vertical length, is represented by difference of levels in millimeters. For example, feature.segment().grade_level(0).level() == 0 and feature.segment().grade_level(1).level() == 5000, then the length of the vertical segment feature is 5000 millimeters (5 meters).

Represents a set of targets. The group may have a label field to uniquely identify this target group among others - for instance, if these targets' titles were generated using an alternative title algorithm, the label can be "newtitles". See "Note on adding new fields".
*   allTargetsNamedAnchors (type: boolean(), default: nil) - If all the targets in this group are named anchors on the source page.
*   allTargetsNamedTopictagsScrollto (type: boolean(), default: nil) - If all the targets in this group are named topictags_scrollto on the source page.

LINT: LEGACY_NAMES MovingThumbnail is defined as a short video clip that represents the whole video content. Next id: 17.
*   durationMs (type: integer(), default: nil) - The duration of the moving thumbnail in milliseconds. Note that the duration may not be the difference between begin_timestamp_ms and end_timestamp_ms, esp when the moving thumbnail covers multiple clips from the video.
*   movingThumbnailerVersion (type: String.t, default: nil) - If set, this is the algorithm version used to generate this moving thumbnail.
*   score (type: number(), default: nil) - The score of the moving thumbnail.
*   thumbnails (type: list(GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperThumbnail.t), default: nil) - A set of single frame thumbnails in the MovingThumbnail.
*   webpQualityLevel (type: number(), default: nil) - The actual quality of the Webp animation. Note this value may not be equal to the quality value requested in the animation creator's options. This is because other requirements, such as the max file size, may force the creator to lower the actual quality value.

This class holds information about a single access point. An access point establishes a relationship between a feature (like a POI or building) and some other feature. For example, consider a TYPE_LOCALITY feature like Seattle. An access point might be the TYPE_AIRPORT feature for Seattle-Tacoma International Airport. The airport feature defines the access point to gain airplane-based access to Seattle. A feature like Seattle will typically have multiple access points. You can get to Seattle using airplanes, various forms of public transit, or by driving a car. Thus Seattle would have multiple access points. You may be able to get to Seattle by flying into SeaTac, or you might be able to fly into Boeing Field, or Paine Field in Everett. You could drive in from the North/South using I-5, or you could drive in from the East using I-90. Many access points are from the road network. Thus the access point for some building at 123 Main Street would likely be a segment that defines the 100-200 block of "Main Street". A feature at the corner of "Hollywood" and "Vine" streets might have access points from both named streets. Access points are an optional field. Data editors may ignore them when creating features or editing other fields. In these cases, other quality teams will synthesize and update them. Several fields are also optional, as they are derivable from other fields. Access points to non-TYPE_SEGMENT features should always have the following fields set: - feature_type - feature_id - point Location and reference fields: BASIC vs DERIVABLE Access points to TYPE_SEGMENT features must have all the following BASIC fields: - feature_type (of the segment, e.g. TYPE_ROAD or TYPE_VIRTUAL_SEGMENT) - point_off_segment (or point; see "fuzzy point" note below) - unsuitable_travel_mode (may be empty) - level (indoor access points only) The following are DERIVABLE fields, which should only be added if the supplier is confident about their accuracy: - feature_id - point_on_segment - segment_position Editing clients are encouraged to set all fields, but they may set only the BASIC fields, in which case quality teams may use the BASIC fields to snap to an appropriate segment and derive the remaining fields. Example: The segment is split, so that the portion that the access point is on has a new feature ID. Quality teams notice that the point_on_segment is no longer on the segment with feature_id, finds the new nearest segment based on feature_type and existing point_on_segment, and re-derives a new feature_id, point_on_segment, and segment_position, keeping other fields consistent. Fuzzy point special case If the editor does not have side-of-road information for access points or is otherwise unsure of the precise placement of the access point, it may supply the point field (and not point_off_segment) as basic data instead, in which case quality teams may generate the point_off_segment. Identity Access points are considered semantically equivalent if they have the same geometry, including derived fields, and the same references to other features (feature_id, level_feature_id). For the exact definition, see cs/symbol:geostore::AreAccessPointsEquivalent. Field definitions







A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf. Empty) returns (google.protobuf.Empty); }

If LocationType is CHAIN, this is info about the chain.
*   chainMid (type: String.t, default: nil) - The freebase mid of the chain entity.
*   chainName (type: String.t, default: nil) - The geostore.NameProto.text (corresponding to the user's language) at the time of reminder creation. In most cases, this is the same as name, but there may be corner cases where they differ, e.g. name: "bestbuy", chain_name: "Best Buy".

////////////////////////////////////////////////////////////////////////////// Disjunction: a single OR clause that contains multiple group:token tuples.
*   tokenGroups (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamTokenGroup.t), default: nil) - groups - the group:token tuples that make up this disjunction. The disjunction will be active if any off the group:token tuples are present in a request.

Reference to a component of a compound mention. Next available tag: 5
*   entityIndex (type: integer(), default: nil) - The indices to identify the entity within the WebrefEntities.entities, the segment within its EntityAnnotations.segment_mentions, and the mention within that segment. entity_index is always guaranteed to be set, but segment_mentions_index and mention_index are omitted if the component reference is implicit.
*   isHeadComponent (type: boolean(), default: nil) - The source of the compound has designated this component as the head. Only one of the components can be a head, but it's possible none are.




Per each list that wishes to schedule url we return one of these:
*   ClientCanCrawl (type: boolean(), default: nil) - Is this client/requestorid allowed to crawl now? (based on resource use)
*   IsDefaultNode (type: boolean(), default: nil) - Is this the 'default' user's list
*   IsListForUrl (type: boolean(), default: nil) - Was this the list that a given request landed in?
*   NumUrls (type: integer(), default: nil) - # of urls currently in the queue
*   PartnerTotalCapacityQps (type: number(), default: nil) - Total qps for this partner dedicated hostload, for non partner it will be -1.0.
*   PartnerTotalUsedQps (type: number(), default: nil) - Currently used qps for this partner dedicated hostlaod, for non partner it will be -1.0.
*   RequestType (type: String.t, default: nil) - The type of the request (low latency vs. high throughput)
*   RequestorFp (type: String.t, default: nil) - The fp64 of the requestor string

Information about one embedded link. Next tag: 18
*   contentLength (type: integer(), default: nil) - Size of the HTTP body (payload of the HTTP response, excluding headers), pre-decompression. Equal to the value of the Content-Length header if any. NOTE: if this proto is converted to from ReferencedResource, we have to use the size of the full HTTP response (i.e. http_response_length) as an approximation, as we could not get the size of HTTP headers.
*   crawlDuration (type: integer(), default: nil) - Time spent downloading this resource, in milliseconds. Not a timestamp!
*   crawlStatus (type: integer(), default: nil) - Enum values for crawl_status are defined in indexing/converter/proto/converter.proto
*   fetchSourceInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.WirelessTranscoderFetchFetchSourceInfo.t), default: nil) - Where this resource comes from.
*   httpResponseLength (type: integer(), default: nil) - Size of the full HTTP response (headers and body pre-decompression). Semantically equal to content_length plus size of the HTTP headers.
*   uncompressedContentLength (type: integer(), default: nil) - Size of the HTTP body (payload of the HTTP response, excluding headers), post-decompression. Equal to content_length if the body was not compressed to begin with. NOTE: if this proto is converted to from ReferencedResource, we have to use the size of the full HTTP response as an approximation, as we could not get the size of HTTP headers.

Tokens includes a list of tokens, with an aggregated score of the priors of the tokens, if any.
*   score (type: number(), default: nil) - Score for this group of tokens is currently product of priors.

How did we derive this viewability for this locale+volume? For "partner" books, this includes details about the "Imprint" that provided the rights. These details specify things such as preferred buy-the-book-url to show in the frontend.


Custom field that represents SSH public keys associated with the user. We can treat the field as a map from a string fingerprint to the SSH public key information.
*   fingerprint (type: String.t, default: nil) - The value is automatically set to a SHA-256 fingerprint of an SSH public key. A fingerprint should uniquely identify an SSH public key.

Bounding box of patch containing line, word or symbol.
*   angle (type: number(), default: nil) - Angle of rotation of (in degrees, clockwise is positive) of the box about the top-left corner.
*   curvedBox (type: GoogleApi.ContentWarehouse.V1.Model.OcrPhotoCurvedBoundingBox.t, default: nil) - Sequence of rotated boxes that tightly enclose the text.

Conceptually, timers are clocks that count down from an initial duration and notify when they reach 0. In practice, as a timer is running, it holds a stable expiration time and computes the remaining duration using the current time. When a timer is paused, it holds a stable remaining duration.
*   creationTime (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - The time when this timer was created
*   device (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceSettings.t, default: nil) - Identifies the device this timer belongs to.
*   expireTime (type: String.t, default: nil) - When not paused: the time the timer is (or was) scheduled to expire, in milliseconds since the Unix epoch. This should be deprecated and replaced by the expire_timer_time with DateTime type once DateTime proto includes unix timestamp (b/63636831).
*   expireTimerTime (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - This is currently being only used only for the response generation when the user describe the expired datatime as a search constraint. We will used it for everything else once that for filtering once DateTime proto includes unix timestamp (b/63636831) and expire_time is deprecated.
*   id (type: String.t, default: nil) - A string key used as an identifier to this timer, unique for a given Provider.
*   label (type: String.t, default: nil) - The label, provided by a user, associated with this timer.
*   lastUpdated (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t, default: nil) - The time when this timer was last updated (creation, paused, resumed, etc.)
*   originalDuration (type: String.t, default: nil) - The duration of the timer when it was started, in milliseconds.
*   originalTimerDuration (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration.t, default: nil) - The duration set for the timer. The DateTimeModifier field is ignored. This field is currently only experimental until we switch the Dialog code and gramnar to the new format.
*   provider (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t, default: nil) - The provider that owns this alarm. For Android, this includes the app that owns this alarm, where an intent should be sent to modify it.
*   remainingDuration (type: String.t, default: nil) - When PAUSED: the remaining duration in milliseconds.
*   remainingTimerDuration (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration.t, default: nil) - The duration remained for the timer. This is needed because there is no expiration date for paused timer. The DateTimeModifier field is ignored. This field is currently only experimental until we switch the Dialog code and gramnar to the new format.
*   ringtone (type: GoogleApi.ContentWarehouse.V1.Model.QualityActionsRingtone.t, default: nil) - The ringtone will be played when the timer fires, it will replace the beep sound if it is not empty.
*   ringtoneTaskMetadata (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedRingtoneTaskMetadata.t, default: nil) - Ringtone Task Metadata information used to generate sound for firing the timer.
*   room (type: GoogleApi.ContentWarehouse.V1.Model.QualityActionsRoom.t, default: nil) - Contains info about the room the timer is in
*   status (type: String.t, default: nil) - The current status of the timer.
*   vibrate (type: boolean(), default: nil) - Whether or not the device will vibrate when the timer fires.

Contains information about on-device alarms for devices that support alarms.
*   snoozeDuration (type: String.t, default: nil) - The amount of time for which alarms should be snoozed. If not specified, the productivity vertical applies a default snooze duration, which may be seen here: http://google3/assistant/verticals/productivity/utils/alarm_utils.cc;l=2734;rcl=415933085
*   stateFetchError (type: String.t, default: nil) - Indicates if an error occurred while fetching alarm state. If this value is missing, it can be assumed that the state fetch was successful.

A brand can be any combination of text or mid.




Constraint for the health insurance network of a provider.

Contains information logged in target device selection. See go/improve-device-targeting-logging for details. Next Id: 22
*   allDefaultDevices (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDefaultDeviceLog.t), default: nil) - Default settings of all nearby devices Deprecated, use default_devices_log instead.
*   defaultDevices (type: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDefaultDeviceLog.t, default: nil) - Include default tv and default speaker Deprecated, use all_default_devices below.
*   devicesStr (type: list(String.t), default: nil) - Temporaray field for debugging ANDROID_AUTO multi_target_devices punt. This will be removed once we identify the root cause.
*   localDevice (type: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceInfoLog.t, default: nil) - Now we just log the media sessions on local device Deprecated, use NearbyDevicesLog::LocalDevice instead.
*   logDataSource (type: String.t, default: nil) - Indicates which library populated the device_selection_log for this query.
*   mediaFocus (type: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaFocusInfoLog.t, default: nil) - The Media Focus information. This field should be populated only when there is a Media Focus. Deprecated, use media_focuses below instead.
*   queryAnnotation (type: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsQueryAnnotationLog.t, default: nil) - This should log the query annotation features found in the device, such as the device annotation, the room annotation, and the structure annotation from the query.

Note that when a VSI is from a user video, the information reflects the info in that source. Fields like lengths, fps, etc. are not guaranteed to be the same as those of transcodes. If the relevant info in source is too broken, the corresponding fields (e.g., lengths) could be unset or with the default value, meaning VSI cannot compute them from the given info. Next id: 84
videoCodecId (type: String.t, default: nil) - Primary video codec information Fields 1-2, 4-10, 28, 37, 44, 49, 51, 54-55, 57-62, 69 will be obsolete soon. Please start using the new repeated video_stream. For now, video_stream(0) will match these fields. Note however that some of the fields in VideoStream are not populated correctly yet in videostreaminfo.cc, but that will be handled gradually.  numTimedtextStreams (type: integer(), default: nil) - Total number of timedtext streams in the file  fileMagic (type: String.t, default: nil) - The file type string returned by libmagic, a third party library. It might accidentally include some user content. Some normal file_magic examples: -- RIFF (little-endian) data, AVI, 1016 x 696, 30.00 fps, video: XviD, audio: (stereo, 48000 Hz) -- MPEG sequence, v2, program multiplex -- ISO Media, MPEG v4 system, iTunes AVC-LC -- Microsoft Windows Movie Maker project file  videoClipInfo (type: GoogleApi. ContentWarehouse.V1.Model.VideoVideoClipInfo.t, default: nil) - Video clip information, such as copyright, title, and author.  fileName (type: String.t, default: nil) - Input file name. DEPRECATED; don't expect the file name to be correct.  parsedByInHouseParsers (type: boolean(), default: nil) - True if the file was successfully parsed by in-house parsers. Unset if parsing wasn't attepmted.  isImageFile (type: boolean(), default: nil) - True if the video is actually an image file (JPEG, PNG, GIF, etc) and not a video file.  videoHasVariableAspectRatio (type: boolean(), default: nil) - video has frames with different aspect ratios.  displayWidth (type: integer(), default: nil) - final display video width and height if explicitly set in the video otherwise this can be calculated from source width/height and video_pixel_aspect_ratio  containerType (type: String.t, default: nil) - Name of the container format guessed by ffmpeg.  audioSampleSize (type: integer(), default: nil) - Number of meaningful bits per decoded audio sample. This is an implicit conceptual meaning. This is NOT the same as ffmpeg's internal sample format that is used when actually decoding with ffmpeg.  parsedByFfmpeg (type: boolean(), default: nil) - If this field is not set, then only base video file information has been generated (and ffmpeg parsing hasn't yet been done). If this is set to 'false', then ffmpeg failed to parse the file - otherwise it will set to 'true'  numAudioStreams (type: integer(), default: nil) - Total number of audio streams in the file  numImageStreams (type: integer(), default: nil) - Total number of image streams in the file  partialFile (type: boolean(), default: nil) - By default we assume that the entire file was given computing the VSI - if that is not true this flag should be set to true.  numDataStreams (type: integer(), default: nil) - Total number of data streams in the file  videoNumberOfInvisibleFrames (type: integer(), default: nil) - Invisible frame count Keep a count of frames that are not displayed should the full frame count be needed for the video stream. The only codec currently reporting this value is VP8 with alternate reference frames enabled  audioLength (type: float(), default: nil) - audio length in seconds Note that when the VSI is from users videos, it is not guaranteed to be the same as transcode lengths and it could be 0 when the full VSI cannot compute the length from the source header and timestamps (for example when header and timestamps are too broken).  audioNumberOfFrames (type: String.t, default: nil) - Number of audio frames. Ffmpeg does not report the number of frames accurately. video::TranscodedVideoFileInformation calls Google's analyzer to get information of both audio and video frame numbers.  isVideoInsaneSize (type: boolean(), default: nil) - Check if a video size insane or not. It is set if the input file is an MOV file.  fileType (type: integer(), default: nil) - High-level file type guessed by looking at the file headers and libmagic.  videoFps (type: float(), default: nil) - video frame per second, obtained by parsing video header information. It could be inaccurate for some types of codecs, notably, WMV, ASF, and FLV. It will be inaccurate for videos that does not have constant frame rate since it is the smallest framerate that can accurately represent all timestamps (see ffmpeg doc for AVStream.r_frame_rate). Also frame rate can be parsed from headers and can be wrong if it is not available there since ffmpeg uses a heuristic for determining it.  videoHasNonZeroStartEditList (type: boolean(), default: nil) - video (MOV) has a possibly av desync issue due to edit lists not starting at 0  audioCodecId (type: String.t, default: nil) - Primary audio codec information Fields 15-20, 41-42, 48, 52-53 for audio will be obsolete soon. Please start using the new repeated audio_stream and video_stream. For now, audio_stream(0) will match these fields. Primary audio codec information starts:  videoNumberOfFrames (type: String.t, default: nil) - Number of Video frames Warning: running video::FfmpegVideoFileInformation() won't set this info Ffmpeg tool does not report the number of frames accurately. We can't rely on fps and video length. So we will set this after we processed every frame using the filter framework  videoLength (type: float(), default: nil) - video length in seconds Note that when the VSI is from users videos, it is not guaranteed to be the same as transcode lengths and it could be 0 when the full VSI cannot compute the length from the source header and timestamps (for example when header and timestamps are too broken).  videostreaminfoVersion (type: integer(), default: nil) - Version number of the videostreaminfo application that generated this protobuf.  isAsf (type: boolean(), default: nil) - True if the video is likely to be an ASF file.  numVideoStreams (type: integer(), default: nil) - Total number of video streams in the file  avLength (type: float(), default: nil) - Audio and video length in seconds. It's the max of the audio and video length. Note that when the VSI is from users videos, it is not guaranteed to be the same as transcode lengths and it could be 0 when the full VSI cannot compute the length from the source header and timestamps (for example when header and timestamps are too broken).  containsChapters (type: boolean(), default: nil) - If the video contains chapters info.

The status indicating the user should not be disturbed.
*   committedUntil (type: DateTime.t, default: nil) - The time when the user will either stop being committed or change commitment type (i.e. InMeeting, DoNotDisturb, Busy or OutOfOffice < Xh). Note that the goal of this field is to provide information to help users decide how to communicate with a user (see also http://shortn/_wXYXtZScgh).
*   nextAvailable (type: DateTime.t, default: nil) - The next time when the user will be available, i.e., when their status will be neither InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
*   occupiedUntil (type: DateTime.t, default: nil) - The time when the user will stop being occupied, i.e., when their status will be neither inMeeting, Busy nor DoNotDisturb.

LINT. IfChange(DeviceId) Specifies identifier of a device AKA surface. Note there may be multiple device ids for the same physical device E.g. Allo app and Assistant app on Nexus. Note: DeviceId usage is complicated. Please do not depend on it for surface specific logic. Please use google3/assistant/api/capabilities.proto instead. IMPORTANT: When checking for equality between two DeviceIds, you should always use an isSameDevice{As} function to check for equality, as deep equality between DeviceId's is not guaranteed.  C++: http://google3/assistant/assistant_server/util/device_id_util.cc;l=23;rcl=421295740  Dart: http://google3/assistant/context/util/lib/device_id.dart;l=26;rcl=442126145 * Java: http://google3/java/com/google/assistant/assistantserver/utils/DeviceIdHelper.java;l=9;rcl=390378522 See http://go/deviceid-equality for more details. Next ID: 14
*   agsaClientInstanceId (type: String.t, default: nil) - The client_instance_id on devices with GSA. See 'client_instance_field' in go/androidids.
*   alloDeviceId (type: String.t, default: nil) - Allo Id. Corresponds to the GBotRequest.Sender.sender. NOTE(dychen): This may change to standard android/ios physical device ids in order to enable shared data (e.g. installed app on physical device shared between Allo and Opa apps on Nexus).
*   canonicalDeviceId (type: String.t, default: nil) - A unique device ID for Assistant devices as proposed by go/ocelot-team to solve the device id fragmentation problem. The value of this id is the HomeGraph id of the device. See go/ocelot-track-0-registry-design. New surfaces should use the canonical_device_id instead of using other ids, and the registration should utilize the DeviceDataLayer (go/ddl-v0). Please contact the assistant-state-management@ team for guidance. Note: We didn't reuse |home_graph_device_id| because in Assistant code base |home_graph_device_id| is common to associate it with 3P devices. See go/project-yellowstone for more context.
*   castDeviceId (type: String.t, default: nil) - If set, indicates that the device is a cast device, and contains the UUID of the cast device. Corresponds to the device_id field of the CastDevice proto.
*   clientInstanceId (type: String.t, default: nil) - DUSI (go/dusi) is used as the identifier here. This identifier is unique to the user and device. This will help identify which device or application the user's request originated from. This is not to be confused with the client_instance_id that android devices provide. This is currently used by surfaces that use the assistant-legacy-nexus and assistant-legacy-clockwork pipelines. DUSI is created and set in S3. This field is only filled for GAIA requests.
*   connectedDockId (type: String.t, default: nil) - A device ID produced by a connected dock, which is registered in HomeGraph.
*   deviceConfig (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceConfig.t, default: nil) - The unique DeviceConfig to the specific third party device. It is also used by Android Auto Embedded first party device. See go/opa-ids.
*   deviceType (type: String.t, default: nil) - DEPRECATED. assistant.api.core_types.governed.SurfaceIdentity.surface_type field should be used instead. The device's surface type. This is the string version of surface_type. The server should use the SurfaceType value derived from this string. If the device_type isn't supported within the SurfaceType enum, it will be set as UNKNOWN. Developers should use the enum in ServerParams instead of this string. WARNING: Clients are not actually setting this field. This field will be removed once references to it within the code base have been removed.
*   homeGraphDeviceId (type: String.t, default: nil) - The unique device ID for HomeGraph devices. This is the HomeGraph ID, created when the device is registered into HomeGraph. It is immutable for the same device unless it is completely deleted and recreated. See go/home-graph for details.
*   libassistantDeviceId (type: String.t, default: nil) - The unique ID for libassistant based devices. See go/libassistant-id for details.
*   multiHotwordArbitrationDeviceId (type: String.t, default: nil) - If set, indicates that the device is participating the multi-hotword arbitration and the id is an UUID to distinguish it from other devices. It should also be consistent between requests from a single device within a session (or short duration).
*   opaIosDeviceId (type: String.t, default: nil) - The unique device ID for the Assistant App on iOS. See go/opa-ios-design for details.
*   quartzDeviceId (type: String.t, default: nil) - The unique ID of a Quartz device. See go/quartz-design-doc for more details. Quartz ID is a hash of (android_id + gaia).


An entity from the MDB namespace that is to be interpreted as a user. If using this for authorization, you should only do an exact match on the peer role against user_name.
*   gaiaId (type: String.t, default: nil) - Do not set this field. Contact credentials-eng@ if you believe you absolutely need to use it. This is the @prod.google.com Gaia ID that corresponds to the MDB user, see go/authn-merge for details. This field may always be safely ignored when performing an authorization check.


All information that applies globally to the document. Next available tag: 11
*   documentMetadata (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDocumentMetadata.t, default: nil) - Information about the document copied from the docjoin. This will never be populated when WebrefEntities appears inside a CompositeDoc, but may we used when it stands alone.
*   webrefParsedContentSentence (type: list(String.t), default: nil) - The content (CONTENT section 0) as parsed by WebrefParser. Only used by //r/w/postprocessing/idf/idf-pipeline for document ngram idf computation. Populated when the annotator is run with webref_populate_parsed_content Each webref_parsed_content_sentence represents one sentence of the context where saft annotations were used to determine the sentence boundaries. See r/w/universal/processors/saft/saft-sentence-helper.h for details.

Similar to goodoc. BoundingBox, but containing an angle of rotation, thus able to represent non-axis-aligned boxes. RotatedBoundingBox can be used in combination with BoundingBox to better represent non-axis-aligned page structural elements. In such case, two bounding boxes can be used per element. A RotatedBoundingBox that is rotated to tightly encompass the element; embedded (as tightly as possible) inside an axis-aligned BoundingBox. Note that there is some amount of ambiguity regarding what angle and vertex to use. Consider a square with axis-aligned diagonals: B / \ A C \ / D This can either be represented as a -45 degree rotation around A, a 45 degree rotation around B, a 135 degree rotation around C, or a -135 degree rotation around D. Which one you use depends on your use case, but one recommendation is to use the vertex that would be top left if the reader was reading it in the 'natural' orientation.
*   Angle (type: number(), default: nil) - Angle of rotation of the original non-rotated box around the top left corner of the original non-rotated box, in clockwise degrees from the horizontal.
*   Left (type: integer(), default: nil) - Coordinates and sizes are expressed in pixels, where the top-left pixel is (0, 0). The coordinates refer to the corner of the top-left vertex of the unrotated version of the box.

Features for the set of OnScreenText.
*   averageOcrTextLength (type: number(), default: nil) - Deprecated. Please use ocr_text_length_stats.median instead. The average length of anchor labels. average_ocr_text_length is deprecated, because now ocr_text_length_stats has a field for holding the same value.
*   averageOfAverageTextHeightRatio (type: number(), default: nil) - Deprecated. Please use text_height_ratio_stats.mean instead. Average value of text height ratio (over image height), which is taken average over the same text. average_of_average_text_height_ratio is deprecated, because now text_height_ratio_stats has a field for keeping the same value.
*   clusterRatio (type: number(), default: nil) - The number of anchors in the cluster over the number of anchors in the video.
*   clusterSize (type: integer(), default: nil) - The number of anchors in the cluster.
*   countingNumberRatio (type: number(), default: nil) - The number of anchors that had a counting number over the number of anchors in total.
*   durationMsStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Median, average and standard deviation of duration_ms among anchors in the same cluster.
*   logOcrTextLengthStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Average and standard deviation of logarithm of the length of labels among anchors in the same cluster.
*   logTextHeightRatioStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Average and standard deviation of log(average_text_height_ratio) among anchors in the same cluster.
*   logp1000DurationMsStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Average and standard deviation of log(1000 + duration_ms) among anchors in the same cluster. Since duration_ms can be zero, 1000 is added before applying logarithm.
*   maxVideoDurationRatioBetweenAnchors (type: number(), default: nil) - The maximum ratio of duration between two consecutive anchors to video duration. This is calculated after all anchor filtering has been completed.
*   maximumDurationRatio (type: number(), default: nil) - Stats for ratio of frame time intervals, over total video time.
*   medianClusteringDistance (type: number(), default: nil) - The median cluster distance for the anchors in the cluster. The way the distance is calculated will vary depending on the clustering method.
*   medianOfAverageTextHeightRatio (type: number(), default: nil) - Deprecated. Please use text_height_ratio_stats.median instead. Median value of text height ratio (over image height), which is taken average over the same text. median_of_average_text_height_ratio is deprecated, because now text_height_ratio_stats has a field for keeping the same value.
*   ocrAsrFeature (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrAsrSetFeature.t, default: nil) - Features for the overlap between OCR and ASR.
*   ocrTextLengthStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Median, average and standard deviation of the length of labels among anchors in the same cluster.
*   textHeightRatioStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Median, average and standard deviation of average_text_height_ratio among anchors in the same cluster.


Used for aggregating query unique voter_token during merging. We use 4 uint64(s) as a 256-bit bitmap to aggregate distinct voter_tokens in Glue model pipeline. Number of elements should always be either 0 or 4. As an optimization, we store the voter_token as a single uint64 if only one bit is set. See quality/navboost/speedy_glue/util/voter_token_bitmap.h for the class that manages operations on these bitmaps.

For text nodes, individual lines of text. This repeats rendered_text with more specific bounding boxes.


The Soli capabilities on Elaine, including gestures and sleep sensing. go/dingo-dc-software Next ID: 4
*   sleepSensingSupported (type: boolean(), default: nil) - Whether the client can monitor sleep. This allows us to show sleep CUJ related information: go/TwilightDesign


A speed limit without a limit value. Used to indicate the absence of a speed limit.

A mask applied to the screen's pixel space to determine regions not visible on the physical device.

Stores the number of different kind of user engagement actions. Abuse Report is also consider an engagement. Currently we only have abuse report engagements but in future we might add other types of engagements as well.
*   reportCompromised (type: String.t, default: nil) - Corresponds on "This account might be compromised or hacked" reporting action.
*   serveCount (type: String.t, default: nil) - Number of times this activity was served out of asbe/stanza.
*   timeSec (type: String.t, default: nil) - Timestamp in seconds for which time this record is valid.

Contains an attribute id and it's completion score.




An Ordinal message represents a single ordinal component of a page number. It encodes the printed or inferred numbering style (Roman, ASCII, etc.) and the ordinal value of the component. An optional set of variable is defined in order to express a sectioned ordinal. A sectioned ordinal may appear in certain page numbering styles, for example "12-1" where "12" identifies a chapter and "1" identifies the page within it. This case will be encoded with value 1 and section_value 12 both of type ASCII.
*   sectionValueType (type: String.t, default: nil) - The following vars describe the section component of an ordinal (if exists). They are used to express situation where a page number has a section component, usually denoating the chapter number. For example pages 5-14, 5-15 will both have the common section 5. (If exists). The semantcis of the section variables correspond to that of the primary part of the ordinal. (Described above).
*   value (type: integer(), default: nil) - The numeric page value.
*   valueDelta (type: String.t, default: nil) - The delta in which the value increases between pages.
*   valueType (type: String.t, default: nil) - A value type from the Type enum above.

Data about multiple video frames associated with the video.


A proto representing a vertical ordering of a feature. NOTE: This shouldn’t be used if a more specific field can be used instead. E.g., for TYPE_SEGMENT features grade_level field should be preferred. For indoor features RELATION_ON_LEVEL should be preferred. See go/aboutgrades for comparison of various types of levels available.
*   level (type: number(), default: nil) - The level represents the relative vertical ordering of a feature among all overlapping features. For example, we may have features along freeway surface have level = 0, and features on an overpass have level = 1. NOTE: It’s assumed that all features have level 0 by default, so that it’s not necessary for all overlapping features to have this set.

UI capabilities for the surfaces rendering Comms features. See go/rohan-comms-fluid-actions-customization.

Message describing where was the link discovered and with what language annotation.
*   anchorText (type: String.t, default: nil) - Optional field for storing the anchor text the language code was extracted from. Applies to outlinks only.
*   annotationSource (type: String.t, default: nil) - Information about where the language code was extracted from.
*   languageCode (type: String.t, default: nil) - Language code extracted from the URL (hreflang or outlink). One URL can represent multiple language codes, like e.g. de-at and de-ch
*   sourceFeedUrl (type: String.t, default: nil) - Optional field that stores the feed URL where a Sitemap annotation was discovered. Only populated if annotation_source is SITEMAP.


A mention level sentiment annotation containing the sentiment values for a single entity mention. // Next tag: 6.
*   polarity (type: number(), default: nil) - Polarity of the sentiment. See above for detail.
*   score (type: number(), default: nil) - The per mention score between -1.0 and 1.0. Combines the signal from polarity and magnitude values.










Dates that we didn't fully parse, so we don't know exactly what they are, but we are keeping in case it's all we have.

Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
*   activeState (type: String.t, default: nil) - Indicates if this prompt is active regardless of its reccurrence date, dismiss date or notification triggers. This is required.
*   lastDismissDate (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t, default: nil) - The most recent day the user dismissed this prompt. Empty means the user has never dismissed the prompt.
*   notificationTriggers (type: list(GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoNotificationTrigger.t), default: nil) - If this is empty, only the "Prompt Spark" will be displayed (in the time-range read from per type config), no push notifications will be shown. If push notification are configured with this field, the "Prompt Spark" time-range will be determined by earliest notification value here.
*   purpose (type: String.t, default: nil) - Read-only. This is derived from the containing field value.
*   recurrence (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoRecurrence.t, default: nil) - How frequently will this prompt occur and how many times.
*   uniquePromptId (type: String.t, default: nil) - Prompt ID is generated by server on initial mutate.

Principal associated with a Cloud Principal representing third party user.

Identifies the source of Spore segments in the CompositeDoc.
*   index (type: list(integer()), default: nil) - Index within the proto. Several indices are necessary in case of nested repeated fields. The data can be accessed as follows: TOPICS: topic_annotations.kg_schema_topic(index(0)) .property_value(index(1)) .value(index(2)); TRIPLES: reconcile_request.triple(index(0));


LexicalAnnotation is public lightweight serving structure for both WordGraph features and LWT annotations to expose lexical information downstream from RefX, e.g. in LooseParser.


This protocol buffer holds entrance-specific attributes for features of type TYPE_ENTRANCE.
*   canEnter (type: boolean(), default: nil) - DEPRECATED. Please use enter_or_exit instead.
*   canExit (type: boolean(), default: nil) - Whether the target can be entered through this entrance. Whether the target can be exited through this entrance.

Merlot category information. As of Sep2015, this is derived from collection membership, but as that information is planned for deprecation and may need to be replaced as a source for this data, it is extracted separately.




This is the log version of apps.people.oz.external.mergedpeopleapi. DeviceContactInfo Next ID: 2
*   rawContactInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantLogsCommunicationRawDeviceContactInfoLog.t), default: nil) - This list provides account information from the raw contact which is the source of this field.

A weight with a numerical value and unit.




An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
*   id (type: String.t, default: nil) - Optional. Canonical id. This will be a unique value in the entity list for this document.
*   mentionText (type: String.t, default: nil) - Optional. Text value of the entity e.g. 1600 Amphitheatre Pkwy.
*   normalizedValue (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentEntityNormalizedValue.t, default: nil) - Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.
*   pageAnchor (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentPageAnchor.t, default: nil) - Optional. Represents the provenance of this entity wrt. the location on the page where it was found.
*   properties (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentEntity.t), default: nil) - Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
*   provenance (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentProvenance.t, default: nil) - Optional. The history of this annotation.
*   redacted (type: boolean(), default: nil) - Optional. Whether the entity will be redacted for de-identification purposes.
*   textAnchor (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentTextAnchor.t, default: nil) - Optional. Provenance of the entity. Text anchor indexing into the Document.text.





This is proto2's version of MessageSet.

This class represents an address, partial address, or address range. It is intended to be attached to features to identify their address(es). Some important points about addresses: - The addresses in the Geo Schema do not include a component for the name of the feature, i.e. they are not self-referential. For example, the name of a feature might be "Zack's Pizza" and its address would be "123 Main Street". Similarly, streets, cities, and counties do not include themselves as part of their address. The address of "Seattle" is "King County, Washington, USA". If want to construct an address that does include the feature name, you can simply prepend it to the other address components. - Lakes, mountains, and other natural features do not normally have addresses. Countries also do not have addresses because they are at the top of the political hierarchy. - Address components in the Geo Schema are listed in a particular order, independent of the conventions used by the country in which they occur. The basic order is "smallest to largest" starting with street numbers and routes, then political features, and ending with postal features. The exact rules are defined by the implementation of the AddressComponentOrdering::IsLessThan() function. - Some types of address components may occur more than once in an address. For example, a UK address with a "dependent thoroughfare" would have two components of TYPE_ROUTE (i.e. street names). These are listed in the order they are normally written.
*   addressLines (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAddressLinesProto.t), default: nil) - The unparsed portion (lines) of the address. An address can have multiple unparsed portions. Multiple unparsed portions sharing the same language should be modeled as one address_lines instance having multiple lines. Historically, we also supported unparsed portions in different languages, but we no longer do. Consequently, only one value is allowed for this field despite the fact that it is repeated. See go/address-lines-multi-language for information about why we made this change. If any components are filled in, this is supplemental to (i.e. disjoint from) them. Furthermore, this must be the most specific portion of the address (except for the portion, if any, stored in the name field of feature.proto). Unparsed lines are always formatted together in a block. Other address components are never formatted between the address lines. This doesn't imply that the address lines are always either the first or the last part of the formatted output.
*   component (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAddressComponentProto.t), default: nil) - A list of parsed address components, e.g. the street, city, etc. An address range is one type of component.
*   crossStreet (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAddressComponentProto.t), default: nil) -  DEPRECATED  This field is now deprecated (see b/33268032). If you want to store cross street information as part of an address, use the address_lines field.
*   templateId (type: String.t, default: nil) - The opaque ID of the address template that contains rules for structuring this address. The id of the address template can be retrieved using google3/geostore/address_templates/public/address_templates.h
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to an address. Never set in MapFacts.







Collects all lightweight token patterns for each CandidateMention or Mention.

Next ID: 19 IMPORTANT: This file is used in scattered directories, such that it is risky to add values to any enumerated type. (First of all, compilation breaks on switch statements without default clauses.) Run a global tap presubmit: tap_presubmit -p all --train -c before submitting. Also check out the blame layer of previous updates for hints on what other files to changes.
*   creationTimeStampUsec (type: String.t, default: nil) - Creation timestamp of this media_info, in Unix timestamp since epoch.
*   hasChapters (type: boolean(), default: nil) - Currently used by originals replacement pipeline to exclude all videos containing chapter info.
*   orientation (type: String.t, default: nil) - The orientation is annotated based on the final displayed resolution of the video file. A video will be labelled PORTRAIT whenever the height is greater than the width. The orientation is only labelled UNKNOWN in the case that the video stream had some transformation that was not a rotation in the video stream.
*   resolution (type: String.t, default: nil) - The resolution for a video takes into account the displayed video size, and takes into account the orientation. For example: - A 1920x1080 video will have ORIENTATION_LANDSCAPE and RESOLUTION_1080P - A 1080x1920 video will have ORIENTATION_PORTRAIT and RESOLUTION_1080P - A 1080x1080 video will have ORIENTATION_LANDSCAPE and RESOLUTION_1080P
*   wallyMeshType (type: String.t, default: nil) - This only applies when: projection = PROJECTION_PARTIALLY_SPHERICAL


Capsulate all metadata annotated from fetch server. This message will typically go through: - EmbeddedContentFetcher, or - EmbeddedLinkGetter-> DenormalizedContent -> ContentStore. And finally deposit in referenced_resources and link_info.
*   crawlStatus (type: integer(), default: nil) - The field always exists, and has four options: UNKNOWN, CONTENT, ROBOTED and ERROR, which are defined in indexing.converter.CrawlStatus.
*   fetchWithSmartphoneUa (type: boolean(), default: nil) - True if the response is fetched with SMARTPHONE user agent.
*   numTrawlerFetches (type: integer(), default: nil) - Number of trawler fetches while fetching this URL. In most cases, this number will be 0 or 1.
*   rewriteMethod (type: String.t, default: nil) - Used for logging purposes only here.
*   robotsInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo.t, default: nil) - Note that this robots_info should only be used for noindex_reason and will only be present for TARGET_MAIN_FRAME / TARGET_SUBFRAME fetches.

Proto with metadata related to why a particular cdoc was selected for an entityjoin.
*   source (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefPreprocessingUrlSourceInfo.t), default: nil) - The sources the url was suggested by.

A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
*   nanos (type: integer(), default: nil) - Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 seconds field and a positive or negative nanos field. For durations of one second or more, a non-zero value for the nanos field must be of the same sign as the seconds field. Must be from -999,999,999 to +999,999,999 inclusive.
*   seconds (type: String.t, default: nil) - Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive.


Media device. Like, Chromecast, TV or Chirp. When emitted from the cast_device domain, you should expect it to be one of 3 different forms: 1) Personal Device: The annotation comes from a device we found in the user's home. device_id and name should be set, cast_device_type is set if device type is mentioned in query. e.g. "Dima's Pineapple Chirp" device_id: FOOBAR name: "Dima's Pineapple" cast_device_type: CHIRP 2) Common Device Name: The annotation comes from a model of the common names of user's device. name and cast_device_type should be set but device_id will not be. cast_device_type can be UNKNOWN. e.g. "John's Living Room" name: "John's Living Room" cast_device_type: UNKNOWN 3) Device Type: The annotation comes from a model of common cast device types. Only cast_device_type will be set. e.g. "TV" or "chromecast" cast_device_type: CHROMECAST Next ID: 9
*   castDeviceType (type: String.t, default: nil) - This field is populated when the user says [play X on $cast_device] and we know the type of $cast_device but cannot identify the exact device.
*   creationTimestampMs (type: String.t, default: nil) - The timestamp that the device is linked with the user in milliseconds. This is inherited from the corresponding assistant DeviceSettings as is.
*   deviceId (type: String.t, default: nil) - DEPRECATED: Please use device_identifier instead.
*   deviceIdentifier (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The identification of the device. This field is populated when the user says [play X on $device_name] and $device_name matches one of the devices linked to user's account. } oneof Media Device
*   quantification (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaQuantification.t, default: nil) - This field is populated when the user metioned quantification in the query. E.g., "2" or "all".

The next available field number is 22. To access the best estimate of change period, please use GetChangePeriod in predict-change-rate.h to select between this and other change period estimates below.
*   averageChangeSignificance (type: float(), default: nil) - The "significance" of the average change we saw of this document (from 0 to 1). Influenced by content changes. This can be used for prioritizing the crawl (higher significance first).
*   changeperiod (type: integer(), default: nil) - //////////////////////////////////////////////////////////////////////////// The classic changerate estimation. //////////////////////////////////////////////////////////////////////////// The classic estimate of change period (in seconds). It is computed by inserted a "fake" change and no-change interval as a prior distribution. This field is generally not used and should NOT be accessed directly. See above for correct method for determining the change period estimate.
*   confidence (type: float(), default: nil) - The confidence (between 0 and 1) in the changeperiod guess.
*   globalBasedChangePeriod (type: integer(), default: nil) - //////////////////////////////////////////////////////////////////////////// The changerate estimation based on the global prior. //////////////////////////////////////////////////////////////////////////// The global-based changeperiod. This is our estimate (in seconds) for the average time between changes. It is computed using the new prior method based on global_based_prior_period and the global_based_prior_strength specified below. This is used for computing pattern priors. Use pattern_based_change_period or changeperiod fields for all other purposes.
*   globalBasedChangePeriodConfidence (type: float(), default: nil) - The 'confidence' of the global-based changeperiod. This is the n-th root of the posterior evaluated at MAP point, where n is the number of history intervals. For now, it is hard to interpret the meaning of the absolute values of 'average' posterior cross different sets of data.
*   globalBasedPriorPeriod (type: float(), default: nil) - The 2 parameters below specify the prior employed in calculating the global_based_change_period. These values are precomputed through an offline analysis and specified via flags.
*   lastChangeSignificance (type: float(), default: nil) - The "significance" of the last change we saw of this document (from 0 to 1). Influenced by content changes, etc. This can be used for prioritizing the crawl (higher significance first).
*   lastChanged (type: integer(), default: nil) - The last time (unix timestamp) we saw a changed copy of the document. Provided iff we have seen the page change.
*   lastFetched (type: integer(), default: nil) - The last time (unix timestamp) we saw a fetched copy of the document.
*   numIntervals (type: integer(), default: nil) - The number of intervals we've seen for this document (where an interval is two different versions).
*   patternBasedChangePeriod (type: integer(), default: nil) - //////////////////////////////////////////////////////////////////////////// The changerate estimation based on the pattern prior. //////////////////////////////////////////////////////////////////////////// The pattern-based changeperiod. This is our estimate (in seconds) for the average time between changes. It is calculated based on the pattern_based_prior_period and pattern_based_prior_strength below. This quantity will eventually replace the old changeperiod calculation.
*   patternBasedChangePeriodConfidence (type: float(), default: nil) - The same as global_based_change_period_confidence, except it is computed using pattern based priors.
*   patternBasedLowerChangePeriod (type: integer(), default: nil) - The lower edge of a confidence interval for the pattern-based change period.
*   patternBasedPriorPeriod (type: float(), default: nil) - The 2 parameters below specify the prior employed in calculating the pattern_based_change_period. These values are calculated in a separate process and looked up based on the URL pattern.
*   patternChangePeriodVersion (type: integer(), default: nil) - The version number of the algorithm, refer to ChangePeriodVersion for more information.
*   type (type: integer(), default: nil) - //////////////////////////////////////////////////////////////////////////// Basic information of a document. //////////////////////////////////////////////////////////////////////////// The type of the document determined by crawl histories, refer to TYPE for more information.
*   ugcChangePeriod (type: integer(), default: nil) - //////////////////////////////////////////////////////////////////////////// The UGC changerate estimation. //////////////////////////////////////////////////////////////////////////// Information on change period generated from user generated content (UGC) change history.

The fetcher keeps track of various time intervals spent in the states of the fetcher url control flow. Sometimes flows branch out into more than one flow (next flow), and we aggregate all the time intervals spent in a specific state for all the flows to get the time interval for the state. The time interval for a state is therefore not the time interval of an individual flow, if the WaitNextFlow time is non zero. The WaitNextFlow interval included here is the time spent by one flow waiting for another flow. Although the WaitNextFlow time is the time spent by a flow in the WaitNextFlow state, its also equivalent to the entire timeline of another flow. It is the time spent in the various states of another flow. In computing the total time spent in the primary flow, one must omit the WaitNextFlow time, since it is already included in the form of slices of individual state time intervals in the aggregated time intervals for other states, and will result in double counting.
*   ConnectTimeMs (type: integer(), default: nil) - Report only with first request on connection, so that we keep track of the connect time with a host. Sometimes a connection is initiated by a prior request that times out before the connection is established. Another request can get scheduled on a connection that is already in the process of being established but has no request scheduled onto it. We want to keep track of the entire connect time even if a request didn't need to wait for the entire connection establishment time. Sometimes a connection may get established before the first request uses it. We tag along the connect time with the first request using the connection. ConnectTimeMs also includes SSL negotiation time.
*   DownLoadTime (type: integer(), default: nil) - DownLoadTime = Share of connect time + ServerResponseTimeMs + TransferTimeMs (see below) in ms
*   EdgeEgressOverheadMs (type: integer(), default: nil) - Overhead spent routing the request from HOPE to edge egress nodes, which open connection to webservers. This is only set for edge fetches (e.g., through Floonet egress nodes).
*   SSLConnectTimeMs (type: integer(), default: nil) - ConnectTimeMs includes TCP connect time + SSL time, whereas SSLConnectTimeMs includes only the latter.
*   ServerResponseTimeMs (type: integer(), default: nil) - Time between the request send and the receipt of the first fragment of the response. For HTTP responses the first fragment is the first fragment of the response payload (the headers are ignored).
*   TransferTimeMs (type: integer(), default: nil) - Time to receive the entire response payload starting the clock on receiving the first fragment.

Encapsulates the textual mention spans extracted from a document, split per token.

frequency (type: GoogleApi. ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaFrequency.t, default: nil) - This proto may only be partially filled depending on the query. ## Some examples (all of them have open_intent): ## | Query |radio.raw_text|radio.frequency.band|radio.frequency.value| |[play kqed fm]| [kqed fm] | [fm] | N/A | |[play 88.5 fm]| [88.5 fm] | [fm] | 88.5 | | [play 88.5 | [88.5] | N/A | 88.5 | ## | [play fm] | [fm] | [fm] | N/A |


Test code is used to track special events happening in Device Targeting Library. Next Id: 2


Concept provides meaning semantics captured in a continuous space, as opposed to MRF. go/concepts-roofshot.

The QRefAnnotator annotates spans of input with freebase-ids and collection-information. NEXT ID TO USE: 41
*   confidenceScore (type: float(), default: nil) - The confidence (in [0, 1]) of the entity being correctly annotated.
*   otherMetadata (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - Metadata to be passed through from the AnnotationContext API.
*   oysterId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The geo oyster_id of the entity, relevant only for locations. Only included if the QRefAnnotator is initialised with include_oyster_id.
*   sourceTypeList (type: GoogleApi.ContentWarehouse.V1.Model.CopleySourceTypeList.t, default: nil) - If the annotation was created by using personal data, we record the provenance for that data here.
*   isNimbleAnnotation (type: boolean(), default: nil) - Whether this annotation originates from nimble. (go/nimble-annotator)
*   deprecatedMdvcSupportingMid (type: list(String.t), default: nil) - DEPRECATED: Higher level id's that support the given id. This field has been deprecated in favor of related_entity. b/27363861
*   displayName (type: String.t, default: nil) - Copy the display info. This can be used by annotators to give grammars a canonical name for an entity. For instance, the media grammar could use it to output the same canonical name for "rock music" and "rock".
*   lowConfidence (type: boolean(), default: nil) - Whether this entity is low confidence. Not used. Currently whitelisted entities below min_confidence threshold are marked as low confidence and maybe not trusted by downstreams.
*   clusterId (type: String.t, default: nil) - The ID of the cluster (set entity) this entity belongs to.
*   freebaseMid (type: String.t, default: nil) - The mid of the entity in freebase associated with this span.
*   relatedEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingRelatedEntity.t), default: nil) - Mids related to the given entity
*   mdvcVerticals (type: list(String.t), default: nil) - The set of verticals this summary node belongs to.
*   gaiaId (type: String.t, default: nil) - The Gaia ID for this entity. This is populated generally for people and businesses.
*   isMdvcDimension (type: boolean(), default: nil) - True if this entity is an mdvc dimension of some other annotated entity. Only included if the QRefAnnotator is initialised with include_annotated_relationships.
*   personalSummaryNodeChild (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t), default: nil) - Personal summary nodes are compound entities made up of entities and their attributes, where the entities can be compound too. E.g., "my father's mother" can have a summary node annotation of "Mother(Father(Myself))".
*   location (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - The center point of this location. This is either directly provided by the FeatureProto.center field or the centroid using the points of the polygon in the FeatureProto.
*   addedByCloseAnswers (type: boolean(), default: nil) - Whether this qref annotation was created by CloseAnswers on Postref. Annotations of this type don't correspond to a particular mention of the entity on the query but rather to an interpretation of the full query.
*   referenceScore (type: number(), default: nil) - The confidence (in [0, 1]) that the annotation is reference that implies another entity. (eg "my hotel" in "navigate to my hotel" is reference to explicit hotel from user hotel reservation).
*   globalProductClusterId (type: list(String.t), default: nil) - The shopping global product cluster id(s) of the annotated entity (in KG, the key(s) of type /business/variant_cluster).
*   mdvcChild (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t), default: nil) - Nested annotations that represent subparts of the given mdvc full annotation. An MDVC full annotation is outputted as the summary node as the root node, and all the children of it as leaves (mdvc_child). QRef outputs a graph of relationships between the mdvc enties, and for mdvc full the aquatator nests the relevant children inside the summary node's proto.
*   clusterSiblingMid (type: list(String.t), default: nil) - The set of mids that are members of the same cluster.
*   resolutionScore (type: number(), default: nil) - The confidence (in [0, 1]) that the annotation was created on an implicit mention (eg my hotel) as opposed to an explicit mention (eg: the westin copley square)
*   locationType (type: integer(), default: nil) - The location type of the entity, as an int32 representing a TypeCategory enum value. For example, this could be TYPE_LOCALITY (37) or TYPE_COUNTRY (33). We store this type as an int because including FeatureProto would cause java/com/google/ads/adh/pipeline/bigquery:ProtoCatalog to become too large, resulting in OOM errors.
*   interpretationNumber (type: integer(), default: nil) - The index of the QueryJoin interpretation from which this annotation was obtained. This field is not used for entities coming from low-confidence annotations, since such entities are not included in any interpretation.
*   entityNumber (type: integer(), default: nil) - The index of the entity from which this annotation is obtained, within the WebrefEntities message in the interpretation defined by interpretation_number, above.
*   annotatedSpan (type: String.t, default: nil) - A copy of the span of canonical (raw) parser input text corresponding to this annotation.
*   entityRelationship (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotationEntityRelationship.t), default: nil) - The relationship information from QRef. Only included if the QRefAnnotator is initialised with include_annotated_relationships.
*   mergedImpliedEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t), default: nil) - A list of any implied entities merged into this annotation during parsing. Order is derivation-dependent.
*   entitySourceData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingEntitySourceData.t, default: nil) - Holds information about the backends which contributed to this entity.
*   productLineId (type: list(String.t), default: nil) - The shopping product line id(s) of the annotated /business/shopping_product_line entity.




A DurationType configures a value whose type is a duration.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   rangeConstraint (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersRangeConstraint.t, default: nil) - Range constraint limits the set of durations accepted. The values of the range are in milliseconds. Currently, this constraint is only enforced in Loose Parser.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.


Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type. Date and google.protobuf.Timestamp.
*   hours (type: integer(), default: nil) - Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
*   minutes (type: integer(), default: nil) - Minutes of hour of day. Must be from 0 to 59.
*   nanos (type: integer(), default: nil) - Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
*   seconds (type: integer(), default: nil) - Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.


Contact edit timestamps and related metadata. See go/contact-edit-history. This message is a pure wrapper of the shared ContactCreactionContext message so that it can be a top-level person field. No other fields should be added to the message.




SignalData stores signal-specific salient-term-set-level information. Stores mostly internal data as it is one of the primary data structures used in the populators.
*   bias (type: number(), default: nil) - A fixed bias for this signal, the higher the stronger. This can be used to balance the weight of signals independently of the confidence we give it. This field is only available in debug mode.
*   confidence (type: number(), default: nil) - The measurement of how much we trust this signal. Range: [0.0, 1.0] This field is available is both debug and non-debug mode.
*   halfSalience (type: number(), default: nil) - Raw saliences equal to half_salience will be equal to 0.5 normalized. Range: [0, volume]. This field is only available in debug mode.
*   noiseCorrection (type: number(), default: nil) - The minimum TF for a term not to be considered noise. While the possible range of values for this field is [0, observed_volume], it is expected to be a somewhat small percentage of observed_volume (e.g. 5%). This field is only available in debug mode.
*   observedConfidence (type: number(), default: nil) - The measurement of how much we trust this signal, calculated using the observed volume. Range: [0.0, 1.0] This field is only available in debug mode.
*   observedVolume (type: number(), default: nil) - The amount of signal we observed for a document. Range: [0.0, +infinity) This field is only available in debug mode.
*   rawVolume (type: number(), default: nil) - The amount of raw signal we observed for a document. Range: [0.0, +infinity) This field is only available in debug mode.
*   source (type: String.t, default: nil) - source is the type of the signal of this SignalData.
*   volume (type: number(), default: nil) - The amount of signal left after applying all corrections. Range: [0.0, +infinity) This field is only available in debug mode.

Aqua annotation data for news provider. This proto is added as an extension to NimbleAnnotationData.semantics_proto for nimble annotation.

This empty type allows us to publish sensitive calendar events to go/attentional-entities, while maintaining BUILD visibility protection for their contents. The BUILD-visibility-protected extension to this message is defined at http://google3/assistant/verticals/calendar/proto/multi_account_calendar_event.proto

Image feature embedding proto. It supports various embedding formats: raw bytes, floating point values, and tokens.
*   bytesValue (type: String.t, default: nil) - Multiple fields can be set. For example for Starburst V3, they can be used to store compressed byte, raw float feature, and tokens, respectively.




These capabilities represent the camera features associated with the device.
*   hasCamera (type: boolean(), default: nil) - Whether the device has a camera.







Canonical representation of query sensitivites. See go/sensitive-intents for more details.
*   accountProvenance (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityQrewriteAccountProvenance.t), default: nil) - Used to annotate the provenace of cross-account personal data. See go/cross-account-understanding. Sensitivity could be annotated at query, intent, and argument levels. Query and intent could have data from multiple accounts, so this field is repeated. A sensitive knowledge_context.PreviousQuery might be dropped to prevent leaking cross-account data via Genie rewrite. For arguments, the best practice is to not blend multi-account data, and this field should be treated as singular to make ownership clear. When publishing attentional entities, contextual NLU might drop an argument that contains data from a different account for data protection. Mixing multi-account data in one argument will cause data from the primary account to be dropped altogether, which is an unnecessary quality loss.
*   instruction (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersSensitivityInstruction.t, default: nil) - Instruction of handling sensitive intent/argument data. Can be specified in Intent Catalog.
*   source (type: list(String.t), default: nil) - This should be systematically added without requiring the feature developers to add a source. This is for debug purpose as to whether the Sensitivity's trace/path included any of landmark code path helpful for tracing back the sensitivity sources. One should add a new source when one sees fits. It's chronological order as to which source is added first. One should not manually add a source. The same source can be repeated if the Sensitivity object went through the same code path twice.
*   type (type: String.t, default: nil) - Sensitivity type. See the enum definition below.




Provided data which augments the device action capabilities. Some built-in intents may require additional configuration to be provided. One example could be the list of channels available for the action.intent. SelectChannel intent.

Represents the string value of the enum field.
*   value (type: String.t, default: nil) - String value of the enum field. This must match defined set of enums in document schema using EnumTypeOptions.

Law have tree-like sturcture (title, section, etc), but the levels and their names are not fixed. e.g., we could have: US Constitution -> Article 3 -> Section 4, OR, US Code -> Title 12 -> Chapter 6 -> Sub-chapter I -> Section 602, OR, US Code -> Title 10 -> Sub-title A -> Part 2 -> Chapter 32 -> Section 523. We use a repeated group to represent this structure. NOTE: Always insert higher levels before lower levels,
*   Depth (type: integer(), default: nil) - A counter that specifies the depth of the level in the parse
*   Name (type: String.t, default: nil) - The name of the chapter/section/etc.


Matter unique Id. These values are provided by the device.

A region of interest in the image.


Basic interstitial info, shared by all layout types. This message can be used to quickly iterate through detected interstitials, if layout type specific details are not required. Note: this message stores info for one primary interstitial as detected by a particular layout codepath. Some codepaths, e.g. overlay interstitial detection, may find multiple interstitial candidates; such details can be found in codepath-specific messages below.
*   absoluteBox (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox.t, default: nil) - Stores the geometry of detected interstitial in absolute page pixels.


Protocol message for data related to product sites. This data is stored as signals data in docjoins.

How the object will be moved along the x, y, and z axes, respectively.

Used to describe the parking facilities provided by or available to a feature. Features of TYPE_ROAD or TYPE_COMPOUND can have a ParkingProto (with parking_provider_feature unset) that describes the parking facilities provided by that feature. Features of TYPE_COMPOUND or TYPE_ESTABLISHMENT_POI can have a ParkingProto (with parking_provider_feature set) to indicate that the feature has dedicated parking and provide details about it, and defer some details of the parking facilities to the referent feature(s). ParkingProto is maintained by the Harbor Pilot team (go/harbor-pilot). Detailed modeling information is described at go/parking-schema.
*   allowance (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingAllowanceProto.t), default: nil) - Describes the parking allowances for the feature, which are the situations and requirements under which one is permitted to park at the feature’s parking facilities, or discounts that a user may be eligible for.
*   openingHours (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreOpeningHoursProto.t, default: nil) - Hours in which the parking facility is open; that is, permits both arrivals and departures of the facility. Should only be set on compounds (i.e. parking lots or garages); roads are considered to always be “open,” though parking at certain times may be prohibited via restrictions. If unset on a compound, this suggests we don’t know the opening hours, or they are the same as the hours of the entity for which this feature offers parking facilities.
*   parkingAvailable (type: boolean(), default: nil) - Indicates whether long-term parking is available at the feature; if true, long-term parking is available at the feature and parking allowances may be present on this feature, or parking_provider_feature may indicate deferred parking feature(s). If false, this is an explicit statement that there is no long-term parking associated with this feature. If unset, we don't know whether there is long-term parking associated with this feature. If false or unset, only additional restrictions or short-term allowances will be populated.
*   parkingProviderFeature (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - If empty, indicates that the feature containing this ParkingProto provides parking facilities, which are described by this proto. If nonempty, indicates that the feature with this ParkingProto does not contain parking facilities itself, but visitors of this feature may use the parking available to the referent feature(s). The referent feature(s) may themselves contain parking facilities or defer to other features. A ParkingProto may defer parking details to another feature, but still include its own data. This suggests that a visitor of the referrer feature is eligible for different rates or discounts. The data in these fields applies transitively, and any fields in a referrer may be applied to the referent (for a visitor of the referrer).
*   restriction (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingRestrictionProto.t), default: nil) - Describes any parking restrictions that apply to this feature. Should only be set on road segments for which parking is explicitly prohibited for some or all times; for roads which do not prohibit parking and for all other facilities, the ability to park should be expressed using allowances. In the instance that both a restriction and an allowance applies at a given time, restrictions always have precedence over the same parking allowances. However, explicit short-term allowances (PICKUP_GOODS, PICKUP_PASSENGERS) take precedence over general NO_PARKING, NO_STANDING, or NO_STOPPING restrictions.


Metadata to track feature derivations and replacements. This is used to track feature provenance (particularly for road segments).
*   derivedFrom (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - This feature was created to replace other features that are referenced by this field.
*   replacedBy (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - This feature was replaced by other features that are referenced by this this field.




Url poisoning information. This information is sparse: if num_spam_siblings is not populated, none of the following fields will be populated. Next tag: 6
*   NotChangedTimeMs (type: String.t, default: nil) - fetched from the web. Time when the page was last
*   OriginalCrawlTimeMs (type: String.t, default: nil) - Time when the page was
*   ReuseTimeMs (type: String.t, default: nil) - checked but found to be the same as before. If set, timestamp to indicate
*   url (type: String.t, default: nil) - when it is fetched from the repository. URL of the document for debugging








Will be used by dialog_referent subgrammar to emit types annotations from DialogReferentsAnnotator and $DialogReferentOrdinal rules.
*   field (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsListSelection.t, default: nil) - The field mentioned in the user's utterance, if any.
*   index (type: integer(), default: nil) - Used for a grammar mention of an index.
*   next (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsDialogReferents.t, default: nil) - Represents a tied referent in a different field of the same label
*   selection (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsListSelection.t), default: nil) - The requested value(s) for selection from a list of alternatives.
*   taskMention (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsListSelection.t), default: nil) - Set when the user's utterance refers to the (an) overall task/goal of the dialog (e.g. "the meeting starts at 10 am" mentions the goal, "meeting"). The field is repeated in case the user ambiguously identifies a task (two tasks named 'meeting').

Structure to hold the number of active and total datapoints for a given dataset, as defined below. Last used: 2
*   numActiveDatapoints (type: String.t, default: nil) - The number of datapoints that are whitelisted by restricts specified for this query, across all shards for which the query executed successfully. In other words, this represents the number of datapoints that could potentially be returned if they were close enough to the query according to the selected distance measure. If restricts are disabled, this will be equal to num_total_datapoints.
*   numTotalDatapoints (type: String.t, default: nil) - The number of total datapoints in all shards of this dataset for which the query executed successfully. This is returned for convenience so that a ratio can be easily computed, and so that num_active_datapoints can be put in perspective for partially successful queries, i.e. queries where only some shards were successful.


The tenant project and tenant resources. Next ID: 10
*   cloudSqlInstances (type: list(GoogleApi.ContentWarehouse.V1.Model.CloudAiPlatformTenantresourceCloudSqlInstanceConfig.t), default: nil) - The CloudSQL instances that are provisioned under the tenant project.
*   gcsBuckets (type: list(GoogleApi.ContentWarehouse.V1.Model.CloudAiPlatformTenantresourceGcsBucketConfig.t), default: nil) - The GCS buckets that are provisioned under the tenant project.
*   iamPolicyBindings (type: list(GoogleApi.ContentWarehouse.V1.Model.CloudAiPlatformTenantresourceIamPolicyBinding.t), default: nil) - The dynamic IAM bindings that are granted under the tenant project. Note: this should only add new bindings to the project if they don't exist and the existing bindings won't be affected.
*   infraSpannerConfigs (type: list(GoogleApi.ContentWarehouse.V1.Model.CloudAiPlatformTenantresourceInfraSpannerConfig.t), default: nil) - The Infra Spanner databases that are provisioned under the tenant project. Note: this is an experimental feature.
*   tag (type: String.t, default: nil) - Input/Output [Required]. The tag that uniquely identifies a tenant project within a tenancy unit. Note: for the same tenant project tag, all tenant manager operations should be idempotent.
*   tenantProjectId (type: String.t, default: nil) - Output only. The tenant project ID that has been created.
*   tenantProjectNumber (type: String.t, default: nil) - Output only. The tenant project number that has been created.
*   tenantServiceAccounts (type: list(GoogleApi.ContentWarehouse.V1.Model.CloudAiPlatformTenantresourceTenantServiceAccountIdentity.t), default: nil) - The service account identities (or enabled API service's P4SA) that are expclicitly created under the tenant project (before JIT provisioning during enabled API services).

Used to store region-specific score ratio per entity. Next available tag: 4.
*   domain (type: String.t, default: nil) - The domain name of the website, e.g. "play.google.com".
*   region (type: String.t, default: nil) - The region in the III standard (http://go/iii). Eg. "US", "GB"
*   scoreRatio (type: number(), default: nil) - Score ratio for the entity, same as the EntityNameScore score ratio.

gcmSettings (type: GoogleApi. ContentWarehouse.V1.Model.AssistantApiSettingsGcmSettings.t, default: nil) - Stores GCM info associated with a device. See go/quartz-design-doc for more info.  deviceModelRevision (type: integer(), default: nil) - The Device Platform Service lookup revision. (go/device-model-revision) For 1p devices, and most 3p devices with no custom feature, this should be always 0, which means no lookup needed. For 3p devices with custom assistant feature, this is provided directly by OEM as incremental (e.g. 1, 2, 3, ...)  surfaceType (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceType.t, default: nil) - The type of assistant surface. Only use this field when device type is ASSISTANT.  autoFramingSettings (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsAutoFramingSettings.t, default: nil) - Auto framing settings associated with a device. See go/auto-framing-presentation.  homeGraphId (type: String.t, default: nil) - The home graph ID that can be used to lookup the corresponding entry in HomeGraph. go/home-graph. Note: when this field is empty, it doesn't necessarily mean that the device is not in home graph. It just means that Assistant doesn't know about the mapping.  hotwordThresholdAdjustmentFactor (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHotwordThresholdAdjustmentFactor.t, default: nil) - HotwordThresholdAdjustmentFactor contains threshold_adjustment_factor, and it's validity. TAF is a measure of adjustment applied to the hotword threshold as a result of go/autotune. Currently, this is updated from query_settings_frame, but if we move to updating it from the client, this could also contain TAFs as a result of Hotword Sensitivity, in addition to Autotune.  ancillaryDeviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsInternalAncillaryDeviceId.t, default: nil) - The additional device ids. Currently used only for ATV. go/project-yellowstone Note: This field is for internal (Within settings) use only.  linkedUsers (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsLinkedUser.t), default: nil) - Please do NOT use this field without prior approval from PWG. Users who have signed in onto this device, go/linked-users-in-pkg.  faceEnrollmentStatus (type: String.t, default: nil) - Indicates whether the user's face has been successfully enrolled on this device. See go/face-match-server-design for more info.  humanFriendlyName (type: String.t, default: nil) - The human-friendly name of the cast device, e.g., my living room tv. This field is set by the user and already localized.  lastCastRegistrationTimestamp (type: DateTime.t, default: nil) - Device's latest registration timestamp provided by Cast side. This field is not necessarily up to date. The update frequency is defined in last_registration_update_frequency_in_days field of AssistantConfig in java/com/google/chrome/dongle/common/proto/home_assistant_config.proto. go/cast-last-registration-time  colocationStatus (type: String.t, default: nil) - Status of colocation. go/co-location-work-v2 Note: this is a cache at the Assistant level. The source of truth is inside CastAuthenticationServer, which is only used for Home devices.  homeGraphData (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHomeGraphData.t, default: nil) - Holds the data that should be written to HomeGraph. Note: this field is not persisted in Assistant Settings storage. It is simply used for transporting data when client calls UpdateSettings.  deviceBrand (type: String.t, default: nil) - The brand of the device, populated from DeviceOemParams. Examples: "google", "samsung".  truncatedLocalNetworkId (type: String.t, default: nil) - Local network ID of the device (truncated to obfuscate devices and households globally). This is a temporary signal to determine proximity of Assistant devices in a house (HGS place).  capabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDeviceCapabilities.t, default: nil) - Describes roughly what a device is capable of doing and metadata around those capabilities. Note: this includes device limitations as well as user configurable settings.  timeZone (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimeZone.t, default: nil) - Device time zone. It's mainly used for a one-time notification for new users when they just bought and activated their devices. They may not have used Search or Assistant before, so their timezone info may not available elsewhere when we want to send a notification. This should be used as a fallback only when other timezone sources such as assistant_settings:user_attribute#inferred_user_timezone are not available. Also, when both |time_zone| and |location| are set, the |location| should be preferred to derive the most up to date timezone. This info directly comes from the device through early device setting recording mechanism. See more details at go/early-device-setting-recording.  deviceModelId (type: String.t, default: nil) - The model ID of the device. This should be globally unique across manufactures/OEMs. Examples: "nest_cam_iq_2017", "comcast_voice_box_2017".  defaultVideoDeviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The identification of the default device which user want to output video. Note that, we don't fallback to this for audio playback when default_audio_device_id is not set. See go/default-media-output-design for more info.  city (type: String.t, default: nil) - city and postal_code are sent to third party AoG Apps as location when permission is granted for precise or coarse location. https://developers.google.com/actions/reference/rest/Shared.Types/Permission city and postal_code have the same description as in Proto Postal Address: https://cs.corp.google.com/piper///depot/google3/location/country/postaladdress.proto city corresponds to locality_name, postal_code corresponds to postal_code_number. These two fields are set in assistant_settings_service by AddressConverter. https://cs.corp.google.com/piper///depot/google3/location/addressformatter/public/addressconverter.h See go/aog-i18n-address-parse for more information  verboseTtsForChromecastEnabled (type: boolean(), default: nil) - Indicates whether to play verbose tts for Elementary on chirp. See: go/opa-cast-a11y-impl-design fore more info on this project. Note: this should probably be in SpeechOutputSetting below.  politeMode (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsPoliteMode.t, default: nil) - Specify whether polite mode is enabled for this device. See go/pretty-please-dd.  locale (type: String.t, default: nil) - The locale for the device: language + region, i.e., en-US, ja-JP.  personalizationMetadata (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsPersonalizationMetadata.t, default: nil) - Metadata about how personalization settings were configured.  crossSurfaceAvailability (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceSettingsCrossSurfaceAvailability.t, default: nil) - Availability of this device for Assistant Cross-surface handoffs. (go/assistant-cross-surface)  notificationProfile (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsNotificationProfile.t, default: nil) - Information about how to send the user a notification. This won't be populated for fb-conv users (allo group chat users).  creationTimestampMs (type: String.t, default: nil) - The timestamp that the device is linked with the user in milliseconds.  deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The identification of the device.  ambientSettings (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsAmbientSettings.t, default: nil) - Ambient settings contains the configuration of Photo Frame on DG device. This field relies on IMAX service to do the update, sync happenes after user updates IMAX device settings or a device registers in CloudCastDevice. So it's more like a cached version instead of definitive source-of-truth. More details at go/ambient-setting-in-assistant-design.  shortenedAddress (type: String.t, default: nil) - A human-readable shortened address. This is usually the street address. Note: client does not need to populate this. It will be auto-populated based on "address" field on server side. Developers can use this field to avoid reading out the full address everytime.  locationFeature (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureProto.t, default: nil) - The feature proto of the location of the device. Note: client does not need to populate this. It will be auto-populated based on "address" field on server side. Currently, only "bound" and "type" are persisted, since the entire FeatureProto is too big.  oauthClientId (type: String.t, default: nil) - OAuth client id for the device. This field is available for Assistant SDK devices. It is written when the device is registered to the user (AssistantSettingsUiService.LinkAssistantDeviceUi). When user revokes grant on the Assistant device, Assistant Devices Platform Service will receive Pubsub notification with OAuth client id for the revoked device, and we will compare that with this stored id to identity device to remove.  speakerIdEnabled (type: boolean(), default: nil) - Indicates whether the user has enabled speaker-id for this device. See go/google-assistant-multi-user for more info on this project.  kidsMode (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsKidsMode.t, default: nil) - Specifies if kids-mode is enabled for the device. See go/aff-parentalsupervision-dd.  lastUsedCoarseTimestamp (type: DateTime.t, default: nil) - Coarsened hourly timestamp of when the device was last used.  optInStatus (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceLogsOptIn.t, default: nil) - Specifies if device logs and crashes can be captured during SendFeedback  isCloudSyncDevice (type: boolean(), default: nil) - Indicates whether the device is also managed through HA cloud sync. go/ha-dev-guide  address (type: String.t, default: nil) - A human-readable address string for the location; generally a one-line address such as "34 Masonic Ave, San Francisco CA 94117, United States". Set this field to empty string for deletion, in which case the rest of the location related fields below will be cleared as well.  faceMatchEnabled (type: boolean(), default: nil) - Indicates whether the user has enabled Face Match for this device. See go/face-match-server-design for more info on this project.  type (type: String.t, default: nil) - The type of the device. Note: this should only be used for grouping devices for UI presentation purpose. Use |capabilities| to decide what the device can do.  faceEnrollmentErrors (type: list(String.t), default: nil) - List of errors that happened during the face enrollment process if it failed. See go/face-match-enrollment-error for more info.  hospitalityModeStatus (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHospitalityMode.t, default: nil) - Indicates whether the device is currently in Hospitality mode. go/hospitality-mode-design. This is moved to a per user setting in assistant settings. ref. go/hospitality-settings-v2  isDeviceActivationCacheEnabled (type: boolean(), default: nil) - When true, the user has explicitly allowed audio and visual data collection on this device  internalVersion (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsInternalVersion.t, default: nil) - Internal version of the DeviceSettings for measurement of the DeviceSettings mutation race conditions. See go/consistent-assistant-settings-update.  voiceEnrollmentStatus (type: String.t, default: nil) - Indicates whether the user's voice has been successfully enrolled on this device.  voiceInputEnabled (type: boolean(), default: nil) - A boolean indicates whether voice input (mic-button, hotword, etc) is enabled.  dusi (type: String.t, default: nil) - Only valid for ATV. Stores the android DUSI for the corresponding user. More details: go/auto-logout-on-unlink.  paymentsEnabled (type: boolean(), default: nil) - DEPRECATED: Use DeviceCapabilities.OutputRestrictions.personal_data instead. Whether the user has enabled payments for this device.  marketplaceDisclosure (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsMarketplaceDisclosure.t, default: nil) - See go/marketplace-disclosure for more info.  vmLastUsedCoarseTimestamp (type: DateTime.t, default: nil) - Coarsened hourly timestamp of when the user was last verified by VoiceMatch on this device. This is used for enforcing VoiceMatch model TTL. go/voicematch-pdd-ttl  defaultAudioDeviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The identification of the default device which user want to output audio. See go/default-media-output-design for more info.  supervisionSettings (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceSupervisionSettings.t, default: nil) - Restrictions on how and when certain users can use a device. See go/home-ft-prd.  blueSteelEnabled (type: boolean(), default: nil) - Indicates whether the user has enabled Blue Steel. See go/blue-steel for more info on this project.  aliasName (type: list(String.t), default: nil) - The alias names of the device, e.g. my living room tv, tv, living room and etc., which user will usually use to refer to the device in addition to human_friendly_name. It can help speech biasing and query understanding. This field is set by the user and already localized.  allowIncomingCalls (type: boolean(), default: nil) - Whether this device is allowed to receive incoming calls.  linkedDeviceId (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t), default: nil) - Stores pairing between different devices. See go/quartz-design-doc for more info.




Parsing-related signals. Only horizontal signals should appear directly as fields on this message. Each domain should create their own extension for anything that they need to propagate down stream from AQUA. Note that this proto is not the same as the Superroot proto ParsingSignals (http://google3/knowledge/proto/scoring-signals.proto), which is a Superroot-specific signal used in Scoring. Next ID: 7
*   calibratedParsingScore (type: float(), default: nil) - A parsing score that is independently calibrated by each parser/IG, used by pre-fulfillment ranker, see http://go/prefulfillment-ranker.
*   effectiveArgSpanLength (type: number(), default: nil) - The total effective length of the spans for the arguments used to construct the parse. May include vertical specific adjustments. Eg: For the query [delete my 7 p.m. alarm called chicken] and intent Delete_alarm(alarm_object=RD(category=AlarmObject( label="chicken", trigger_time_datetime=<< 7 PM >>))), the effective argument span is "7 p.m." + "chicken" (total length of 13).
*   inQueryMaxEffectiveArgSpanLength (type: number(), default: nil) - This is a cross-intent feature which is calculated by iterating all intent candidates. This feature should be populated in post-IG stage (before GB).
*   qrewriteCallPathInfoFingerprint (type: String.t, default: nil) - This proto holds the fingerprint of the call path info of QRewrite client (e.g. the QUS's phase like "RBT","QBT"; the QUS's candidate type like "Identity"; and the ACE's candidate type like "FuzzyMatcher").
*   source (type: String.t, default: nil) - The parser that calibrated the parsing score below.





a message containing information about the source of this triple. Note for freebase data: that this is an unpacking of the creator/attribution chain. The creator below is the actual creator of the attribution node, and the rest of the attribution data sits along side. Next id: 22
*   accessRequired (type: String.t, default: nil) - Data providers shall use this to specify access requirement.
*   accessRequiredInt (type: integer(), default: nil) - For KE internal use only. Data providers shall not set this. At ingress, LG Record service will read access_required and properly translate it to access_required_int. KE horizontal systems shall use this field instead of access_required; so that binaries would not depend on the release of a newly introduced AccessRequirement enum. (go/easy-ar-onboarding)
*   creator (type: String.t, default: nil) - Freebase: the freebase user id in the form '/user/userid' KG: the Google LDAP of the developer or MDB group that set up the triplification and import pipeline for this data source.
*   dataset (type: String.t, default: nil) - Freebase & KG: the dataset the assertion was loaded from
*   freebaseAttribution (type: String.t, default: nil) - Below are deprecated Provenance fields. They are not indexed or served in KE infrastructure (they are stripped at ingress in Livegraph).
*   isSupportingData (type: boolean(), default: nil) - Indicates that the corresponding data is supporting evidence for reconciliation only, and is not an assertion that should be visible to other systems or to external users. Note that this also means that no provenances indicating supporting data will be visible in the composed graph. Please see go/supporting-kg-triples-design-doc for additional details and background. If a triple is sent to Livegraph with multiple provenances each of them must have is_supporting_data bit set for it to be considered valid supporting evidence triple.
*   lgMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLivegraphProvenanceMetadata.t, default: nil) - Internal metadata used by Livegraph and possibly other horizontal KG infra systems. This is not part of the logical triple or its provenance, and contents may not be visible downstream of LG.
*   policyMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPolicyMetadata.t, default: nil) - Metadata specifying data governance policies. This information will be processed and enforced in KE systems. For more context, see go/ke-triple-dg-policy-and-metadata. WARNING: This field is WIP and please do not populate it without consulting ke-data-governance@.
*   process (type: String.t, default: nil) - Used to uniquely identify data sources. Freebase: the OAuth application KG: the name of the source directory the triple was loaded from (eg, "amg", "tms ", "collections"). KV: identifier of an extraction system, e.g., SAFT or Tractzor.
*   rankingToken (type: String.t, default: nil) - 'rankingtoken' (which must be accompanied by the 'process' field above or will be ignored) is used to distinguish subsets of data within a single process, solely for the purposes of composition in Livegraph. This field is useful when partitioning of data is needed, but using a separate process is intractable due to organizational or infrastructure limitations. For example, if a process such as "geo" wishes to distinguish some of their /type/object/name triples as higher priority in Composer's conflict resolution rules, then they can add a config entry with a dedicated ranking_token and tag the relevant triples with that ranking_token. This field should only be used in conjunction with a Composer-side configuration to use it for value selection. It is not appropriate to use this field as free-form metadata. This value must match [[:alnum:]][[:alnum:]-]{0,127} (i.e., [a-zA-Z0-9]+[a-zA-Z0-9_-]* and must be less than 128 characters in length) , or else its containing triple will be considered malformed and will be rejected by Livegraph at ingress. As of 2018-02-14, this field is used within Livegraph's Composer and is exposed in Livegraph's Lookup APIs to aid debugging, but it is not indexed or served by TopicServer.
*   requiresTriangulation (type: boolean(), default: nil) - When specified as part of triples input to Livegraph (go/livegraph), this indicates that the triple needs to be triangulated by 3 different sources before it can be served in production. A triple's source is identified by its URL(provenance.source).host(). Please see go/baike-triangulation for more background on this. WARNING: If you're a new client trying to enable triangulation for your feed, please contact lg-composition@/kashk@ before using this feature.
*   source (type: String.t, default: nil) - Freebase & KG: if the triples were extracted from the web, the source URL where the assertion was found. (generally empty in freebase-sourced triples) TopicServer will serve/populate/retain if REQUIRES_CITATION is also set, or if the process is explicitly allowed. http://g/topic-server/vn9PBWtVKqI/arQEDqKTAgAJ

A Principal represents something to which permissions are assigned, often but not always a user or group of some kind. It is most appropriate for use in ACLs and authorization checks. Callers should prefer to use the wrapper classes in google3/security/credentials/public/principal.h google3/java/com/google/security/credentials/Principal.java google3/security/credentials/go/principal.go unless direct proto access is essential. If you update this protocol buffer, please update the wrapper classes as well. LINT. IfChange
*   scope (type: String.t, default: nil) - This is only optional because required enums cannot be extended. Currently required.

XtagList -- a collection of Xtag instances with unique names. This would be associated with one specific piece of content.

Desktop interstitials signal. The message contains both fields for site-level signal lookup in Index Signals (go/index-signals) and fields for final attachment in DocJoin.
*   pipelineEpoch (type: String.t, default: nil) - Epoch of the interstitial offline pipeline generating this signal.
*   pipelinePattern (type: String.t, default: nil) - If present, pipeline_pattern identifies the cluster of URLs for which the signal value was smeared.
*   urlTree (type: GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTree.t, default: nil) - URL tree of interstitial patterns belong to the host, to be used as site-level signal in Index Signals. A pattern may contain a payload InterstitialPatternPayload, which will indicate the violated interstitial types of this pattern.
*   violatesDesktopInterstitialPolicy (type: boolean(), default: nil) - Overall policy violation status. If this is true, at least one of the InterstitialSignal below indicates a violation.

If we have merged text from another goodoc into this one (for example, from a PDF text layer goodoc into an OCR'd goodoc), we record some source goodoc info here.

Capabilities that may only be set internally. Only internal callers (i.e. Googlers or Google owned projects) will be able to set these, thanks to go/assistant-device-model-package-ownership.
*   allowedAssistantSdkAuthProjectIds (type: list(String.t), default: nil) - When using the Assistant SDK (Embedded Assistant API), the project id used to authenticate the gRPC request is checked and must match against the project id of the Device Model. We will additionally allow the project ids listed in the device model here to be let through. See https://docs.google.com/document/d/1InAczpQJs6LCH1l--2yy67JM9hsBJbiL57fusnL3A8A
*   appCapabilitiesFromDeviceInstallApps (type: boolean(), default: nil) - Load the assistant.api.AppCapabilities from DEVICE_INSTALLED_APP footprint corpus. See go/edoras-geller.
*   cloudDeviceActionEndpoint (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudEndpoint.t, default: nil) - Uses this endpoint for device action fulfillment when there's no endpoint in syndication_metadata. 1p surfaces/devices such as telephone can enable this for its cloud action fulfillment without enabling the whole syndication experience.
*   deviceActionsEligibleForHighConfidence (type: boolean(), default: nil) - Signals that the model will have updated ranking behavior as described in https://docs.google.com/document/d/1SN_AgadRr_cdIrFe-qgRbIX2J1sOE7lcRXAvM1GUPoU.
*   forceSignIn (type: boolean(), default: nil) - Make Google sign-in mandatory for using Google Assistant on the device. (This bit is initially added for Samsung TV.)
*   forceThirdPartyDeviceIdForDeviceLookup (type: boolean(), default: nil) - When looking up device (for example for disclosure consent check), then always use the third party device id for lookup instead of any other device id which would normally have higher precedence, such as cast_device_id.
*   forceTransactionsAuthentication (type: boolean(), default: nil) - Adds "transactions.AUTHENTICATION" for car automation probers. Since the probers run as Assistant SDK requests, voice match always fails for car automation requests, so we add this client op as a hack to allow probers to appear as personal devices and bypass voice match. See b/137221645.
*   hasCustomSearchResultsRendering (type: boolean(), default: nil) - Signals that this device can "render" raw search results even with no screen (e.g., using a text reader). If this is true, fallback search results can be returned as a custom device action in a SearchResults message. http://google3/assistant/embedded/proto_translation/utils/proto/search_results.proto
*   overrideProjectIdForDeviceLookup (type: String.t, default: nil) - When looking up device (for example for disclosure consent check), use this project id as part of the primary key for the device lookup (i.e. instead of the device_config.agent_id.) The precedence is as follows: 1) this field, if set for the device's device model 2) device_config.agent_id 3) device_model.project_id
*   telephoneAttribution (type: boolean(), default: nil) - Telephone server is able to send attribution to user feature phone. See go/telephone-attribution.


Instructions (eg., logging, disambiguation, ads serving) of handling a sensitive intent and its data. LINT. IfChange NextId: 8
*   legacyAssistantSensitivity (type: GoogleApi.ContentWarehouse.V1.Model.SearchPolicyRankableSensitivity.t, default: nil) - This field is for backward compatibility.
*   multiAccountAllowed (type: boolean(), default: nil) - Controls whether a top-level intent is multi-account approved. NLU will do go/cross-account-understanding only for intents with this bit on. Also, this bit should be propagated to user turn Attentionl Entities to extend protection of cross-account data to next turns. In principle fulfillment services (e.g., Monastery) should only dispatch such intents to multi-account approved fulfillers (schemas), at least when the user has a linked dasher account. The Assistant runtime policy engine should treat a query as dasher data if 1) this bit is true in the string redaction, and 2) the user has a linked dasher account, and apply a more restrictive rule for whitelisting, regardless of the actual account provenance in Sensitivity. Example: [User logged in to their personal gmail account.] Q1: "Schedule a meeting tiltled okr review at 3pm". Assistant: "Should I scheduled it on your xyz@gmail.com account?" Q2: "No, add it to my xyz@bigcorp.com account." We don't know Q1 is dasher data until Q2. To prevent leaking of Q1 to non-dasher approved binaries, this bit should be used as a proactive measure. It might introduce some over-triggering (e.g., user says "Yes" in Q2), but is much better than blindly treating every query as dasher, not considering whether it actually triggers any multi-account capable intents or not (see b/164420114 for example).


A unique association of an AliasType and a number to identify this alias.
*   subId (type: String.t, default: nil) - A unique identifier for this alias, this identifier is unique to the type of this Alias. This means that aliases of different types can have the same sub_id, hence always use the full AliasId message to refer to an alias, not this field only. Because HOME and WORK aliases are unique, aliases of type HOME or WORK always have sub_id 0.

A Geometry Store ID and, in some contexts, geometry materialized from the record associated with that ID.
*   footprint (type: String.t, default: nil) - Geometry (in STGeography format) materialized from the footprint field of the Geometry Store record associated with the geometry_id referenced above.
*   geometry (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProto.t, default: nil) - Geometry materialized from the full_fidelity_proto field of the Geometry Store record associated with the geometry_id referenced above.
*   geometryId (type: String.t, default: nil) - The ID of a record in the Geometry Store.

Quality related features used in snippets scoring. Next ID: 10

This SEI message only takes the payload type and the sum of the payload sizes for all SEI messages of this type. More informations, such as timestamp, payload, may be added in the future.
*   cumulativeSize (type: String.t, default: nil) - If the video stream has multiple SEI messages with the same payload type, this is the sum of all these payloads' sizes.
*   payloadtype (type: integer(), default: nil) - use int type in case there are payload types that are not included in the SEIPayloadType enum below. The enum can be used for lookup





Entity annotations for one of the mids representing an anchor label or a query text.
*   category (type: String.t, default: nil) - The Webref category that this entity belongs to e.g. "/moka/software".
*   confidence (type: number(), default: nil) - The overall confidence that this entity is annotated somewhere in the label.
*   isRestricted (type: boolean(), default: nil) - Whether or not this entity belongs to a set of blocklisted categories.


Metadata to encode query-specific information. This may include NeighborSelectionOverride, pre-computed query tokenization, etc..

Specifies a period of up to 24 hours when downtime should be enabled, starting at certain time on a certain day of the week, and ending at a later time on either that day or the following day.
*   enabled (type: boolean(), default: nil) - True if downtime should be enabled during this period.
*   endTime (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t, default: nil) - Time of day that this downtime period should end. Required. If end_time > start_time, end_time is relative to start_day. Otherwise, end_time is relative to the day after start_day. For example, start_day: MONDAY, start_time: 9 p.m., end_time: 6 a.m. means that the downtime period starts at 9 p.m. on Monday and ends at 6 a.m. on Tuesday.
*   startDay (type: String.t, default: nil) - The day of the week when this downtime period starts. Required.
*   startTime (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t, default: nil) - Time of day that this downtime period should start. Required.


Represents the data for a given source of names, including all entity scores. Notice that a source of name can be just a signal like a multiplier. Next available tag: 8.
*   entityScore (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityNameScore.t), default: nil) - All the entity-name scores from that source. Keyed by the EntityNameScore.entity_id field.
*   type (type: String.t, default: nil) - Describes where the data comes from.




Images inferred from context instead of propagated from Shopping backends. The same image might be inferred via different means; then it may appear multiple times in Offer.inferred_images list with different values of inferred_image_type field.
*   neardupInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationInferredImageNeardupInfo.t), default: nil) - This field will only be populated if the inferred image is a neardup of an inferred image. It stores the type and source of the images it is a neardup of.

Emergency information for Person field, such as Phone or Email. See go/emergency-trusted-contacts-papi.

A triggered rule that failed the validation check(s) after parsing.




A PropertyValue associates properties with values in the context of a topic.
*   property (type: GoogleApi.ContentWarehouse.V1.Model.FreebaseId.t, default: nil) - The id of the property.
*   totalValueCount (type: String.t, default: nil) - Indicates the total values that exist for this property, even if they aren't all present in the value field, due to truncation.
*   value (type: list(GoogleApi.ContentWarehouse.V1.Model.FreebaseValue.t), default: nil) - The value associated with the property for the containing topic.
*   valueStatus (type: String.t, default: nil) - If ValueStatus is not set at all, the implication is that there are well-known value(s), specified in the "value" field. (It should be considered malformed data to have value_status set when len(values) > 0.)

Settings that control how a SIBS decoration overlay is displayed.
*   overlay (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPhotoOverlay.t, default: nil) - Settings that describe how the decoration should be overlaid on the photo.
*   sibsId (type: String.t, default: nil) - SIBS ID of the decoration that is overlaid on the photo.




HDR Metadata describes in what way an image expresses high dynamic range information (e.g. using a gainmap or a specialized color space).
*   gainmap (type: GoogleApi.ContentWarehouse.V1.Model.PhotosHdrMetadataGainmap.t, default: nil) - Indicates the presence of some kind of gainmap-utilizing format.





External identifier. An external identifier is a persistent identifier for an object within a domain.

The subset of FlowProto that we want to go into production AND be stored in ContentSignals.
*   starburst (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageContentStarburstVersionGroup.t), default: nil) - Repeated so that multiple versions can exist in prod simultaneously.


This message captures a border status override. For instance, if the TYPE_BORDER feature between China and Hong Kong must be hidden on ditu.google.cn (the Chinese domain for Google Maps) but may be displayed on other domains, we will have a country override border status for "CN" set to STATUS_NEVER_DISPLAY. At least one override restriction must be defined. Currently the only supported restriction is by country code.
*   countryCode (type: String.t, default: nil) - The two-letter ISO 3166-1 country code corresponding to the domain this status override applies to, when rendering the border polyline.
*   status (type: String.t, default: nil) - The override status, from the BorderStatus enumeration. The value here must be different from the main status (otherwise there's no point in providing the override).


TODO(yanghu) add 25/50/75 percentiles of FPS to have a 5 number summary. Next id: 48
*   length (type: float(), default: nil) - video length in seconds Note that when the VSI is from users videos, it is not guaranteed to be the same as transcode lengths and it could be 0 when the full VSI cannot compute the length from the source header and timestamps (for example when header and timestamps are too broken).
*   maxFps (type: float(), default: nil) - Maximum instantaneous frame rate seen from analyzing the entire stream.
*   averageFps (type: float(), default: nil) - This represents the canonical frame rate of the video. This is named average_fps for historical reasons, and may not actually be the arithmetic mean. For variable frame rate videos, the algorithm may change again in future. Currently, full vsi set it with arithmetic mean, and partial vsi set it with median.
*   numberOfInvisibleFrames (type: integer(), default: nil) - Invisible frame count Keep a count of frames that are not displayed should the full frame count be needed for the video stream. The only codec currently reporting this value is VP8 with alternate reference frames enabled
*   isInsaneSize (type: boolean(), default: nil) - Check if a video size insane or not. It is set if the input file is an MOV file.
*   decodeOffset (type: String.t, default: nil) - The bytes offset of the end of the first decodable packet.
*   fps (type: float(), default: nil) - video frame per second, obtained by parsing video header information. It could be inaccurate for some types of codecs, notably, WMV, ASF, and FLV. It will be inaccurate for videos that does not have constant frame rate since it is the smallest framerate that can accurately represent all timestamps (see ffmpeg doc for AVStream.r_frame_rate). Also frame rate can be parsed from headers and can be wrong if it is not available there since ffmpeg uses a heuristic for determining it.
*   seiMessage (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoSEIMessage.t), default: nil) - video SEI payload types and total payload size of a type this is only for H.264 and H.265
*   gopSize (type: GoogleApi.ContentWarehouse.V1.Model.VideoVideoStreamInfoVideoStreamStatistics.t, default: nil) - Statistics about gop sizes of the video.
*   displayWidth (type: integer(), default: nil) - final display video width and height if explicitly set in the video otherwise this can be calculated from source width/height and video_pixel_aspect_ratio
*   clockDiscontinuityUs (type: String.t, default: nil) - some container allows for a clock discontinuity. In this case, the end_timestamp may not be the correct DTS of the stream.
*   minFps (type: float(), default: nil) - Minimum instantaneous frame rate seen from analyzing the entire stream.
*   bitstreamColorInfo (type: GoogleApi.ContentWarehouse.V1.Model.VideoFileColorInfo.t, default: nil) - Contains the color information obtained after inspection of the bitstream in cases where there may be inconsistencies between container and coded bitstream that are resolved in favor of the container.
*   streamIndex (type: String.t, default: nil) - Index of the stream in the file. it is 0 based.
*   closedGopSize (type: GoogleApi.ContentWarehouse.V1.Model.VideoVideoStreamInfoVideoStreamStatistics.t, default: nil) - closed_gop_size refers to chunkable boundaries for each specified codec and may actually contain one or more GOPs, e.g. for H.264, closed_gop_size will denote the distance (frame count) between two IDR frames.
*   flip (type: String.t, default: nil) - Should the video be mirrored horizontally / vertically? When rotation and flip both are present for a video, it is assumed that the flip is applied first, and then the rotation.





The iOS app information of the provider. Next ID: 4
*   bundleIdentifier (type: String.t, default: nil) - Bundle identifier that identifies an iOS app of the provider.




Used to store the label before label cleaning or other transformations. If the label goes through multiple transformations, the original_label vector will include the transformations in chronological order.
*   sourceLabel (type: String.t, default: nil) - The label that was transformated from.

Encapsulates all the features which, together, define the geometry of a feature. This happens by: 1. taking the union of all polygons of features referenced in includes_geometry_of 2. subtracting the polygons of all the features referenced in excludes_geometry_of
*   excludesGeometryOf (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Features whose geometry to exclude while composing the geometry of this feature.
*   includesGeometryOf (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Features whose geometry to include while composing the geometry of this feature.




Information about various hashes that can be computed on a message ex: simhash, attachment hash, etc

Represents the action responsible for publishing messages to a Pub/Sub topic.
*   topicId (type: String.t, default: nil) - The topic id in the Pub/Sub service for which messages will be published to.










Keep feature values which are useful to filter titles, labels.
*   foregroundGray (type: number(), default: nil) - Color information, normalized to [0-1]. This color information is extracted from the largest word in the line entities of PageLayout message. See goodoc::PageLayoutEntity::Colors for details.
*   handwrittenTextRatio (type: number(), default: nil) - # of LINE entities that are recognized as handwritten texts over # of merged LINE entities.
*   averageFontsize (type: number(), default: nil) - Font size or weight information. This is extracted from internal message, so may not be available in future.
*   isCountingNumberOoo (type: boolean(), default: nil) - Whether or not the counting number in this anchor's label is out-of-order. If no counting number is detected, this will be empty.
*   occurrenceCount (type: number(), default: nil) - The number of OCR texts that have the same text among temporally-merged OCR texts.
*   countingNumberPrefix (type: String.t, default: nil) - Prefix for counting number in this anchor's label. If no counting number is detected, this will be empty.
*   ocrAsrFeature (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrAsrFeature.t, default: nil) - Features for the overlap between OCR and ASR.
*   countingNumberSuffix (type: String.t, default: nil) - Suffix for counting number in this anchor's label. If no counting number is detected, this will be empty.
*   centerHorizontalPositionRatio (type: number(), default: nil) - Horizontal position of the center of this text, by ratio [0.0, 1.0].
*   averageAngle (type: number(), default: nil) - The average of rotation angles (degree) of texts.
*   boxWidthRatio (type: number(), default: nil) - Box width and height ratio, against to the frame size, so the value range is [0, 1]. If this text feature consists of multiple text boxes, the box width / height is a union of each text box.
*   medianClusteringDistance (type: number(), default: nil) - The median distance between this anchor and other anchors in the cluster. The way the distance is calculated will vary depending on the clustering method.
*   languages (type: list(GoogleApi.ContentWarehouse.V1.Model.GoodocLanguageCombinationLanguage.t), default: nil) - Languages predicted by OCR. "repeated" is employed for this field because LINE entities of PageLayout message are sometimes annotated with multiple languages, and also two VideoAnchor that are annotated with different languages can be merged into one VideoAnchor. When two VideoAnchor are merged into one, the weight field values of the new VideoAnchor will be the average of weight field values weighted by merged_line_count.
*   topPositionRatio (type: number(), default: nil) - Note that top-left position is (0, 0) for position values. Top position of this text, by ratio [0, 1].
*   hadUrlInLabel (type: boolean(), default: nil) - Whether or not this anchor had URL in its label before the label fixing step.
*   leftPositionRatio (type: number(), default: nil) - Left position of this text, by ratio [0, 1].
*   occurrenceRatio (type: number(), default: nil) - occurrence_count over the number of anchors merged to this anchor.
*   topOcrLanguage (type: String.t, default: nil) - OCR language that has the highest weight.
*   mergedLineCount (type: integer(), default: nil) - The number of LINE entities used for this text.
*   originalLabel (type: String.t, default: nil) - The label this VideoAnchor originally had before label clearning steps.
*   nTextsInSameFrame (type: integer(), default: nil) - # of OCR texts that appear in the same frame. If duration of this OCR text is not zero, the maximum number among multiple frames where this OCR text appears is set to this field.
*   relativeShotTimeMsPriorToStartTime (type: integer(), default: nil) - Shot boundary time nearest to OnScreenText's start and end time. The time is relative to each OnScreenText's start / end time (ex. -1 means shot time exists prior to the start / end time). If shot time and start/end time is the same, 0 is set in 'prior' field. If no shot info is available, the below fields are not set.
*   centerVerticalPositionRatio (type: number(), default: nil) - Vertical position of the center of this text, by ratio [0.0, 1.0].
*   countingNumberOooRatio (type: number(), default: nil) - # of numbered anchors that are not out-of-order / # of all the numbered anchors. If no counting number is detected, this will be empty.

Statistics of the anchors in a docjoin. Next available tag ID: 63.
*   topPrOnsiteAnchorCount (type: integer(), default: nil) - According to anchor quality bucket, anchor with pagrank > 51000 is the best anchor. anchors with pagerank < 47000 are all same.
*   skippedOrReusedReason (type: String.t, default: nil) - Reason to skip accumulate, when skipped, or Reason for reprocessing when not skipped.
*   droppedRedundantAnchorCount (type: integer(), default: nil) - Sum of anchors_dropped in the repeated group RedundantAnchorInfo, but can go higher if the latter reaches the cap of kMaxRecordsToKeep. (indexing/docjoiner/anchors/anchor-loader.cc), currently 10,000
*   totalDomainsSeen (type: integer(), default: nil) - Number of domains seen in total.
*   minHostHomePageLocalOutdegree (type: integer(), default: nil) - Minimum local outdegree of all anchor sources that are host home pages as well as on the same host as the current target URL.
*   minDomainHomePageLocalOutdegree (type: integer(), default: nil) - Minimum local outdegree of all anchor sources that are domain home pages as well as on the same domain as the current target URL.
*   anchorsWithDedupedImprovanchors (type: integer(), default: nil) - The number of anchors for which some ImprovAnchors phrases have been removed due to duplication within source org.
*   totalDomainPhrasePairsAboveLimit (type: integer(), default: nil) - The following should be equal to the size of the following repeated group, except that it can go higher than 10,000.
*   scannedAnchorCount (type: integer(), default: nil) - The total number of anchors being scanned from storage.
*   phraseAnchorSpamInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorPhraseSpamInfo.t, default: nil) - Following signals identify spike of spammy anchor phrases. Anchors created during the spike are tagged with LINK_SPAM_PHRASE_SPIKE.
*   redundantAnchorForPhraseCapCount (type: integer(), default: nil) - Total anchor dropped due to exceed per domain phrase cap. Equals to sum of anchors_dropped in the repeated group RedundantAnchorInfoForPhraseCap, but can go higher if the latter reaches the cap of kMaxDomainsToKeepForPhraseCap (indexing/docjoiner/anchors/anchor-loader.h), currently 1000.
*   globalAnchorDelta (type: integer(), default: nil) - Metric of number of changed global anchors computed as, size(union(previous, new) - intersection(previous, new)).
*   timestamp (type: integer(), default: nil) - Walltime of when anchors were accumulated last.
*   badbacklinksPenalized (type: boolean(), default: nil) - Whether this doc is penalized by BadBackLinks, in which case we should not use improvanchor score in mustang ascorer.
*   penguinEarlyAnchorProtected (type: boolean(), default: nil) - Doc is protected by goodness of early anchors.
*   anchorPhraseCount (type: integer(), default: nil) - The number of unique anchor phrases. Capped by the constant kMaxAnchorPhraseCountInStats (=5000) defined in indexing/docjoiner/anchors/anchor-manager.cc.
*   penguinTooManySources (type: boolean(), default: nil) - Doc not scored because it has too many anchor sources. END: Penguin related fields.
*   skippedAccumulate (type: integer(), default: nil) - A count of the number of times anchor accumulation has been skipped for this document. Note: Only used when canonical.
*   anchorSpamInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorSpamInfo.t, default: nil) - This structure contains signals and penalties of AnchorSpamPenalizer. It replaces phrase_anchor_spam_info above, that is deprecated.
*   totalDomainPhrasePairsSeenApprox (type: integer(), default: nil) - Number of domain/phrase pairs in total -- i.e. how many anchors we would have if the domain/phrase cutoff was set to 1 instead of 200. This is "approx" for large anchor clusters because there can be double counting when the LRU cache forgets about rare domain/phrase pairs.
*   penguinLastUpdate (type: integer(), default: nil) - BEGIN: Penguin related fields. Timestamp when penguin scores were last updated. Measured in days since Jan. 1st 1995.
*   spamLog10Odds (type: number(), default: nil) - The log base 10 odds that this set of anchors exhibits spammy behavior. Computed in the AnchorLocalizer.
*   totalDomainsAbovePhraseCap (type: integer(), default: nil) - Number of domains above per domain phrase cap. We see too many phrases in the domains.

Used to annotate the source of cross-account personal data. See go/cross-account-understanding.
*   thirdPartyAccount (type: GoogleApi.ContentWarehouse.V1.Model.QualityQrewriteAccountProvenanceThirdPartyAccount.t, default: nil) - Note google_account and third_party_account could both exist. For example, a user could share her Spotify account with other users registered on the same device.

Logs version of the repository_webref. WebrefEntityRelationship proto Used to represent QRef implications

The ArgumentValue reference to Mention. CompoundMention.Component. Next available tag number: 4
*   debugEntity (type: String.t, default: nil) - Optionally the freebase_mid of the WebrefEntity which the Component identifies via entity_index. This is purely to help humans diagnose the WebrefEntities structure, may not always be present and should not be used by production code. Use QueryJoinToMeaningStructConverter to compose a proper value in place of the component reference.
*   funcallName (type: String.t, default: nil) - The WebrefEntity referenced by index is equivalent to this function call in this context, but not universally such that we don't want to recursively expand its MRF. Use this for example if an entity corresponds to a category in an Intersect: CellPhones() & RelatedTo(/m/foo), where /m/cell_phones is equivalent to CellPhones() (and may or may not have an annotated span), but we don't want to generally assert that /m/cell_phones == CellPhones(). This cannot be an actual FunctionCall to avoid a circular dependency.
*   index (type: integer(), default: nil) - The index of the Component of the CompoundMention which has the mrf_index of this MRF expression in WebrefEntity. Required.

This is a Google+-only field (and thus does not exist for consumer users). See go/fbs-g+-deprecation.


A description of the dates when an alarm should recur.
*   dayOfWeek (type: list(String.t), default: nil) - Specifies a weekly or daily recurrence. Constraint: The date falls on one of these days of the week, in 0...6 (Sunday...Saturday). Should not be empty.

Media stream is composed of a media session and one or more devices which are hosting (playing) the session. Usually, a session is only hosted by one devcie. However, with cast group or stream transfer/expansion, a session could be hosted by multiple devices, which are playing the same session simultaneously.
*   deviceIndex (type: list(integer()), default: nil) - The device index in this message is consistent with the device index in DeviceInfoLog. This field refers to the devices that hosting the session.

A product for sale from a particular merchant, possibly available at a specific store.
*   docid (type: String.t, default: nil) - The offer document id as used in Shopping's metadata.
*   price (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t, default: nil) - The price of the product sold by the merchant.
*   store (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantStore.t, default: nil) - Optional. The physical store where the product can be purchased.

Anchor-level metadata about the description anchors used as list items to build training data for list anchors.
*   descriptionAnchorTimeMs (type: integer(), default: nil) - The timestamp of when the description anchor is annotated to appear in the video in ms.
*   descriptionAnchorTimeToMatchedTimeMs (type: String.t, default: nil) - The time gap of when the description anchor is annotated to appear in the video (description_anchor_time_ms) from when it's matched in the ASR as the list anchor.
*   editDistance (type: integer(), default: nil) - Closest edit distance between the anchor generated by description span and the description anchor where the span anchor must be within small threshold time difference of the description anchor timestamp.
*   matchedDescriptionText (type: String.t, default: nil) - The description anchor text used for matching to Span anchor text.
*   matchedSpanText (type: String.t, default: nil) - The description span anchor text that was the best match for the nearby description anchor.

Whether the product being described fits into specific categories (e.g., "video games").
*   bookConfidence (type: number(), default: nil) - TODO(ppoudyal) Expand confidence to cases where the product phrase might be a book/movie/video_game but isn't just a title The score (between 0 - 1) measuring the confidence that product
*   isVideoGame (type: boolean(), default: nil) - TODO(ppoudyal) Deprecate is_video_game once the score covers all cases covered by $VideoGameProductPhrase The product phrase contains a video game title.
*   movieConfidence (type: number(), default: nil) - phrase mentions a book title The score (between 0 - 1) measuring the confidence that product
*   videoGameConfidence (type: number(), default: nil) - phrase mentions a movie title The score (between 0 - 1) measuring the confidence that product


ReferrerCounts stores how many referrers an images has and how many of them were classified as porn and as adult/softporn respectively. Note that a referrer is usually a landing page, but as of March 2011 this also includes referrers which an image can 'inherit' by propagating counts from near duplicate images.
*   porn (type: integer(), default: nil) - Number of referrers which are classified as porn and as adult.


Domain registration information for the document. NEXT ID TO USE: 3
*   createdDate (type: integer(), default: nil) - This is the number of days since January 1st 1995 that this domain was last created. This should always fit in 15 bits.
*   expiredDate (type: integer(), default: nil) - This is the number of days since January 1st 1995 that this domain last expired. This should always fit in 15 bits. Jan 1st 1995 was chosen by the history project as a special epoch date. Both the registrationinfo dates and the linkage dates are measured in days since this epoch.


This data is expected to appear in approximately 2 out of every 1,000 documents with an average of 2 fields per document. Rough order of size is in the hundreds of kilobytes per Mustang shard.

The lowest common denominator of a SAFT annotation is simply the definition of some |category| for a sub-span of the |raw_text| of the query.
*   category (type: String.t, default: nil) - Categories can be either syntactic (NNS for fine-grained-POS) or semantics ($Mass for measures).
*   rawText (type: String.t, default: nil) - The substring of the raw query spanned by this annotation.


AbsoluteDateTime represents the resolved date/time expressions that need no further calculation. It has a section for date and a section for time. The date section will always be filled; if the time section is filled, hour is always filled; for (minute, second, partial_second), they are optional with a zero default value. But if partial_second is filled, (minute, second) must be filled, even they are 0s; if second is filled, minute must be filled. Next field#: 22.
*   allowPersonal (type: boolean(), default: nil) - allow_personal determines if personal datetimes are allowed to be used in the resolution of the personal datetime. If allow_personal is false and a personal date exists, the entire parse will be thrown out.
*   deleted11 (type: String.t, default: nil) - Deprecated fields. Do NOT use.
*   holiday (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeHoliday.t, default: nil) - season, quarters and holidays will be soon handled as fetched relative datetimes and will be removed from the AbsoluteDateTime message.
*   hourState (type: String.t, default: nil) - Note: This is marked as deprecated as we are moving into explicit parses using the meridiem field, and leave the inference over implicit parses to the grounding/resolution libraries.
*   isBc (type: boolean(), default: nil) - |is_bc| is true if and only the date is Before Christ/Common Era. If |is_bc| is true, only year is meaningful in this proto, as Gregorian calendar is only meaningful for A.D. date/times.
*   meridiem (type: String.t, default: nil) - For expressions such as "am", "pm". Note: the name "meridiem" has been taken by a field in message ResolutionProperties. Examples: * "9 am": point { hour: 9 meridiem: AM hour_state: UNAMBIGUOUS }
*   modifier (type: String.t, default: nil) - For expressions such as "around 2 pm".
*   nonGregorianDate (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeNonGregorianDate.t, default: nil) - If present then: 1) the incoming non-Gregorian datetime will be converted to Gregorian. 2) exported DateTimeProperty fields will contain the converted Gregorian datetime. 3) DateTimeProperty.source_calendar will be set to the calendar-system that was used to specify the non-Gregorian date.
*   rangeModifier (type: String.t, default: nil) - Modifier that return the appropriate subrange. For more information, see the description of RangeOfDateTimeModifier. Example:  early 2020  early on March 20th When a point have a range_modifier field, the resolution library will expand the point into the widest range in contains. For example, in the case of a single date point like "April 22nd, 2022", the point will be transformed into a range with: - "begin: April 22nd 2022 00:00:00h" - "end: April 22nd 2022 23:59:59h" The modifier will then be applied over that range.
*   timezone (type: String.t, default: nil) - A string representation of the timezone information, see i18n/identifiers/timezones.{h,cc}.
*   weekday (type: String.t, default: nil) - The |weekday| field is populated to indicate that a day-of-the-week is explicitly mentioned in an absolute date utterance, such as [Tuesday, July 6th, 2021]. Note that when a day-of-the-week is included in other, non-absolute-date expressions, such as [on Tuesday], then this this field is not populated (and in fact an AbsoluteDateTime is not used at all.) Note: This field is populated only when the original expression contains a day-of-the-week. It is not populated by the grounding library to indicate that the date happens to be a Tuesday. Examples:  "Tuesday, July 6th 2021" --> the day of the week is part of an absolute date expression, so this field is populated: point { year: 2021 month: JULY day: 6 weekday: TUESDAY }  "on Tuesday" --> the day of the week is not part of an absolute date expression, so it is interpreted as a relative datetime: relative { fetched { target { weekday: TUESDAY } } }


Log model name, partition and input processor used to generate SnippetsBrain scores, if SnippetsBrain debugging is enabled.
*   snippetsbrainModelName (type: String.t, default: nil) - The below fields are populated by SnippetFlow in superroot.

Represents a principal who possesses a signing key corresponding to the verification key or keyset described here.
*   keymasterKeyType (type: integer(), default: nil) - This value must be from the KeyMetadata.Type enum in keymaster.proto.
*   serializedVerificationKey (type: String.t, default: nil) - The actual verification key bytes corresponding to the above type.
*   serializedVerificationKeyset (type: String.t, default: nil) - The binary serialized Keymaster SerializedReader of a public keyset. The keyset must contain exactly one key. N.B.: If this field is populated, serialized_verification_key should be set to the empty string and keymaster_key_type should be set to zero.

The reference to a BizBuilder listing. For details on BizBuilder see http://g3doc/commerce/bizbuilder/backend/g3doc/index.md
*   id (type: String.t, default: nil) - Listing id. Used in queries to BizBuilder backend for listing access.

Annotation packs various recognition, detection, embedding, and parsing results. One Annotation per bounding box detection.
*   roi (type: GoogleApi.ContentWarehouse.V1.Model.ImageUnderstandingIndexingImageRegion.t, default: nil) - Detected bounding box. Leave it not set for whole image annotation.


Represents the set of members (of a given type) in a Google+ Square (see http://go/squares). A Square with default member_type is currently (1/2012) identical to the GaiaGroup with the same ID, but that is expected to change soon (see http://go/superglue). Support for this principal type is currently (1/2012) incomplete -- e.g., Keystore does not support it yet (see b/5703421).
*   memberType (type: integer(), default: nil) - The type of Square members to consider, e.g. "all members" vs. "owners" vs. "admins". These are defined by legacy_relation_id values in social.graph.storage.EdgeTypeEnum.EdgeType enum options in social/graph/storage/proto/id.proto. See square.pb (defined in production/config/cdd/socialgraph/mixer_config/prod/node_type_config) for all valid edge types associated with square. Currently required.

A TrackingNumberType configures a value whose type is a TrackingNumber.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

Provenance information for sub-fields of this feature - go/subfield-provenance.

See NameDisplayOptions in //depot/google3/focus/backend/proto/backend.proto. See also go/nickname-mess.


A generic span, possibly with an associated label. The span may be defined by either byte-level or token-level boundaries.
*   byteStart (type: integer(), default: nil) - The indices of the first and last byte covered by the span.
*   label (type: String.t, default: nil) - The label associated with the span.
*   labelScores (type: map(), default: nil) - Optionally stores alternative labels with associated scores for the span.
*   score (type: number(), default: nil) - A score associated with the span.
*   tokenStart (type: integer(), default: nil) - The indices of the first and last token covered by the span.

This class represents a parsed field within an address. NOTE: if you add a field to this proto, please update the AreAddressComponentsEquivalent() function in google3/geostore/base/internal/addresscomponent.cc
*   featureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The id of the corresponding Feature, if such a feature is defined. As discussed above for feature_type, components of TYPE_FEATURE or TYPE_LANDMARK may have a corresponding feature id.
*   featureType (type: integer(), default: nil) - For components of TYPE_FEATURE or TYPE_LANDMARK, this is the feature type (TYPE_COUNTRY, TYPE_LOCALITY, TYPE_ESTABLISHMENT_POI etc.). Note that some features may not actually exist in the geostore (e.g. a village that we've never heard of), in which case the feature_id will be missing but the feature_type is still specified. Please refer to IsValidAddressComponentFeatureType() in google3/geostore/base/public/addresscomponent.h for the definitive list of feature types allowed for the type (either TYPE_FEATURE or TYPE_LANDMARK) of components.
*   index (type: integer(), default: nil) - The order of this address component relative to the ones that share the same feature_type in the AddressProto. For now, the primary use of this index field is to handle ordering issue of multiple occurrences of AddressComponentProto with feature_type of TYPE_ROUTE (and subtypes), or TYPE_POLITICAL, where the order of the address components matters as there are dependences. 0 is the smallest valid index value, representing the most specific address component. Index value of 1 represents a relatively less specific address component of the same feature_type on which the 0-indexed address component depends.
*   parsedName (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreNameProto.t), default: nil) - The parsed_name field contains one or more names of an address component. Its actual contents depends on where in the Geo/Google stack you are reading a feature: 1. When an address is initially parsed via a feed or other raw input and structured as an AddressProto, parsed_name should contain the set of names that corresponds to the (possibly normalized) raw text from the raw input. 2. In MapFacts, the address component may be linked to an actual feature via feature_id. Any address formatting directly from MapFacts should follow links to retrieve names when possible. The parsed_name contents may be formatted directly if the address component is unlinked following the same rules as selecting and formatting the name of a feature. The cached parsed_name is regularly refreshed from the linked feature with the minimal set of names for address components (usually just a single, preferred name, in the local language, plus a Latin-script name: go/story-of-ac-names). 3. In serving systems, the names of linked features may be denormalized into the parsed_name field to facilitate quicker address formatting or for simple data filtering (e.g. finding all geocodes in California by name). If reading a feature from such a system, the parsed_name field could contain multiple names in multiple languages that reflect a cached copy of the names associated with the linked features. Formatting of such names should follow the same rules as selecting and formatting the name of a feature itself.
*   range (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreAddressRangeProto.t, default: nil) - Any numerical address component may optionally be specified as a range. For example if a component of TYPE_STREET_NUMBER has the optional "range" attribute, then it represents a range of addresses rather than a single address (see AddressRangeProto for details).
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to an address component. Never set in MapFacts.
*   textAffix (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTextAffixProto.t), default: nil) - Additional text to append before and/or after the parsed_name, when the address is formatted. Multiple instance should represent translations. Currently, this is only permitted on TYPE_LANDMARK components, and only one instance is permitted.
*   type (type: String.t, default: nil) - Every address component has a type. Most address components correspond to one of the feature types defined in FeatureProto, so rather than defining a separate category system here, instead we mark them as TYPE_FEATURE and store the FeatureProto type in the feature_type() field. This is how we handle countries, cities, streets, etc. However, there are a few types of address components that do not have a corresponding feature type (e.g. PO boxes). These components have their type defined here. An address component of TYPE_STREET_NUMBER may correspond to a physical entity that defines a street number, such as a geocoded address or a land parcel. In this case, the address component may have a link to the corresponding feature. A good reference for what types of address components are possible is the xAL standard, which is a published XML schema: http://www.oasis-open.org/committees/ciq/download.shtml. This standard is the basis of the PostalAddress protocol message.

The status indicating the user is temporarily busy and there is not a more specific status derived from calendar that applies (e.g., InMeeting or DoNotDisturb).
*   committedUntil (type: DateTime.t, default: nil) - The time when the user will either stop being committed or change commitment type (i.e. InMeeting, DoNotDisturb, Busy or OutOfOffice < Xh). Note that the goal of this field is to provide information to help users decide how to communicate with a user (see also http://shortn/_wXYXtZScgh).
*   eventSummary (type: String.t, default: nil) - The summary of the corresponding event in Calendar.
*   nextAvailable (type: DateTime.t, default: nil) - The next time when the user will be available, i.e., when their status will be neither InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
*   occupiedUntil (type: DateTime.t, default: nil) - The time when the user will stop being occupied, i.e., when their status will be neither inMeeting, Busy nor DoNotDisturb.

Event is for logging interesting events that happen during a url fetch. Interesting events include "fetch start", "url rejected", etc. The events are written to binary logs together with the request and reply messages. If the same event occurs multiple times consecutively, We record the time of the first three instances in EarliestTimeStamp but omit the rest. We keep track the total number of occurrences in NumOccurrences and the timestamp of the last occurrence is kept in TimeStamp field.




Cluster-level metadata about the description anchors used as list items to build training data for list anchors.
*   editDistanceRatioStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Summary of the edit_distance_ratios of the description spans from their best matched description anchor texts.
*   editDistanceStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Summary of the edit_distances of the description spans from their best matched description anchor texts.
*   matchedDescriptionAnchorsTimegapStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - Median, average and standard deviation of time gaps of when the description anchors is annotated to appear in the video (description_anchor_time_ms) from when they are matched in the ASR as the list description anchors.
*   numDescriptionAnchors (type: integer(), default: nil) - Number of description anchors in the description of this video.


A Component-Specific Contract is a proto message that can be placed on various elements of the MeaningCatalog (intent schemas, slots, types) that signals whether that element is part of the contract for a given component. go/contract-based-conformance


Pattern for a MONTHLY recurrence. This Monthly reccurence supports: 1. Absolute days of the month (i.e. the 1st and 15th) 2. Relative day from the end of the month (i.e. -1 for last day, -2 for second-to-last day). Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
*   monthDay (type: list(integer()), default: nil) - Absolute day of the month (if positive) or relative day from the end of the month (if negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1]. Positive values should correspond to actual calendar day number (indexing starts at 1).
*   useLastDayIfMonthDayPastEnd (type: boolean(), default: nil) - If true, month_day beyond the end of month (i.e. month_day=31 in February) will default to the last day of the month.

The anchor class holds content relevant to a citation, for example, the text before or after the citation that explains what the citation is about.
*   DEPRECATEDSrcFP (type: String.t, default: nil) - Fingerprint of the referral document. The fingerprint should resist to small variance in the document content. DO NOT USE IT!
*   count (type: integer(), default: nil) - Number of times this anchor text appears, only consider the text itself
*   text (type: String.t, default: nil) - Space-delimited anchor words. Text that needs segmentation (like CJK or Thai) is unsegmented. Generated by ScienceParseUtils::AppendTokenSeqToString()
*   type (type: integer(), default: nil) - one of the "Type" value defined below.
*   weight (type: integer(), default: nil) - weight of the anchor by looking where we get this anchor text. It can be PR, court level, year, or the combination of differerent aspects. weights are 1 - 128 defined as "Weights"

A product can be any combination of raw_text and metadata (including mid, shopping product catalog title/id, and media attributes). A product phrase refers to a product at the catalog entry level and/or a media product. Media product contains information about author and media title TODO(ppoudyal) Add genre and order_in_series to MediaProduct




The identity of service accounts that have been explicitly created under tenant projects.
*   serviceAccountEmail (type: String.t, default: nil) - Output only. The email address of the generated service account.
*   serviceName (type: String.t, default: nil) - Input/Output [Required]. The service that the service account belongs to. (e.g. cloudbuild.googleapis.com for GCB service accounts)




This subproto contains configuration for crowding. Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
*   crowdingAttribute (type: String.t, default: nil) - The value of the crowding attribute for this document. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query.

This protocol buffer represents the association between a segment and a landmark feature. Notes: - References to TYPE_SEGMENT features should always point to the even sibling. - Self-references are allowed but the referencing segment's sibling is required to have a self-reference as well (the above requirement to always reference the even sibling still applies).
*   featureType (type: integer(), default: nil) - The type of the landmark feature. Allowed types: - TYPE_CARTOGRAPHIC e.g. a putting green or water hazard - TYPE_COMPOUND e.g. - the Empire state building (TYPE_COMPOUND_BUILDING) - a park (TYPE_COMPOUND_GROUNDS) - a section of a retail store (TYPE_COMPOUND_SECTION) - TYPE_ESTABLISHMENT e.g. - the Eiffel Tower (TYPE_ESTABLISHMENT_BUILDING) - a sports field (TYPE_ESTABLISHMENT_GROUNDS) - Starbucks (TYPE_ESTABLISHMENT_POI) - TYPE_INTERSECTION_GROUP e.g. a major intersection - TYPE_NATURAL_FEATURE e.g. a river - TYPE_SEGMENT e.g. a bike trail or train tracks
*   landmark (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The feature ID of the landmark feature.
*   travelMode (type: list(String.t), default: nil) - The mode(s) of travel for which this landmark is useful.


An entity from the MDB namespace that is to be interpreted as a group. If using this for authorization, you should do an exact match of the peer role against group_name or any of the names in the Chubby expansion of the MDB group named group_name.

Represents a resolution that may be part of a larger compound reference. For example, "my brother's birthday" will have a subreference that may have resolutions for "my brother".
*   mid (type: String.t, default: nil) - Can be used with PKG Service for looking up metadata about this entity at fulfillment/GenX time.
*   name (type: String.t, default: nil) - Name of the entity represented by this resolution.
*   resolutionScore (type: number(), default: nil) - A resolution score of 0 indicates that it did not resolve to a real entity.

Marks that sensitivity is from a Grounding Provider.

Contains meta information about this data. This field is only available in docjoins (and potentially MDU shards), it is not populated offline. NOTE: This is a new field (Nov 2022) and we do not want clients to depend on this; please contact qscore-team@ if you want to use this information.
*   encodedLookupInformation (type: String.t, default: nil) - Encoded lookup information. The fields set above are expensive to store. Storing them in docjoins is fine, but we cannot store them in MDU shards. In order for the MDU shards to display field provenance information, we store them as a bitfield. For details about the encoding and decoding scheme, see quality_nsr::util::EncodeMetadataLookupInformation. We expect this to occupy 8 bytes as long as there are less than 64 fields in NsrData proto, 12 bytes between 64 and 92 fields, etc.
*   goldmineLookupKeyPerField (type: map(), default: nil) - Same as raffia_lookup_key_per_field. Note that the goldmine_lookups have priority; if a field appears in both goldmine and raffia entries, it means it was taken from goldmine. If it's missing here but present in raffia_lookup_key_per_field, it was taken from raffia.
*   goldmineLookupKeys (type: list(String.t), default: nil) - The lookup keys attempted by goldmine. Note that goldmine only runs for urls which can be chunked differently than raffia; in those cases, goldmine related fields are empty.
*   lastTimeProcessedMduInSeconds (type: String.t, default: nil) - This field is populated only during MDU population, so it's not present in docjoins, but it's present in production so that it can be displayed.
*   lastTimeProcessedRaffiaInSeconds (type: String.t, default: nil) - Records the last time each system has processed the proto. These are recorded as seconds from the unix epoch. Ideally these fields would be google.protobuf.Timestamp, but the scoring bundle (which depends on this proto) does not understand proto3 syntax. See cl/500942047 for details.
*   nsrChunksWithSourceInfo (type: GoogleApi.ContentWarehouse.V1.Model.QualityNsrNsrChunksWithSourceInfo.t, default: nil) - Stores the NSRChunks (computed by goldmine) which were used to populate the data.
*   raffiaLookupKeyPerField (type: map(), default: nil) - Returns the raffia lookup key per each field in the NsrData proto (with exclusion of the Metadata sub-message (i.e. this)). It contains information like 3 : 1, meaning that the field inside NsrData with id '3' (in this case 'host') has been taken by raffia from the raffia lookup key at index 1.
*   raffiaLookupKeys (type: list(String.t), default: nil) - This is an internal field set by Raffia, to indicate which lookup keys have been attempted to populate the NsrData for this document. This will allow us to determine which key has been used to populate each field in the proto. The keys are ordered by lookup priority; raffia will give priority to earlier keys, and only take fields from later keys if they are missing.
*   raffiaSignalMergerUrl (type: String.t, default: nil) - The url used by NsrSignalMerger (http://google3/indexing/signals/signal-merger.h;l=1801;rcl=509297232) to select which NsrData value to keep. The SignalMerger merges all the NsrData coming from the dup url cluster, and select the NsrData value to return by choosing a single url in the cluster (see NsrSignalMerger class for details). NOTE: This field is populated only when there is a cluster. If there is no cluster, this is empty and the key used is the canonical (and only) url.

An EventId is a 128 bit identifier that uniquely identifies an event, such as a query. The event time recorded to the nearest microsecond, along with information about the process generating the event, ensures that all EventIds are unique. Details of this EventId are described in a design document: http://www/eng/designdocs/sawmill/adlogs.html
*   processId (type: integer(), default: nil) - process_id is an integer that identifies the process on this machine that generated this event. This id is calculated once when the server generates its first event, and may change if the process is migrated to a different host. This field has a very specific format mandated by the logs collection infrastructure, which is subject to change WITHOUT NOTICE. As of 2013-01-09, this format is: uint32 process_id = (time(NULL) << 24) + (getpid() & 0xFFFFFF); If you are generating an extended_pid directly, you MUST use one of the maintained library implementations in order to generate it properly: C++ //borg/borgletlib:extended_pid; call borg::ExtendedPid() Python //borg/borgletlib/python:pyextendedpid; call ExtendedPid() Go //borg/borgletlib/go:extendedpid; call Get() Java //java/com/google/common/logging; call EventId.getPid() If you think that you need to parse the values of this field, please contact logs-collection-dev@ to discuss your requirement.
*   serverIp (type: integer(), default: nil) - server_ip is the IPv4 address or http://go/ghostid of the machine running the server that created this event message. This allows us to distinguish between events that occur at the same time on different servers. Format: 10.1.2.3 is stored as 0x0a010203, and GHostId 1 as 0x00000001.
*   timeUsec (type: String.t, default: nil) - time_usec is the number of microseconds since the epoch (i.e., since 1970-01-01 00:00:00 UTC) as an int64: 1e6  (unix time) + microseconds. Applications must ensure that EventIdMessages have increasing times, artificially increasing time_usec to one greater than the previous value if necessary. Alternate implementations were considered: 1. storing unix time and microseconds separately would require a bit more storage, and the convenience of having a single value representing the time seemed more useful than having trivial access to a unix time. 2. storing unix time in the upper 32 bits would allow for more precision - up to 4G events/second, but it wouldn't print nicely as a decimal value and it seems unlikely that any single server would ever sustain more than 1M events/second. 3. Java-compatible time uses millis - this would limit servers to 1000 events per second - too small. Other names for this field were considered, including time, time_stamp, and utime. We felt that including the units in the name would tend to produce more readable code. utime might be interpreted as user time. unix timestamp  1e6 + microseconds


Metadata about a latent entity and its relationship to a given child. See go/hits.
*   broaderImportance (type: list(number()), default: nil) - The relatedness score of the two entities corresponding to each source above.
*   mid (type: String.t, default: nil) - The mid of the latent entity.
*   sources (type: list(String.t), default: nil) - The sources this generalization relationship is coming from.


The start of the recurrence can be represented either as a DateTime or a timestamp in milliseconds from UTC epoch. Exactly one of the fields of this message must be set.
*   startDateTime (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDateTimeAnnotation.t, default: nil) - Only the year/month/day portion are used to find the start date of the recurrence. To specify a time or period of each instance, use DailyPattern.


If you add new fields to this message, do not use any tag value less than the "Next free tag" below. The lower tag values might be missing in this file, but they were used in past for some field, so cannot be used again. Next free tag: 44
*   isValidForCountryRestrict (type: boolean(), default: nil) - Set to true if the local_countries field can be used for country restricts as well.
*   documentLocationSource (type: String.t, default: nil) - Specifies the origin of geo_locations. Right now, it can either come from deprecated Docloc system or the new Brainloc system when Docloc doesn't have sufficient evidence.
*   metroIdList (type: list(GoogleApi.ContentWarehouse.V1.Model.CountryMetroNBFeature.t), default: nil) - Metro locations: list of NavBoost feature V2 associated with a doc, along with the enclosing province. Metro locations with new tags.
*   geoLocations (type: GoogleApi.ContentWarehouse.V1.Model.CountryGeoLocations.t, default: nil) - New MetroID: Now called GeoLocations since the locations could be sublocalities, cities or states. GeoLocations are always more fine grained than country. TODO (jayeshv): Once new MetroID/GeoLocations is launched everywhere, deleted old MetroID related fields.
*   sitename (type: String.t, default: nil) - Domain name of keys in filtering metro reducer class, used only by the intermediate mapreduces to produce filtered data.
*   debug (type: String.t, default: nil) - A non critical field to store debug info for a country attachment. Used in experiments and for debugging.
*   countryidFromUgc (type: boolean(), default: nil) - Is true if the country attachment was computed through the UGC pipeline.
*   localCountryCodes (type: list(integer()), default: nil) - Fields that actually store the country id in docjoins. The format of this data is defined in //i18n/identifiers/stableinternalregionconverter.cc. Converter defined there can be used to convert it to RegionCode format.
*   superGlobal (type: boolean(), default: nil) - Super global pages get lesser demotion than global pages. A document can only be either global or super_global but not both.
*   wmxCountry (type: String.t, default: nil) - Country specified for a web-site through webmaster console.
*   userVisibleLocalCountry (type: integer(), default: nil) - This is the country id we show to users on the result page. This is kept different from country demotion country id because we dont want to expose our backoff and url based detection algorithm - also we want to be ultra conservative in showing this.
*   salientCountries (type: list(GoogleApi.ContentWarehouse.V1.Model.CountrySalientCountry.t), default: nil) - [Experimental]: Top salient countries for a doc. If a country can not be found on this field it can be considered that this doc is not relevant to it.
*   userVisibleCountryFromLogs (type: String.t, default: nil) - This is used to store the visible country id computed from logs data
*   restrictCountries (type: list(String.t), default: nil) - List of two-letter(lower-case) countrycodes(e.g. us) valid for restricts. Typically cloned out of local_countries if is_valid_for_country_restrict is set to true.
*   fromLanguageFallback (type: boolean(), default: nil) - Booleans to keep track of where the country-id of the page came from. These are used for debugging and/or unittests, and cleared in production.
*   relatedCountries (type: list(String.t), default: nil) - two-letter(lower-case) countrycode, e.g. us countries that is related to, but not local to
*   debugSourceUrl (type: list(String.t), default: nil) - Set to the signal source URLs when merging country signals in Alexandria during sitemoves. Essentially if sites A and B move to C, and we merge A and B's signal to C, in the countryattachment signal C will have URL A and B as source_url. Only used for debugging and it doesn't show up in docjoins.
*   localCountries (type: list(String.t), default: nil) - two-letter(lower-case) countrycode, e.g. us countries that is local to
*   weightAboveIdealForLocalness (type: float(), default: nil) - If result is global, store weight above ideal, as a confidence signal. Used in query localness, cleared in production CountryAttachment.
*   urlPatternBasedLanguage (type: integer(), default: nil) - Language and country extracted using the URL pattern map.

Aggregated rating score, used in training pipeline, etc.
*   furballUrl (type: list(String.t), default: nil) - Furball URL(s) of the rating score (may have been rated more than once)




Not all combinations of optional fields in TimeEndpointProto are allowed. The granularity of time is a path along the directed graph with these edges: second -> minute minute -> hour hour -> day of week hour -> day of month hour -> day of year day of week -> week of month day of week -> week of year day of month -> month day of year -> year week of month -> month week of year -> year month -> year A TimeEndpointProto may not specify two fields that are unordered with respect to each other ("day of year" and "day of week", for instance). The absence of fields larger than any specified field indicates repetition (e.g. no year indicates that the interval occurs every year). The absence of units that are "smaller" than the largest specified unit indicates a default lowest value (no hour means midnight (0)). When intersecting time intervals, "smaller" units repeat within the "larger" unit as many times as necessary. For example, the intersection of the interval from hour 0 to hour 24 with the interval from second 0 to second 1 is equivalent to the union of the set of intervals which represents the first second of every minute of every hour of every day. ----------------------------------------------------------------------------- WARNING - if you add new fields to TimeEndpointProto you need to: - ensure AreTimeEndpointsEquivalent considers the new fields (and update the corresponding tests) -----------------------------------------------------------------------------
*   day (type: integer(), default: nil) - Valid ranges are 0-7, 1-31, and 1-366 (see day_type below)
*   hour (type: integer(), default: nil) - Valid range is 0-24. Because it could be unclear what wrapping hours mean in relation to days, 24 is used to denote midnight at the end of a day.
*   minute (type: integer(), default: nil) - Valid range is 0-59, except when a repetitive minute interval ends at the end of an hour, in which case 60 is a legal end value.
*   second (type: integer(), default: nil) - Valid range is 0-59, except when a repetitive second interval ends at the end of a minute, in which case 60 is a legal end value.
*   week (type: integer(), default: nil) - Valid ranges are 0-5 and 1-53 (depending on the value of week_type, see below).

Alternate names are some urls that we would like to associate with documents in addition to canonicals. Sometimes we may want to serve these alternatenames instead of canonicals. Alternames in CompositeDoc should come from WebMirror pipeline.
*   ecnFp (type: String.t, default: nil) - Fp96 of webmirror equivalence class as of last time this was exported.




Specification of which video features can be used.
*   autoplayToggleState (type: String.t, default: nil) - State that indicates whether autoplay is enabled for youtube videos.
*   availableProviders (type: list(String.t), default: nil) - Providers available at the time user updated settings.
*   providerFilterState (type: String.t, default: nil) - Represents the state for the video provider filter.
*   whitelistedProviders (type: list(String.t), default: nil) - Contains the list of whitelisted video providers.

This variant defines the frame to be the first frame of the video's generated preview.
*   xtagList (type: GoogleApi.ContentWarehouse.V1.Model.MediaIndexXtagList.t, default: nil) - All xtags used in the generation of the preview. The same frame generated from the same preview with different xtags will likely have different bytes (such as, for example, resulting from a different aspect ratio).


Expresses a parking restriction on a road; i.e. times at which parking on the road is prohibited.
*   restrictedHours (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeScheduleProto.t, default: nil) - Times at which parking is prohibited.
*   restrictionType (type: String.t, default: nil) - clang-format on The type of restriction that applies at this time.
*   serviceType (type: list(String.t), default: nil) - The types of services that this parking restriction applies to. We expect most parking restrictions to apply to all services, but some airports have specific rideshare parking or taxi parking zones.
*   vehicleType (type: list(String.t), default: nil) - The types of vehicles that this parking restriction applies to. For instance, some streets may allow motorcycles to park but not automobiles or trucks.







Example: the choice of chicken, beef, or tofu for the Thai Basil dish. Each option would have its own name, price, allergen info, etc. Note: This proto stores both food and service items despite the name.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - The repeated name_info field here is for item options with names or descriptions listed in multiple languages. When an item option has no names or descriptions, the size of the repeated field name_info may be 0. For example, when a food menu item does not have multiple options, the item option proto is used only to specify price and nutritional information, so it will not have a name_info field. There should be at most one name_info for any given language.
*   nutritionFacts (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePriceInfoFoodNutritionFacts.t, default: nil) - Nutrition facts of the food dish option. Note that it also includes calories information with a finer defined unit information.
*   portionSize (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFoodMenuItemOptionProtoPortionSize.t, default: nil) - Size of the order, represented in units of items. (e.g. 4 "skewers”, 6 "pieces”)
*   preparationMethods (type: list(String.t), default: nil) - Methods on how the food dish option is prepared.
*   price (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePriceRangeProto.t, default: nil) - We use PriceRangeProto here but we expect the lower_price and upper_price to be both set to equal numbers because an option should have a single price. This field is not required because food item prices may be variable depending on season.
*   servesNumPeople (type: integer(), default: nil) - Number of people can be served by this food dish option.

Represents an embedded object in an update. This is a wrapper class that can contain a single specific item proto in an extension field. Think of it as a base class like Message in Java. Each item proto must declare that it extends this proto: message ExampleObject { option (item_type) = EXAMPLE_OBJECT; extend EmbedClientItem { optional ExampleObject example_object = ; } } See go/es-embeds for details.
*   canonicalId (type: String.t, default: nil) - The canonical ID of the embed. If absent, the canonical ID is equal to the ID; if present, then the canonical ID represents an "equivalence class" of embeds which really refer to the same object. (For example, the URLs http://www.foo.com/ and http://foo.com/ refer to the same object) This field may be updated periodically by background processes.
*   deepLinkData (type: GoogleApi.ContentWarehouse.V1.Model.EmbedsDeepLinkData.t, default: nil) - Deep-linking data to take the user to the right place in a mobile app. This is only used for preview and attribution. Links that are specific to a given embed type should live on that specific embed's proto by using Link. See http://goto.google.com/mariana-design.
*   id (type: String.t, default: nil) - The ID of the embed. This corresponds to the schema.org ID, as represented in the ItemScope.id field.
*   provenance (type: GoogleApi.ContentWarehouse.V1.Model.EmbedsProvenance.t, default: nil) - The provenance of the embed, populated when the embed originated from a web fetch. The provenance captures information about the web page the embed had originated, like the URL that was retrieved and the retrieved URL's canonical form. This is useful in the case where the URL shared by the URL redirects (e.g., in the case of a shortened URL).
*   renderId (type: String.t, default: nil) - The ID used to identify the embed during rendering. This field will match ID, if set, otherwise it will be the ID of the parent activity. This field is only populated on the server for client use and is not persisted to storage.
*   signature (type: String.t, default: nil) - Signature of the embed, used for verification.
*   transientData (type: GoogleApi.ContentWarehouse.V1.Model.EmbedsTransientData.t, default: nil) - Transient generic data that will not be saved on the server.
*   type (type: list(String.t), default: nil) - The first value in type determines which extension field will be set. When creating an EmbedClientItem, you only need to set the first (primary) type in this field. When the server receives the item, it will populate the full type list using the parent annotations in the ItemType enum.


ClientLabels contains client-specified key/value pairs, used to annotate individual FetchRequests and FetchReplies. This is primarily useful when the Multiverse Nexus performs postprocessing of fetchreplies. ClientLabels essentially allow clients to use the Nexus UI to slice statistics computed on fetchreplies by the specified key/value pairs. Note: we don't use "map" type here delibrately in order to avoid the non-deterministric serialization of the "map" field. See b/69064361 for more details.

Note: If you are going to populate any new field in this proto, you probably need to go through the go/dj-new-field and go/index-changes process.
*   DEPRECATEDSourceTitle (type: String.t, default: nil) - DEPRECATED DEPRECATED DEPRECATED In case you didn't realize, these fields are (and have been for some time) deprecated. We'll stop pushing their data to production soon (probably Feb/09) and after a few weeks we'll probably remove them.
*   TargetGroups (type: list(GoogleApi.ContentWarehouse.V1.Model.QualitySitemapTargetGroup.t), default: nil) - One Sitemap can contain multiple TargetGroups, but only one of them will be displayed to the user - this decision will be made at displaying time and can take into account various factors, such as the users' language and country, currently running experiments, etc.
*   pageAnchorsDocInfo (type: GoogleApi.ContentWarehouse.V1.Model.SdrPageAnchorsDocInfo.t, default: nil) - This field is populated in the Sitemap MDU subpopulator from cdoc data. This is used to store page anchors information for TopicTagsScrolltoFlow.
*   subresultList (type: GoogleApi.ContentWarehouse.V1.Model.QualitySitemapSubresultList.t, default: nil) - This field is populated in the Sitemap MDU subpopulator from cdoc data. It's not set in the cdoc Sitemap.


The container for all GConceptInstances associated with a feature.

An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
*   latitude (type: float(), default: nil) - The latitude in degrees. It must be in the range [-90.0, +90.0].
*   longitude (type: float(), default: nil) - The longitude in degrees. It must be in the range [-180.0, +180.0].

A message holding information about the mastering display color volume. This metadata can be used when tone mapping an HDR signal to a display with a different gamut or brightness characteristics than the mastering display. This message is capable of containing SMPTE 2086 metadata.
*   blue (type: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t, default: nil) - Coordinates of the blue primary of the mastering display.
*   green (type: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t, default: nil) - Coordinates of the green primary of the mastering display.
*   maxLuminance (type: number(), default: nil) - Maximum luminance of the display (in cd/m^2).
*   minLuminance (type: number(), default: nil) - Minimum luminance of the display (in cd/m^2).
*   red (type: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t, default: nil) - Coordinates of the red primary of the mastering display.
*   whitePoint (type: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t, default: nil) - Coordinates of the white point of the mastering display.

NOTE: When adding a new field to be propagated to Raffia check if NsrPatternSignalSpec needs to be updated. Next ID: 56
*   siteAutopilotScore (type: number(), default: nil) - Aggregated value of url autopilot scores for this sitechunk.
*   clutterScore (type: number(), default: nil) - Delta site-level signal in Q* penalizing sites with a large number of distracting/annoying resources loaded by the site (see go/clutter-v0).
*   nsrOverrideBid (type: number(), default: nil) - This signal is used to unconditionally override NSR as a bid in Q*. Should only be used in case of emergency (see go/nsr-override-bid). To have any effect, the value should be present and greater than 0.001.
*   versionedData (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityNsrNSRVersionedData.t), default: nil) - Versioned map of NSR values for experimenting with the next release.
*   localityScore (type: number(), default: nil) - Locality score of the site, i.e. the locality component of the LocalAuthority signal (see go/pq-localauthority).
*   clusterId (type: integer(), default: nil) - An id for defining clusters of sites. Used in ecosystem experiments (project Tundra).
*   nsrdataFromFallbackPatternKey (type: boolean(), default: nil) - If true indicates that we do not have NSR data computed for the chunk, and instead the data is coming from an average of other host chunks.
*   isCovidLocalAuthority (type: boolean(), default: nil) - Bit to determine whether the site has the local authority covid signal, as computed by go/covid-local-authority
*   siteChunk (type: String.t, default: nil) - Primary NSR sitechunk. In most of the cases it's same as HOST_LEVEL_V3 sitechunked canonical url of the document. In rare, but important cases it's based on page markup (see quality/nsr/util/sitechunker.h for details).
*   isElectionAuthority (type: boolean(), default: nil) - Bit to determine whether the site has the election authority signal, as computed by go/election-authority
*   isVideoFocusedSite (type: boolean(), default: nil) - Bit to determine whether the site has mostly video content, but is not hosted on any known video-hosting domains. Site is considered to be video-focused, if it has > 50% of the URLs with watch pages (with smoothing prior). ariane/4045246
*   newNsr (type: number(), default: nil) - This field used as a temporary field for clean transitions when we need to roll out Q* and NSR changes simultaneously.
*   siteLinkOut (type: number(), default: nil) - Aggregated value of url link out scores for this sitechunk.
*   siteQualityStddev (type: number(), default: nil) - Estimate of site's PQ rating stddev--spread of the page-level PQ ratings of a site. Note this is different from nsr_variance which predicts error of NSR itself from the aggregated site-level rating.
*   priorAdjustedNsr (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityNsrVersionedFloatSignal.t), default: nil) - NSR - prior. Estimate of whether the site is above/below average NSR in its slice.
*   siteLinkIn (type: number(), default: nil) - Average value of the site_link_in for pages in the sitechunk.
*   nsrEpoch (type: String.t, default: nil) - The epoch from which this NSR value is coming from.
*   siteChunkSource (type: String.t, default: nil) - These are only annotated in the Goldmine NSR annotator.
*   secondarySiteChunk (type: String.t, default: nil) - Secondary NSR sitechunk. When present, it provides more granular chunking than primary sitechunks (see quality/nsr/util/sitechunker.h for details).
*   articleScore (type: number(), default: nil) - Score from article classification of the site.
*   spambrainLavcScore (type: number(), default: nil) - The SpamBrain LAVC score, as of July 2022. See more information at go/cloverfield-lavc-deck.


A collection of information that applies to a toll cluster.
*   intersection (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The list of TYPE_INTERSECTION features that are toll points and form this toll cluster. A toll cluster can consist of either a single or a group of intersection points called toll points at the end of various road segments in MapFacts that represent one or more lanes passing through a toll fixture that all go to the same routing destination. This relationship is reciprocal, as a toll point intersection also stores a reference to the toll cluster it belongs to. A toll cluster must have reference to one or more toll points i.e. toll_cluster.intersection should always be populated.

Information specific to rosters like Google Groups and Chatrooms.
*   abridgedRosterMemberships (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRosterMember.t), default: nil) - Abridged / sample subset of member details of the roster. NOTE: This field is only returned if the request's field mask includes "person.roster_details.abridged_roster_memberships". http://cs/symbol:google.apps.cloudidentity.groups.internal.GroupSummary.abridged_memberships
*   rosterMemberCount (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRosterMemberCount.t, default: nil) - Indicates the number of members and sub-rosters of the roster. Corresponds to http://cs/symbol:google.apps.cloudidentity.groups.internal.Group.direct_member_count_per_type


Equivalent to nlp_generation. TemplateKey. We cannot use nlp_generation.TemplateKey message directly becasue that proto is defined in a relatively large proto and has other dependencies, which will increase the size unnecessary and might hit many limitations (e.g., 5MiB limitation for Spanner type environment.).





Flexible multi-vertical classification output. The output for each vertical should be defined as a proto extension to this proto. When defining an extension for a new vertical please follow the format: message NewVertical { extend safesearch. VideoClassifierOutput { optional NewVertical classifier_output_extension = ; } optional safesearch.VideoVerticalOutput vertical_output = 1; } SafeSearch verticals only: Please also update this message with a new extension declaration. For more details on extension declaration please refer to http://go/proto-proposals/extension-declarations. Please refer to http://go/proto2-extensions for details on message extensions. LINT.IfChange next extension id: 7




The properties of the client op device. MODIFY_SETTING. This proto is stored in the SupportedClientOp proto.
*   skipAndroidAndGsaVersionCheck (type: boolean(), default: nil) - Additional specific setting capabilities. This boolean is used to indicate whether we want to skip the Android and GSA version check in CheckSettingSchemaAndMaybeGetUris() from assistant/vertical/device/fulfillment/utils/setting_utils.h. Consider setting this field to true if your device is neither Android or GSA (especially when the UserAgent string of your device's TaskRequest will not contain a valid/up-to-date Android/GSA version).
*   supportedSettings (type: list(String.t), default: nil) - Uses DeviceSetting enum which corresponds to setting_id. This indicates which specific settings are supported by client. An empty list implies all settings are supported.
*   supportsDoNotDisturbWithDuration (type: boolean(), default: nil) - Additional specific setting capabilities. This boolean is used to indicate if do not disturb with duration is supported through device.MODIFY_SETTING clientop on a client or not.
*   supportsMuteUnmute (type: boolean(), default: nil) - Additional specific setting capabilities. This boolean is used to indicate if new unmute logic is enabled on a client or not.

The set of information that helps the server identify the surface. This replaces the User-Agent string within the Assistant Server. Note: The SurfaceIdentity proto should only be used to derive the capabilities of a surface. It should not be accessed outside of the CapabilityBuilder or CapabilityChecker. NEXT ID: 6 LINT. IfChange
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The identifier of the device.
*   legacySurfaceType (type: String.t, default: nil) - DEPRECATED: The legacy device's surface type enum. NOTE: Prefer using the ontological surface_type field above. If you need to access the legacy surface type, please file a bug and add it in your code to migrate to ontological surface type.
*   surfaceType (type: String.t, default: nil) - The device's surface type. The types are defined at google3/assistant/api/core_types/surfaces.gcl. For more details, refer to go/ontologicalize-surface-type.
*   surfaceTypeString (type: String.t, default: nil) - DEPRECATED. The legacy device's surface type string. NOTE: Prefer using the ontological surface_type field. The device's surface type. This is the string version of the assistant.api.core_types.SurfaceType enum. The server should not use this field, rather it should use the SurfaceType value derived from this string.
*   surfaceVersion (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceVersion.t, default: nil) - The version of the surface/client. This is different from the Conversation protocol version.




A TYPE_INTERSECTION feature represents a common endpoint of one or more segments in a transportation network at which the segments are connected. An intersection in the real world may be more complicated than that (e.g., comprise multiple segment endpoints or have extra attributes), which can be modeled with an additional TYPE_INTERSECTION_GROUP feature, if needed (see intersectiongroup.proto). The standard feature properties are interpreted as follows: name - This should always be empty. Intersections that have a "special" name (e.g. Reads Corner intersection, PEI, Canada) should point to a separate TYPE_INTERSECTION_GROUP feature that captures it. Intersections which are named according to their cross streets do not need this requirement, since their name can be determined by looking at the routes associated with each segment. address - This should always be empty. point - Specifies the center of the intersection. This should be the last vertex of all the segments which terminate at this intersection. polyline - This should always be empty. polygon - This should always be empty. child - This should always be empty.
*   intersectionGroup (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The artifact or logical intersection group to which this intersection belongs. If present, the intersection group must also refer back to the intersection. If an intersection is within both the artifact and logical group, then this reference should be to the artifact group.
*   segment (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The list of segments that terminate at this intersection, in any order. Note that all segments are directed towards the intersection, i.e. their endpoints indicate what sort of intersection this is. This should not be empty because an intersection with no associated segment is meaningless.
*   tollClusterId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The toll cluster to which this intersection belongs. If present, the toll cluster must also refer back to the intersection.


An instance of a "relation" rule. Each "relation" rule defines a number of clusters, one for each entity B that that has incoming links of a certain type R; all entities with an outgoing link to B of type R are part of that cluster.
*   rule (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoRelationRule.t, default: nil) - The rule that this is an instance of. Required.
*   target (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntityId.t, default: nil) - The one entity that the links of type R point to. Required.

Pattern for a MONTHLY recurrence. A MONTHLY recurrence may be specified in four different ways. These fields should be set in a mutually exclusive way, i.e.: ((month_day OR last_day) XOR (week_day AND (week_day_number OR last_week))) 1. Absolute days of the month (i.e. the 1st and 15th) or relative day from the end of the month (i.e. -1 for last day, -2 for second-to-last day). Set month_day. 2. [Deprecated] Relative last day of the month. Represented as a boolean since the last absolute day number is dependent on the month. This is just a short-cut for month_day=-1 and is deprecated. Set last_day=true. 3. The nth (or nth-last) specific weekday of the month. For example, the 3rd Wednesday of the month. This represents the 3rd instance of a Wednesday of the month, regardless of what weekday the month started on. It does not necessarily mean the Wednesday on the 3rd week of the month. 4. [Deprecated] The last specific weekday of the month. For example, the last Thursday of the month. This is a short-cut for week_day_number=-1.
*   lastDay (type: boolean(), default: nil) - Special flag to indicate the last day of the month, equivalent to setting month_day to -1. Deprecated, use month_day=-1 instead.
*   lastWeek (type: boolean(), default: nil) - Special flag to indicate a week_day in the last week of the month, as this cannot be captured by week_day_number. Deprecated, use week_day_number=-1 instead.
*   monthDay (type: list(integer()), default: nil) - Absolute day of the month (if positive) or relative day from the end of the month (if negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1]. Positive values should correspond to actual calendar day number (indexing starts at 1).
*   weekDay (type: String.t, default: nil) - For capturing the nth weekday of the month. Use together with week_day_number or last_week to specify n.
*   weekDayNumber (type: integer(), default: nil) - The nth occurrence of week_day to match. I.e. For 3rd Wednesday of the month, week_day = WEDNESDAY and week_day_number = 3. Values beyond the end of the month are skipped. If negative, this is interpreted as the nth-to-last occurrence of the week day in the month. I.e. for last Thursday of the month, week_day = THURSDAY and week_day_number = -1.


Proto holding values for details about score and the source model.

The information related to the device. Next ID: 18
*   arbitrationDeviceId (type: String.t, default: nil) - Device identifier string for the current device used in the arbitration service.
*   deviceId (type: String.t, default: nil) - The identification of the device. DeviceId (go/as-device-id) has multiple fields. To consloidate it to a single to make dremel easier, we use the string obtained by calling go/get-device-id.
*   deviceIdLog (type: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsSettingsDeviceIdLog.t, default: nil) - The identification of the device. The logging version of the full DeviceId.
*   deviceIndex (type: integer(), default: nil) - We index linked devices and log these index to avoid logging device_id. device_index should always be a positive number or -1. -1 means this device is not in homegraph.
*   deviceModelId (type: String.t, default: nil) - This is the device_model_id field in device_settings proto. It has the same value for the same type of devices. e.g. Sonos.Sonos One.S13
*   eliminatingLumosProcessor (type: String.t, default: nil) - The lumos processor which eliminated this device, if applicable
*   homeStructureId (type: String.t, default: nil) - The home structure id of the device.
*   isTethered (type: boolean(), default: nil) - This flag indicates this is a non-local device that is tethered to local/originating device. Tethered device is a special case of is_remote and typically used in wearable scenarios. This is always false for local device and when it is true, it implies is_remote is also true.
*   sessions (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceMediaSessionLog.t), default: nil) - This field should be populated only when there is at least one session on this device.
*   surfaceType (type: String.t, default: nil) - This field should be populated only when the device is an Assistant device.




This proto represents either a KG-entity, as represented by it's MID, or free-string text.
*   countryCode (type: String.t, default: nil) - Corresponding country code. Refer to go/people-search-dashboard for code list.
*   name (type: list(String.t), default: nil) - Custom name of entity if there is no corresponding place/entity in KG (mid)





UserProto identifies a (human) user of Geo Data. Its primary use is in describing the source of pieces of data (e.g. edits). It could be a simple identifier, but isn't so that we can store it in the clear while still preventing correlation between a user's contribution.
*   encryptedGaiaId (type: String.t, default: nil) - The user Gaia ID in encrypted form. Wipeout ids take value of "" in bytes.
*   encryptionKeyName (type: String.t, default: nil) - Required. The name of the key used to encrypt the Gaia ID.
*   keystoreConfigId (type: integer(), default: nil) - Required (valid default provided). The config ID of the owner of the above encryption_key_name. This field must be set if the encryption key name is not "mapfacts_gaia_id_encryption_key".
*   username (type: String.t, default: nil) - If possible, writers should set this to a full user email, including the domain. Readers should not assume that this is a well-formed email address. This field may only be set by Atlas, Pushpin and OneRing because they are internal tools which have a PWG exception to store textual usernames in the clear.

A type of sharing target that points to some resource's ACL. Used to refer to the set of Principals that have the given privilege ('role_id') for the given resource ('application_id', 'object_id', 'object_part'). The meaning of 'role_id' is interpreted only by implementations of AclRpcService and is usually dependent on 'application_id' All fields except object_part are required. If present, object_part must be non-empty.

Logs version of the repository_webref. EntityLinkMetadata proto Used to represent QRef implications


Specification of when downtime is enabled on different days of the week. Contains up to 7 DowntimePeriod messages, up to one per day of the week.
*   enabled (type: boolean(), default: nil) - True if this downtime schedule should be enabled.
*   periods (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDowntimePeriod.t), default: nil) - Downtime entries for the days of the week, in no particular order. There can be at most one period defined for each day of the week. Days of the week with no explicit period defined are treated as disabled, so the device is available all day (modulo an end time that may spill over from the previous day).

This protocol buffer holds establishment-specific attributes for features of type TYPE_ESTABLISHMENT.
*   bizbuilderReference (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreBizBuilderReferenceProto.t, default: nil) - Reference to BizBuilder data for this establishment. The bizbuilder_reference field indicates that a feature is claimed in CBDB (with the canonical state in MapFacts). The bizbuilder_reference is different from the social_reference's claimed_gaia_id because some BizBuilder clients will not have +Pages. All claimed businesses should have a bizbuilder_reference.
*   openingHours (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreOpeningHoursProto.t, default: nil) - Opening hours for this establishment, including regular weekly hours and exceptional hours (e.g. on holidays). NOTE: in practice, only the exceptional hours are filled in this message. A schema migration for regular weekly hours was planned back in 2015 (see b/23105782) but was not completed and is (as of May 2018) not prioritized. Clients should continue getting regular opening hours from the hours field above. In openinghours.h there is a utility function GetOpeningHoursFromFeature that merges EstablishmentProto.hours into this proto.
*   priceInfo (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePriceInfoProto.t, default: nil) - Pricing for products and services offered. Example: menus for restaurants.
*   type (type: String.t, default: nil) -  DEPRECATED  This is deprecated in favor of the top-level (in FeatureProto) set of GConcepts. The type of establishment -- see comments above.


Contains fields to identify the device which sent the request.
*   surfaceType (type: String.t, default: nil) - Surface type that the device identifies as.


Feature ID forwardings. There are many different types of ID forwardings, some of which are attached to live features, others to removed features. This information is available in multiple forms (with different completeness guarantees): (1) in RPC responses to read requests to the live Geo repository; (2) on disk, as part of the metadata section of features found in the (inactive) features snapshots; (3) on disk, as part of a separate feature_id_forwardings side table.
*   duplicateOf (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - If the feature has been marked as a DUPLICATE of another feature, this is the feature ID of that other feature. Note that the other feature may itself be removed. This field is always set.
*   forwardedId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The feature ID of the forwarded feature. This field is only set in case (3).
*   inactiveDuplicate (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - If other features have been marked as DUPLICATE of this feature, this is the set of all such feature IDs. All feature IDs in this set should be for removed (aka inactive) features. Note that in the context of historical read requests against MapFacts (when ReadRequest.version_selection.timestamp is set), this field won't be set.
*   replacedBy (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdListProto.t, default: nil) - DEPRECATED - Use feature.metadata.feature_replacement_info instead. This field was never populated.
*   transitivelyDuplicateOf (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - If the feature has been transitively marked as a DUPLICATE of another feature (via a chain of size >= 1), this is the feature ID of that other feature which is the end of the chain. The field is always set even if the chain is of size 1. Note that the other feature may itself be removed. This field is only set in case (3).





List of robots info parsed for the user-agents other than the default used to crawl this page.

An intent configures the behavior of a device action for this device. Next ID: 7
*   argSpecs (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoArgSpec.t}, default: nil) - List of arguments associated this intent. Each of which depends a template for the expected argument.
*   executionConfig (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoExecutionConfig.t, default: nil) - Instructions for the routing of this Intent.
*   name (type: String.t, default: nil) - The name of the intent.
*   providedDataNames (type: list(String.t), default: nil) - List of provided data names used by this intent. Note that some built-in intents will not function properly without provided data, such as action.intent.SwitchChannel or action.intent.AppSelector.
*   triggerConditions (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTriggerCondition.t), default: nil) - The conditions which must be met by the device before executing this Intent. More than one can be provided, in which case the conditions operate with the "AND" operator, i.e. the first condition which is failed will be used to restrict the execution of this Intent.




Represents a score for an entity. Next available tag: 39.
*   bootstrappingPreviousIteration (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefBootstrappingScore.t, default: nil) - If the EntityNameScore is part of a bootstrapped model, then this field contains the score_ratio from the previous model ("Model 0"). If Model 0 does not have a corresponding entry, because it did not know about this name for this entity, then bootstrapping_previous_iteration is left empty.
*   confidence (type: number(), default: nil) - Confidence that this name is a trusted name of the entity. A reasonable threshold for name trust is 0.6. A name can be trusted and still have very low score_ratio, esp. if it is ambiguous (e.g. 'mercury') and/or not the dominant interpretation (e.g. "siberian husky" -> /m/06krnsr (a book)).
*   debugVariantSignals (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefPreprocessingNameVariantSignals.t), default: nil) - Source and score data, this is internal to refx (e.g. for demo/debug).
*   extendedScoreRatio (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExtendedEntityNameScore.t), default: nil) - Stores region specific score ratios for the entity when it is significantly different from the language version above.
*   includeInModel (type: boolean(), default: nil) - Include this name in the name lookup table.
*   internalBootstrapIsOpenWorld (type: boolean(), default: nil) - Transient field, only used in bootstrap pipeline.
*   isClusterGlobal (type: boolean(), default: nil) - Set to true iff the concept is cluster parent and the name can be a name for any child of the cluster. (e.g. 'starbucks' is cluster_global for the [Starbucks] chain cluster).
*   isMatchlessResultContext (type: boolean(), default: nil) - Only for context names: Whether this EntityNameScore represents an entity that was dominant in the search results but was not annotated by QRef during learning. Matchless result contexts are useful for bootstrapping, where different model iterations may have different names and thus context scores from Model 0 that are inconsistent with the names from Model 1.
*   mid (type: String.t, default: nil) - The id of the entity.
*   nameMetadata (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefPreprocessingNameEntityMetadata.t, default: nil) - Metadata about this name aggregated from name signals.
*   rangeMetadata (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRangeMetadata.t), default: nil) - Metadata of segment range, which is annotated by this entity.
*   score (type: number(), default: nil) - The absolute score of that entity. score = artificial_score + volume_based_score
*   scoreRatio (type: number(), default: nil) - Ratio between this entity score and the total score over all entities. This is including the "open world" information if it was estimated.
*   useAsNameCandidate (type: boolean(), default: nil) - When this field is true, we consider this context name as candidate in Enricher's names pipeline.
*   volumeBasedScore (type: number(), default: nil) - Absolute score that comes from quantitative sources such as navboost clicks, anchors, etc. artificial_score = score - volume_based_score

Core signals for video content corpus which will be fetched for every query. If a signal is required only for a subset of search queries then it should be added as a separate field in the schema.

Features and debug info for clusters of caption entity video anchors.
*   aggregateScore (type: number(), default: nil) - The total score used for filtering and selecting entity sets.
*   clusterSize (type: integer(), default: nil) - The prefiltered size of the entity set.
*   entitiesInWebrefEntities (type: integer(), default: nil) - The number of entities in the anchor set that are in the webref entities.
*   entityMentionInDescriptionCount (type: boolean(), default: nil) - The number of anchors where the entity mention text appears in the description of the video.
*   groupCohesion (type: number(), default: nil) - The average cosine similarity between hypernyms of members of the set.
*   hypernym (type: String.t, default: nil) - The most prominent hypernym across the entities in the set.
*   hypernymSalience (type: number(), default: nil) - The salience of the best hypernym for the set.
*   medianMentions (type: integer(), default: nil) - Median number of times any member of the set was mentioned in the ASR transcript.
*   mentionSalience (type: number(), default: nil) - Mentions divided by the total number of entity mentions in the video.
*   salience (type: number(), default: nil) - Salience of the set computed by aggregating the hypernyms from each member and calculating the cosine similarity with the salient terms.
*   topHypernym (type: list(String.t), default: nil) - The top N hypernyms for the entities in the set.
*   totalMentions (type: integer(), default: nil) - Number of times any member of the group was mentioned in the ASR transcript.

When making changes to this proto, make sure to run: blaze test commerce/datastore/tools/codegen:code_generator_test blaze run commerce/datastore/tools/codegen:code_generator See http://go/cds-schema-council for details. LINT. IfChange
*   desnippetedCountryCode (type: list(String.t), default: nil) - List of countries that desnippet the publisher. ISO 3166-1-alpha-2 country code (such as FR). See go/iiuse#region-identifiers. Used in V1.
*   policyCriteriaBase64 (type: String.t, default: nil) - Search Console Signals that modifies how policy are calculated. Didn't add wmconsole.EnpDesnippetingOverrideRules direcly to avoid cicular dependency issue: go/enp-v2#bookmark=id.dvb1qcltabv9 ENPv2 proto (EnpDesnippetingOverrideRules): google3/crawler/wmconsole/proto/config_enp_desnippeting_override_rules.proto
*   version (type: String.t, default: nil) - The default version is V0 (for backward compatibility).

This message logs details on ambiguous device targeting logic. 1. It first takes a list of ambiguous devices 2. Then applies two filters: structure filter and playability filter. 3. If more than one device remains, it tiggers DeviceSelectionDialog to let the user pick one device.
*   ambiguousDeviceIndex (type: list(integer()), default: nil) - Device index of the initial ambiguous devices. The device index in this message is consistent with the device index in DeviceInfoLog. It would be used to track more detailed information of a device if needed.
*   devicesAfterPromoters (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceInfoLog.t), default: nil) - DeviceInfo for devices after the filters and promoters. - When device targeting is only configured for single target, these are ambiguous devices that would have been the output of Lumos. Downstream may perform extra check before disambiguation dialog. For example, Media Initiation checks playability for devices. The output here is before the check. - When configured for multi-target, these are just the target devices. For privacy consideration, we may only log device id field inside.
*   finalTargetDevice (type: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceInfoLog.t, default: nil) - the final targeted device selected by playability filter or DeviceSelectionDialog
*   playabilityFilteredDevicesIndex (type: list(integer()), default: nil) - Device index of the devices after playability filter
*   puntInfoLog (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog.t), default: nil) - When there is no qualified devices after playability check, it would populate punt_info below. If all devices are filtered out for the same reason, there would only be one item. Otherwise, there will be multiple items.
*   structureFilteredDeviceIndex (type: list(integer()), default: nil) - Device index of the devices after structure filter

Represents a way to traverse nested fields by referencing their token fields. Everything starts relative to a known root message, specified externally. E.g., suppose we have a feature proto that has a lane with token 0x123 which in turn has a lane connection with token 0x456 for which we want to assert something about flowline altitudes. The field path in that case will look like: field_path: { field_num: 31 # segment } field_path: { field_num: 6 # lane version_token: "0x123" } field_path: { field_num: 8 # lane_connection version_token: "0x456" } field_path: { field_num: 3 # flow } field_path: { field_num: 1 # track } field_path: { # Note: pose is repeated. By not specifying a token we refer to all poses # in a track. field_num: 2 # pose } field_path: { field_num: 4 # altitude } This path could also be represented succinctly in a more human-friendly form as something like: segment.lane[@0x123].lane_connection[@0x456].flow.track.pose[*].altitude
*   fieldPath (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreStableFieldPathProtoStableFieldSelector.t), default: nil) - A sequence of field selectors to be traversed starting from the root message.

This message summarized anchors of one trusted site.
*   matchedScore (type: number(), default: nil) - Difference in KL-divergence from spam and non-spam anchors. Value >0 indicate that anchor text from this trusted source is similar to anchors classified as spam which means that spammy anchors are legitimate.
*   matchedScoreInfo (type: list(String.t), default: nil) - Detailed debug information about computation of trusted anchors match. Populated only when --anchorspam_penalizer_debug=true
*   phrasesScore (type: number(), default: nil) - Count of anchors classified as spam using anchor text.
*   text (type: list(String.t), default: nil) - Tokenized text of all anchors from the site.
*   trustedScore (type: number(), default: nil) - Fraction of pages with newsy anchors on the site, >0 for trusted sites.








Detailed statistics about the annotations in the document. Contains, for example, the number of ranges with name matches, the number of entities matched, and the number of entities with mentions. This information can be used to tune some WebRef-internal scoring functions based on existing annotations (e.g., document-length normalization in global link support). Next available tag: 10.
*   docWeight (type: number(), default: nil) - The relative weight of the document, used when aggregating information from multiple documents.
*   ngramContext (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefNgramContext.t), default: nil) - Extracted n-grams context scores (in cdoc language, weighted by doc_weight) output if webref_populate_annotation_ngrams is enabled.
*   numConceptsWithCandidates (type: String.t, default: nil) - The total number of concepts with at least 1 candidate.
*   numConceptsWithMentions (type: String.t, default: nil) - The total number of concepts with at least 1 mention.
*   numRangesWithCandidates (type: String.t, default: nil) - The total number of RangeData objects with at least one candidate.

Depending on which Data Acquisition API the client uses, the fetched content can be delivered to the client in the RPC, via Goops, or copied to the client's storage system (possibly after transformation). In the latter case, DeliveryReport will contain info about the delivery status, such as whether we have permission error, whether the destination storage is out of quota, etc).
*   events (type: list(GoogleApi.ContentWarehouse.V1.Model.TrawlerEvent.t), default: nil) - The events store the detail of messages (usually error).
*   filePath (type: String.t, default: nil) - The complete path (include the file name) of the file downloaded. For requests that require delivery, this path will be the user specified location. For requests that use Multiverse default storage, this path will be the managed by Multiverse.

Represents a Google+ Circle. Currently (12/2011), a Circle is identical to the ContactGroup with matching parameters, but Circle must only be used for true Circles and not other Focus groups, and should be preferred over ContactGroup where applicable. Soon it may become more efficient to check membership in a Circle than in a ContactGroup (see http://go/superglue). Support for this principal type is currently (12/2011) incomplete -- e.g., Keystore does not support it yet (see b/5703421).
*   circleId (type: String.t, default: nil) - Circle ID is unique only relative to the owner's Gaia ID. Currently required.
*   ownerGaiaId (type: String.t, default: nil) - The owner of the circle. Currently required.
*   requiredConsistencyTimestampUsec (type: String.t, default: nil) - If present, then tests for membership in this circle must use data known to be at least as fresh as the given (FBS-assigned) timestamp. See http://go/fbs-consistent-read-after-important-write Before using this, be sure that any service checking authorization against this circle supports checking consistency timestamps. For example, as of 12/2011, Keystore only supports this for the Moonshine configuration, and in others authorization checks will fail if the timestamp is present.

SafeSearch video content classification scores are computed based on go/golden7 video features. To access these scores see the library at: google3/quality/safesearch/video/api/video_score_info.h Next ID: 6
*   isAbuseWithHighConfidence (type: boolean(), default: nil) - This is used by Amarna to determine whether it should notify Raffia for immediate reprocessing. This field will be generated in Amarna's image_metadata corpus and exported to references_video_search corpus and written to ExportState.module_state.critical_metadata_checksum for determining whether Amarna should immediately notify Raffia whenever is_abuse_with_high_confidence's value changes.
*   videoClassifierOutput (type: GoogleApi.ContentWarehouse.V1.Model.SafesearchVideoClassifierOutput.t, default: nil) - Output of all SafeSearch video classifiers in Amarna.


Width and height of the original photo in pixels.


This is the log version of fuzzy ngram match results that's used for generating the best fuzzy match. Next ID: 3


Terms from AddressComponent proto that we can use as address synonyms. At the time of annotation we have the entire AddressProto, however we can't use it all due to size. So only store relevant pieces of components (defined in superroot/impls/localweb/s2_synoyms.h).
*   type (type: integer(), default: nil) - The type of the geocoded address. e.g. Road, Lake, Ocean, building. This comes from TypeCategory field in geostore/base/proto/feature.proto

Describes a particular fitness activity, its current state, and other data fields associated with that activity (e.g. elapsed time). LINT. IfChange
*   activityId (type: String.t, default: nil) - Required A string key used as an identifier for this activity. This key needs to be unique amongst all activities on the device. The client can choose a mechanism of its choice to ensure this. If the server suggests an activity_id, the client can either use the suggestion or create a new unique activity_id of its choosing.
*   mostRecentStartTime (type: DateTime.t, default: nil) - DEPRECATED: The most recent time this activity was switched to the ACTIVE state.
*   previouslyAccumulatedDuration (type: String.t, default: nil) - DEPRECATED: The total amount of time this activity has spent in the ACTIVE state until the most recent start time. The total time spent active may be computed by summing (now - most_recent_start_time) with previously_accumulated_duration.
*   state (type: String.t, default: nil) - The current state of this activity.
*   type (type: String.t, default: nil) - The type of activity being done.








The primary key for a MeaningSchema slot. Next ID: 3 For //depot/google3/logs/proto/knowledge/interpretation/intent_query.proto in the "ThenChange", please update Argument. SlotKey. LINT.IfChange
*   mid (type: String.t, default: nil) - The minted MID for the slot. This ID uniquely identifies the slot globally.
*   uniqueId (type: String.t, default: nil) - A stable unique ID for this intent minted from go/uniqueid. NOTE: This is considered a private field used only for internal Intent Catalog purposes (i.e. as a source ID for generating this intent's associated MID). Additionally, this field is only populated on the schema. TODO (b/168907943): Move "unique_id" out of MeaningSchemaSlotKey proto message. Note: Please do not use this field. It is going to be moved out of this proto message.

Entity parsed from manual grammar interpretation in the Personal Intelligence domain.

Details of an achievement that the user has unlocked.
*   achievementName (type: String.t, default: nil) - The name of the achievement.
*   achievementUnlockedIconUrl (type: String.t, default: nil) - The achievement icon url shown to the user if it is unlocked.
*   rarityPercentage (type: number(), default: nil) - Rarity of unlocking this achievement (3% of players unlocked would be 3)

Information about multi-label classification result (the scores and whether frame features were used).

Representation of an object with geometry.
*   geometries (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometry.t), default: nil) - Geometries associated with this object.
*   id (type: String.t, default: nil) - The ID of this CityObject, which must be unique within this CityJsonProto. The ID does not have a meaning outside this CityJsonProto.

Describes restrictions on where the verdict applies. Please use {@code TakedownManager} to evaluate this proto.


See ABUSE_NAME_LAST_MODIFIED in //depot/google3/focus/backend/proto/backend.proto which maps to //depot/google3/focus/proto/profileattribute.proto
*   computedNameChangesRemaining (type: integer(), default: nil) - The number of name changes remaining at RPC request time. This can be more than name_changes_remaining, if user hasn't changed name for some time and accrued quota since last change.
*   computedNicknameChangesRemaining (type: integer(), default: nil) - The number of nickname changes remaining at RPC request time. This can be more than nickname_changes_remaining, if user hasn't changed nickname for some time and accrued quota since last change.
*   nameChangesRemaining (type: integer(), default: nil) - The number of name changes remaining at the time the name was last modified.
*   nameLastModified (type: String.t, default: nil) - The last time the profile name was modified in milliseconds UTC.
*   nicknameChangesRemaining (type: integer(), default: nil) - The number of nickname changes remaining at the time the nickname was last modified.
*   nicknameLastModified (type: String.t, default: nil) - The last time the profile nickname was modified in milliseconds UTC.





A feature’s geometry that is populated from the 3D Geometry Store. Please see go/a3d-and-mapfacts for design details.
*   geometryId (type: String.t, default: nil) - The ID to be used to fetch the feature’s geometry from the 3D Geometry Store.




Contains information about the scores from each individual dolphin ensemble model.
*   dolphinScore (type: number(), default: nil) - The score generated by the Dolphin callout model.


Multimodal features for a single generated topic used to build training data.
*   maxFrameSimilarityInterval (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchFrameSimilarityInterval.t, default: nil) - The similarity info for the frame with maximum similarity to the topic in its visual interval. The repeated similarity field in this proto has a single value corresponding to the maximum similarity. This similarity score is used to filter and pick the training data examples.
*   normalizedTopic (type: String.t, default: nil) - The topic/query normalized for Navboost and QBST lookups as well as fetching of the Rankembed nearest neighbors.
*   saftEntityInfo (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSaftEntityInfo.t, default: nil) - The information about the saft entity annotation for this topic.
*   topicDenseVector (type: list(number()), default: nil) - Raw float feature vector of the topic's co-text embedding representation in the Starburst space.

Note: This is a misleading name as of 2022/10/14. The field is still set and has meaningful data, but no longer holds quality signals. All the data are freshness-related and they're not particularly sensitive.
*   lastSignificantUpdate (type: GoogleApi.ContentWarehouse.V1.Model.QualityTimebasedLastSignificantUpdate.t, default: nil) - Contains a date used for the "Date Last Modified" toolbelt restrict mode. Note: this date is a combined date and is different from the pure shingle-based signal stored in contentage.last_significant_update field.







Features for an individual Shopping Opinions Anchor. This file is used for video anchor use case. Next Id: 34
*   snippetSubSegmentWordCount (type: integer(), default: nil) - The number of words in the ASR for the best matched sub segment.
*   luminScore (type: number(), default: nil) - The Lumin model score for the anchor label against the segment.
*   anchorLabelSentiment (type: number(), default: nil) - The sentiment score of the anchor label, with range: [-1, 1]. If using Lumin Pro/Con tags as the anchor labels, the "Pro" Lumin tag will have a score of 1 and Con Lumin tag will have a score of -1.
*   luminAspectWordsMentions (type: integer(), default: nil) - The number of times words in Lumin aspect (that is not a stopword) being mentioned in the snippet.
*   mumScore (type: number(), default: nil) - The score from the MUM model if the pro/con anchor is extracted by MUM.
*   isCon (type: boolean(), default: nil) - Whether the anchor is classified as a con opinion.
*   proScore (type: number(), default: nil) - The classification score of the anchor being a pro opinion.
*   conScore (type: number(), default: nil) - The classification score of the anchor being a con opinion.
*   snippetSubSegment (type: String.t, default: nil) - The ASR for the best matched sub segment inside the selected segment.
*   snippetSubSegmentQaScore (type: number(), default: nil) - The QA model score for the best sub segment against the question.
*   productNameFromTitle (type: String.t, default: nil) - The product name from title extracted by the grampus model.
*   isProConWhenExtractedFromMum (type: boolean(), default: nil) - True if the anchor is considered as pro or con when extracted from MUM.
*   anchorOrAspectWordsMentions (type: integer(), default: nil) - The number of times words in anchor label or Lumin aspect (that is not a stopword) being mentioned in the snippet. If a word exists in both anchor label and Lumin aspect, it shall be only counted once for a mention in the snippet.
*   snippetSubSegmentSentimentScore (type: number(), default: nil) - The go/scarlett sentiment score of the best matched sub segment. Positive score represents positive sentiment. Negative score represents negative sentiment.
*   anchorOrAspectFirstMentionPos (type: integer(), default: nil) - The smaller number of anchor_label_first_mention_pos and lumin_aspect_first_mention_pos.
*   anchorLabelFirstMentionPos (type: integer(), default: nil) - The first anchor_label mention position (word index, 0-based). It is computed from the snippet_sub_segment if exists. Otherwise it is computed from the snippet. It is not populated if there is no such mention.
*   snippet (type: String.t, default: nil) - The ASR for the selected segment window.
*   aspect (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchAspect.t, default: nil) - Product aspect being discussed by this Shopping Opinions.
*   opinionsDolphinDescriptivenessScore (type: number(), default: nil) - Scores from Opinions Dolphin scorer. Opinions Dolphin scorer is built by finetuning the Dolphin-based Video Anchor Unified Scorer V2 on the Opinions anchors ratings. It outputs two scores, which are optimized for descriptiveness and usefulness ratings respectively. 'descriptiveness_score' measures how well the anchor label describes the video section. 'usefulness_score' measures how useful the anchor label is for jumping to an important section in the video. go/vs-opinions-migration-report
*   isPro (type: boolean(), default: nil) - Whether the anchor is classified as a pro opinion.
*   snippetWordCount (type: integer(), default: nil) - The number of words in the ASR for the selected segment window.
*   babelSimilarityScore (type: number(), default: nil) - The Babel similarity score between the snippet and the anchor label.
*   luminAspectFirstMentionPos (type: integer(), default: nil) - The first Lumin aspect mention position (word index, 0-based). It is computed from the snippet_sub_segment if exists. Otherwise it is computed from the snippet. It is not populated if there is no such mention.
*   snippetQaScore (type: number(), default: nil) - The QA model score for the selected segment window against the question.
*   anchorLabelWordsMentions (type: integer(), default: nil) - The number of times words in anchor label (that is not a stopword) being mentioned in the snippet.
*   mumProductAspect (type: String.t, default: nil) - The product aspect of the pro/con generated using the MUM model.
*   asrForProConExtraction (type: String.t, default: nil) - The asr with sentence break that was used for pro/con extraction.
*   snippetSentimentScore (type: number(), default: nil) - The go/scarlett sentiment score of the selected segment window. Positive score represents positive sentiment. Negative score represents negative sentiment.
*   luminAspect (type: String.t, default: nil) - The lumin aspect of the Pro/Con Lumin tag. e.g. "weight".
*   grampusScore (type: number(), default: nil) - The score from the Grampus model if the pro/con is extracted by Grampus.
*   question (type: String.t, default: nil) - The question used to score this video segment.

A copy of the text of an article along with references to internal figures and external citations, datasets, etc. Next available ID: 19
*   analyzedText (type: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaScaleSet.t, default: nil) - All the text in this article, separated into Sections and Paragraphs. See nlp_sciencelit.ScaleSetExtensions for the extensions to ScaleSet used.
*   citation (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitCitationData.t), default: nil) - All references from this article (Bibliography).
*   earliestPubDate (type: String.t, default: nil) - The result of selecting the earliest date from various metadata (PMC, PubMed Metadata, scholar citations).
*   parsedFrom (type: String.t, default: nil) - Path of the source document from which this was parsed.
*   pubDate (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitPubDate.t), default: nil) - All dates from the PMC article metadata Year/Mon/Day.
*   referencedBlock (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitReferencedBlock.t), default: nil) - All figure captions within this article.
*   scholarSignal (type: GoogleApi.ContentWarehouse.V1.Model.ScienceIndexSignal.t, default: nil) - May also add the Scholar index signal information:
*   source (type: String.t, default: nil) - Source of this article data (e.g., PubMed, scholar index, other source.).
*   wordCount (type: String.t, default: nil) - Number of words in the entire article and everywhere outside of abstract sections.


A DateType configures a value whose type is intended to be a date. LINT. IfChange Next id: 17
*   allowAllRangeResolutions (type: boolean(), default: nil) - If true, will allow all resolutions that are ranges.
*   allowAllResolutions (type: boolean(), default: nil) - If true, overrides all other options in this message and allows any kind of DateTime annotation.
*   allowAllResolutionsExceptHolidays (type: boolean(), default: nil) - If true, will allow all resolutions except holidays.
*   allowAllResolutionsWithout4digit24hrTime (type: boolean(), default: nil) - If true, will allow resolutions that aren't contiguous sequences of 4 digits annotated as 24-hr times. These are often mis-interpreted years or postcodes.
*   allowAllResolutionsWithoutTime (type: boolean(), default: nil) - If true, will allow resolutions without an explicit hour. Symbolic ranges such as [this evening] are not considered as explicit hour, but the range [1-3pm] is considered as explicit.
*   allowDayResolution (type: boolean(), default: nil) - If true, will parse a mention to DateTime of resolution day. This allows parsing strings like "August 30th", "2012-12-25";
*   allowDayResolutionExceptHolidaysOrOrdinal (type: boolean(), default: nil) - If true, will allow day resolutions except holidays or ordinal numbers, such as "today", "December 13", but "Christmas", "first" are not allowed.
*   allowHourResolution (type: boolean(), default: nil) - If true, will allow resolutions with an explicit hour such as "8am", "5pm".
*   allowMonthResolution (type: boolean(), default: nil) - If true, will parse a mention to DateTime of resolution month. This allows parsing strings like "this August", "2012-12";
*   allowNowResolution (type: boolean(), default: nil) - If true, will allow "now" resolutions, but not any other time
*   allowSymbolicTime (type: boolean(), default: nil) - If true, will allow symbolic time resolutions such as "tonight".
*   allowTimeResolutionsWithoutExplicitTimezone (type: boolean(), default: nil) - If true, will allow time resolutions without an explicit timezone.
*   allowYearResolution (type: boolean(), default: nil) - If true, will parse a mention to DateTime of resolution year. This allows parsing strings like "Next year ", "2010";
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

Set only when hyper_reliable is true. These are gcids and scores for hyper-reliable categories in ariane/182060. These are overridden for a few hyper-reliable categories, and may not be present everywhere.

Holds the name specs for the two parts of a name, as they are structured in storage (given and family).


Compressed version of quality_geo_brainloc.goldmine. BrainlocAnnotation for indexing. (See BrainlocAnnotation for detailed documentation.) Next ID: 10
*   topCitiesVocabIds (type: list(integer()), default: nil) - Compressed top locations and their scores. Locations are stored using their model vocab IDs. Location scores are stored using 14 bits of precision (2 bytes).


Represents the summary of member counts of a roster. Used in RosterDetails. Corresponds to http://cs/symbol:google.apps.cloudidentity.groups.internal. Group.DirectMemberCountPerType
*   directGroupCount (type: String.t, default: nil) - Indicates the number of direct sub-rosters of the roster. This comes from http://cs/symbol:google.apps.cloudidentity.groups.internal.Group.DirectMemberCountPerType.group_count
*   directUserCount (type: String.t, default: nil) - Indicates the number of direct, non-roster members of the roster. This comes from http://cs/symbol:google.apps.cloudidentity.groups.internal.Group.DirectMemberCountPerType.user_count


Video level info for online pipeline usage. For example: skip pattern as defined in https://schema.org/SeekToAction.
*   skipPatternStartOffsetInput (type: String.t, default: nil) - startOffset_input name as defined in https://schema.org/SeekToAction
*   skipToTimePattern (type: String.t, default: nil) - Skip to time pattern as defined in https://schema.org/SeekToAction

The restriction issuers here identify "who" issues the restriction. It represents restriction granularity at the issuer level so restrictions from different issuers will not override each other.
*   channelModeratorDetails (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsApiCommentRestrictionIssuerChannelModeratorDetails.t, default: nil) - Only set when the issuer type is CHANNEL_MODERATOR.
*   channelOwnerDetails (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsApiCommentRestrictionIssuerChannelOwnerDetails.t, default: nil) - Only set when the issuer type is CHANNEL_OWNER.




The ChromeOS app information of the provider. Next ID: 3
*   packageName (type: String.t, default: nil) - Unique package name that identifies a ChromeOS app of the provider.

Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService) and in Custard response to client apps that read Prompts.
*   title (type: String.t, default: nil) - Title of prompt/spark being sent.

This structure holds data for application information for rich snippets Next ID: 53
*   extractedIconColor (type: integer(), default: nil) - Top 1 of extracted icon colors. We keep this field for backward compatibility.
*   filteringTag (type: list(String.t), default: nil) - Tags to be indexed for filtering, e.g. "ft_popular_score_gt_1m".
*   size (type: String.t, default: nil) - bytes or numeric with MB or GB
*   isDefaultLangLocale (type: boolean(), default: nil) - Indicates if the localized data comes from default locale. This is needed because the default localized data does not specify its locale. If this is true, lang_locale may not be the correct locale and should be ignored.
*   optionalResult (type: boolean(), default: nil) - Whether this App is optional result for Grid UI.
*   countriesSupported (type: list(String.t), default: nil) - These are currently used only for Google Play.
*   supportsAndroidTv (type: boolean(), default: nil) - Whether this App supports Android TV. Note that some App supports more than one platforms. So we would use boolean for a platform.
*   hasEditorsChoiceBadge (type: boolean(), default: nil) - Whether the app has editors choice tag
*   operatingSystems (type: list(String.t), default: nil) - See google3/quality/richsnippets/schema/data/operating_systems_rules.txt for possible values.
*   screenUrlHref (type: list(String.t), default: nil) - TODO(b/260128276) deprecate this field in favor of image_data.
*   devConsoleId (type: String.t, default: nil) - Developer console ID of the app if it exists. The ID is available for an app registered to Google Developers Console, not Play Developer Console.
*   rating (type: String.t, default: nil) - Ratings and reviews Either for this version only or for all versions to be displayed.
*   langLocale (type: String.t, default: nil) - locale for the localized data, such as name, description and screenshots
*   totalRatingCount (type: integer(), default: nil) - Rating_count including all versions of this application.

The sequence of redirects fetched, if applicable. This includes url plus stats for each hop after the first hop. NOTE: This can be one redirect longer than the chain of redirects followed, in the case where there was a redirect at the end of the chain that the fetcher detected but did not follow.
*   BadSSLCertificate (type: String.t, default: nil) - The server SSL certificate chain in SSLCertificateInfo protobuf format. See this field in FetchReplyData (i.e., the initial hop) for more description on when it will be populated.
*   HSTSInfo (type: String.t, default: nil) - This specifies if the url in a redirect was rewritten to HTTPS because of an HSTS policy for the domain. See comments on FetchReplyData.HSTSInfo for how this field's values. A redirect that was rewritten with HSTS will have HSTS_STATUS_REWRITTEN ## here.
*   HTTPResponseCode (type: integer(), default: nil) - The HTTP response code for this hop. We need this since multiple response codes may have the same redirect type (e.g., 302 and 307 are both REDIRECT_TEMPORARILY), but clients may want to know which one was received. Note this is set only for the hops that are followed (i.e., TargetUrl is present). If the last redirect hop was not followed the fetch status will be URL_NOT_FOLLOWED, and the response code will be in the top level ProtocolResponse field.
*   HopPageNoIndexInfo (type: integer(), default: nil) - Extra trawler::PageNoIndexInfo for this hop. Integer: ORed together bits from trawler::PageNoIndexInfo. The information specified by this field comes from the http header or content of the source url, not the "TargetUrl" in this Redirects group.
*   HopReuseInfo (type: String.t, default: nil) - trawler::ReuseInfo with status of IMS/IMF/cache query, for this hop.
*   HopRobotsInfo (type: integer(), default: nil) - Extra trawler::RobotsInfo for this hop. Integer: ORed together bits from trawler::RobotsInfo
*   HostId (type: String.t, default: nil) - If known, the hostid for this hop
*   HttpRequestHeaders (type: String.t, default: nil) - The http headers we sent for fetching this redirect hop. Not normally filled in, unless FetchParams.WantSentHeaders is set.
*   HttpResponseHeaders (type: String.t, default: nil) - The http headers we received from this redirect hop. Trawler does not fill this in; this is intended as a placeholder for crawls like webmirror that fill in and want to track this across redirect hops.
*   RobotsTxt (type: String.t, default: nil) - The robots.txt we used for this fetch. Not normally filled in unless WantRobotsBody is set.
*   SourceBody (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchBodyData.t, default: nil) - For meta-redirects, this field may contain the body of the source document. Currently only filled client side and not implemented (yet) for server-side redirects.
*   TargetUrl (type: String.t, default: nil) - Difference between the following two fields: TargetUrl is set when we have followed the redirect target, and the url is canonicalized. RawTargetUrl is set in either of the following two cases: (1) The url has not be been followed. For example, the redirect is intended to be handled by the client. In the fetch reply response, you will see the url's status as URL_NOT_FOLLOWED-NOT_FOLLOWED. (2) The extracted redirect url is different from its canonicalized* form. For example, if the target url contains fragments, then this RawTargetUrl will have the fragments. Redirect target

Describes a mention annotated by Webref in the given document.
*   segment (type: list(String.t), default: nil) - Segment types in which the mention appears. Now deprecated, because we only care about CONTENT segments.
*   shortToken (type: list(integer()), default: nil) - Fingerprinted tokens which form the mention span. We are using 32-bit instead of usual 64bit fingerprints - this greatly reduces the memory footprint while still keeping the chance of collision reasonably low for our specific use case (1 in 4 billion).





From google3/quality/qrewrite/proto/account_provenance.proto;l=14 We need to copy this as the above proto has Enum field which is not compatible between proto2 and proto3. go/proto2-versus-proto3#enums

List of holidays that are not fixed absolute or relative dates on the Gregorian calendar.
*   nonFixed (type: String.t, default: nil) - There are 3 types of holidays supported by the datetime subgrammar: 1) NonFixedHolidayEnum: e.g., "easter", "chinese new year". 2) FetchedRelativeDateTime: e.g., "Thanksgiving" => [4th Thursday of November] 3) HolidayByMonthDay: e.g., "xmas" => [December 25] Each holiday of the first type is resolved by a C++ function; the 2nd and 3rd type of holidays are mapped to AbsoluteDateTime and FetchedRelativeDateTime, respectively, in grammar and are not needed to be represented in proto.

Details about gainmap-based HDR formats (e.g. go/ghdr). Notably, images can adhere to multiple gainmap specifications concurrently.
*   adobeHdr (type: boolean(), default: nil) - Indicates that this image can be processed as an Adobe HDR (FlexDR) image by reading the MPF segments.
*   appleHdr (type: boolean(), default: nil) - Indicates that this image can be processed as an Apple HDR image by reading the MPF segments (if JPEG) or HEIF segments (if HEIC).
*   googleHdr (type: boolean(), default: nil) - Indicates that this image can be processed as a go/ghdr (UltraHDR) image by reading the GContainer in the primary XMP block.





The web information of the provider. Next ID: 5
*   homeStorage (type: String.t, default: nil) - Serialized storage (context) persisted and retrieved for the app and home.
*   thirdPartyCustomNluInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesWebProviderInfoThirdPartyCustomNluInfo.t, default: nil) - Info about 3P Custom NLU used in this web provider. TODO(b/321644453) remove when QRewrite is able to call SERoot.


The Assistant mentioned this entity. This corresponds to entities annotated during fulfillment. More specifically, these entities are typically provided by developers either via a Monastery frame or an InteractionBuilder.


A message representing the function call of an answers intent query. Next ID: 21 Important: If you add new fields that do not reflect signals data, but actual semantics of the FunctionCall, please also update CreateFuncallCopyWithoutSignals and CreateFuncallCopyWithArgumentSignals in function_call_utils. LINT. IfChange
*   argument (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgument.t), default: nil) - A list of arguments of this function call.
*   catalogVersion (type: String.t, default: nil) - The corresponding meaning catalog version that was used to generate this FunctionCall.
*   conceptInfo (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryConceptInfo.t, default: nil) - Information about the corresponding Concept for this MRF Expression. For more details see go/concepts-roofshot.
*   contextualSensitivity (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersSensitivitySensitivity.t), default: nil) - Contextual Sensitivity (go/contextual-sensitivity) metadata indicating that a policy- or privacy- sensitive conversation context (previous queries, rewritten user queries, and previous system responses, like attentional entities) is used to generate this FunctionCall. This needs propagation (1) from Interp to DialogIntentState (DIS) (see b/148479837) and (2) from QRewrite/QUS down to Assistant Server's memory finalizer. One can use knowledge/answers/sensitivity/sensitivity_reader.h to parse this proto. NOTE(b/149091449): This is part of the migration of contextual sensitivity protos from Interp sensitivity extension. (nlp::semantic_parsing::sensitivity) to this proto field. See the bug to track the migration progress and for more details.
*   enabledRemodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelingControl.t, default: nil) - Contains data about which remodelings are being used for this funcall. For more information see go/meaning-remodeling-framework.
*   ignoredTokens (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryTokens.t), default: nil) - A list of token lists that were ignored during parsing because they are known context phrases for this interpretation. For example, for query [tell me how tall height of Obama really], assuming "tell me", "tall", "of", "really" are explained and thus ignored, with corresponding prior 0.9, 0.8, 0.7, 0.6, following ignored tokens will be populated: { ignored_tokens { token { ngram: "tell me", prior: 0.9} score: 0.9 } ignored_tokens { token { ngram: "tall", prior: 0.8} token { ngram: "of", prior: 0.7} score: 0.56 // currently score = prior1  prior2  ... * prior N } ignored_tokens { token { ngram: "really", prior: 0.6} score: 0.6 } } These tokens can serve two purpose: 1) debug info to show why an interpretation is generated; 2) carry the signals for downstream usage. Note: This field is under active development, and significant changes could happen. Please contact porky-pig@ if you want to use it.
*   key (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaKey.t, default: nil) - The primary key for this FunctionCall. Note: This is still under development and not available for general use. Contact meaning-platform-eng@ for questions.
*   marker (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMarker.t, default: nil) - The marker specifies the purpose of this meaning struct / function call: Is it asking a question, and if yes, for which slot(s)? Is it a command, statement, etc? This corresponds to a (very coarse) notion of dialog acts. In the absence of this field, it will be inferred using the following algorithm (subject to marker applicability rules specified in marker.proto, see also go/requested-slots): 1) Use the underlying Meaning Schema's default marker, if applicable. 2) Assume that the Meaning Struct is polar or a statement. The presence of a marker will affect the value type of this function call.
*   modifiers (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentModifiers.t, default: nil) - A flattened representation of all intent modifiers that apply to this function call.
*   name (type: String.t, default: nil) - Name of this function call. The name must be present. If it is omitted, the FunctionCall is not well-formed.
*   sensitivity (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersSensitivitySensitivity.t, default: nil) - Intent level query sensitivity (go/sensitive-intents). This metadata comes directly from Intent Catalog, indicating a single-shot query sensitivity without putting context into considerations. Therefore, this requires a one-to-one match with each intent registered in Intent Catalog.
*   unexplainedTokens (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryTokens.t), default: nil) - A list of tokens that were ignored during parsing that cannot be explained by context phrases.

Pattern for a DAILY (or every N day) recurrence. Time of the day that the notification will occur is taken from the Prompt that owns this recurrence. Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)




Types of providers that are supported by the client. For example, ChromeOS support both web app and Android app (for eligible devices).

Token level timing information for ASR spans. This is expected to be extracted from PseudoVideoData in the CDoc. Next ID: 5
*   confidence (type: number(), default: nil) - Generated from th PseudoVideoData Timestamp Confidence field, which is quantized values in range 0-127. To convert to range 0-1 this field divides the PseudoVideoData Timestamp Confidence field by 127.

Specification of times when most features on a device are disabled for certain users. During these periods, the device will respond to most interactions with something like "sorry, I'm sleeping right now". Design: go/home-ft-settings-storage PRD: go/home-family-tools-prd
*   targets (type: list(String.t), default: nil) - The set of users of this device that will have these downtime settings applied. Must have at least one element.




The information about spoken content that's based on purely the media resource contents (and not the embedding page or context, etc).
*   audioDuration (type: integer(), default: nil) - Duration of audio in processed fragment (including non-speech), in seconds.
*   audioOnly (type: boolean(), default: nil) - If true, the media file is audio-only. If false, also has video track(s).
*   estimatedAudioDuration (type: integer(), default: nil) - Estimated duration of audio in the whole file (including non-speech), in seconds. If this is greater than 0, then it will either be equal to audio_duration (when truncated_file is false), or to the length of the content (audio or video) according to the file header (when truncated_file is true).
*   estimatedAudioDurationConfidence (type: number(), default: nil) - Our confidence in the duration estimate, on a scale from 0 (not confident) to 1 (very confident). An estimate should have a confidence of at least 0.5 if it is to be shown to users.
*   languageCode (type: String.t, default: nil) - The spoken language, see i18n/identifiers/languagecode.h and go/gl2014. This may or may not match the language of the written page. (Examples: "en", "sv", "zh-CN").
*   recognizerAccuracy (type: number(), default: nil) - Measure of the estimated output accuracy from the speech recognition code, from 0 to 1. Based on word-level confidence and possibly other factors.
*   speechDuration (type: integer(), default: nil) - Duration of speech in processed fragment, in seconds.
*   truncatedFile (type: boolean(), default: nil) - If true, we may have processed a truncated file (most likely due to a size-cutoff when crawling). As a result, the audio duration is a lower bound and the other fields reflect only the processed prefix of the file.




Message to contain scoring / debugging information. If you want to add information which is not directly used in the final VideoAnchor data, it should be put here. Next ID: 27
*   babelCheckpointPath (type: String.t, default: nil) - The path to the particular babel checkpoint
*   captionSpanAnchorFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionSpanAnchorFeatures.t, default: nil) - Features for caption span anchors for use in training.
*   descriptionAnchorFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDescriptionAnchorFeatures.t, default: nil) - Description anchor features for use in training.
*   filterReason (type: list(String.t), default: nil) - A description of why the anchor was removed. This is intended for debugging anchor sets which use multiple heuristics to filter anchors.
*   filtered (type: boolean(), default: nil) - Whether or not the anchor will be removed in the final proto.
*   listTrainingDataAnchorFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchListTrainingDataAnchorFeatures.t, default: nil) - Anchor level metadata about the description anchors used to build training data for list anchors.
*   multimodalTopicTrainingFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMultimodalTopicTrainingFeatures.t, default: nil) - Features for a generated topic used to build training data for multimodal topics.
*   normalizedBabelEmbedding (type: list(number()), default: nil) - Normalized babel embedding of anchor.label(). If the label has more than one sentences, the embedding will be the averaged normalized embedding of each sentence.
*   ocrDescriptionTrainingDataAnchorFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrDescriptionTrainingDataAnchorFeatures.t, default: nil) - Anchor level metadata about the join of description anchors and OCR data which is used to build training data.
*   qnaAnchorFeatures (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchQnaAnchorFeatures.t, default: nil) - Q&A anchor features for use in training.


These capabilities are associated with Assistant Settings on devices.
*   carSettingsCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCarSettingsCapabilities.t, default: nil) - Capabilities that are associated with Assistant Settings on auto surfaces.
*   reissueQueryAfterMusicSetup (type: boolean(), default: nil) - Whether the client supports reissuing query after setting up in Music Settings.

Describes the capabilities that are related to the execution of client ops on the device.
*   supportsClientOpPreloading (type: boolean(), default: nil) - Completes the preloading ie., sets up the stage for the execution of client ops on the device while the previous conv delta is being executed. Refer to go/preload-convdelta for more information.
*   supportsNonFinalizedResponses (type: boolean(), default: nil) - A value of true indicates that the client supports streaming of non-finalized responses by use of ClientExecutionParams.response_stream_id. and ClientExecutionParams.to_be_finalized.


Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
*   description (type: String.t, default: nil) - Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
*   expression (type: String.t, default: nil) - Textual representation of an expression in Common Expression Language syntax.
*   location (type: String.t, default: nil) - Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
*   title (type: String.t, default: nil) - Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.

LINT. IfChange go/shed-per-trait-routing. Making it object to allow for extendible design, where we can add attributes in future.
*   trait (type: String.t, default: nil) - Trait name, e.g., "action.devices.traits.MediaInitiation". See device traits. See java/com/google/home/graph/common/devices/config/protoconf.pi for the exhaustive list of trait-strings.

Stores one location and all meta-data associated with that location.
*   clickRadius50Percent (type: integer(), default: nil) - The radius (in miles) around the assigned location that the document gets 50% of its clicks.
*   confidence (type: number(), default: nil) - Confidence on the location. Ranges in [0.0, 1.0]. Cleared during index creation.
*   confidencePercent (type: integer(), default: nil) - Confidence mapped to [0, 100]. Converted to integer for efficient storage. Populated during index creation.
*   internalId (type: integer(), default: nil) - Used for compressed docloc data. In compressed data, instead of location_info, only an integer ID for that LocationInfo is stored. A separate lookup table is used to get full LocationInfo from the internal ID.
*   propagatedFromASubpage (type: boolean(), default: nil) - True if this location is assigned to one of the subpages, and not to the page itself. If the total number of locations assigned to all the subpages of a page is small (usually up to 5), then that page also gets assigned those locations, and this flag is set for those locations.

Used to help display language-specific names of attributes.

A protocol buffer to store the OCR annotation. Next available tag id: 10.
*   ocrAnnotationVersion (type: String.t, default: nil) - A string that indicates the version of SafeSearch OCR annotation.
*   ocrProminenceScore (type: number(), default: nil) - The score produced by Aksara geometry and spoof score. Describes the 'visibility' or 'importance' of the text on the image [0, 1]
*   prominentOffensiveScore (type: number(), default: nil) - Same as offensive_score, but weighted by prominence.
*   prominentVulgarScore (type: number(), default: nil) - Same as vulgar_score, but weighted by prominence.
*   vulgarI18nBit (type: boolean(), default: nil) - Presence of i18n-recognized vulgar term in the OCR.


IMPORTANT NOTES: - Requesting person.birthday requires membership in the purpose limited data ACL group sgbe-ac-d-birthday-(read|mutate). Contact people-api-eng@ for assistance with initial setup. - The birthday field should not be used to calculate the requester's age! To determine the requester's age, use person.age_range_repeated. - For more details about age see go/peopleapi-howto/age Birthday value may not be present: - Consumer users generally required to have account birthday set (required at account creation), though some users created via legacy flows may not have birthday present. - Dasher users generally don't require birthday, but could optionally have it set by users. - Any other types of accounts (e.g. robot, service) do not have birthdays. - Account Birthday field may be present but without birthday value set for grace period birthday (provisional new birthday). For users that do have birthday data: - "Profile Birthday" (person.birthday.metadata.container is PROFILE) may not have a year set if user "hides" the year. - "Account Birthday" (see api-specific notes below) will only be returned for the requester's own profile. - People API (go/peopleapi):  Account birthday is only supported in GetPeople for PeopleAPI.  If account birthday is needed, use a request mask with: include_field { paths: "person.birthday" } include_container: ACCOUNT - People API++ (go/peopleapi++):  Account birthday is supported for most apis in PeopleAPI++.  If account birthday is needed, use a request mask with: include_field { paths: "person.account_birthday" } include_container: PROFILE (note: it will also need include_container: DOMAIN_PROFILE because they must be requested together: go/people-api-masks#profile-domain_profile) - See go/papi-vs-papi++#birthday for more details.
*   birthdayDecoration (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoBirthdayDecoration.t, default: nil) - Whether the user has opted in to display their birthday via photo decorations. Only supported for PROFILE/DOMAIN_PROFILE container.
*   calendarDay (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t, default: nil) - Birthdays are more accurately represented as a calendar day that does not depend on a timestamp representation at all. When given a timestamp, there are lots of opportunities to make mistakes, so a CalendarDay proto is replacing timestamps. Currently this is always returned by PeopleApi on reads that include birthday fields. New clients should write using calendar_day. Clients that were already writing via date_ms are allowlisted such that writes use that field. Old callers should migrate to writing BOTH date_ms and calendar_day values. If those are consistent, they may be removed from the 'legacy_timestamp_event_write_behavior_enabled' capability.
*   dateMs (type: String.t, default: nil) - Birthdays are currently represented as timestamp values, although the interpretation of these timestamp values is a calendar date. Clients are recommended to read the calendar_day field, which is easier to work with than date_ms. New clients writing to PeopleApi must set calendar_day instead of date_ms. There are a few important details about how this value should be mapped to a calendar date that should be consistent among all clients. 1. Epoch - The epoch or calendar date equivalent to 0 ms is chosen to be 1970-01-01 UTC. 2. Timezone - All of the conversions to calendars should occur in the UTC timezone. We don't typically think of someones birthday changing when they travel, so clients should not use local times. 3. Calendar - The calendar used for the dates should be a Gregorian proleptic calendar. Proleptic means that the rules of the Gregorian calendar are retrofitted to before its adoption. It is easy to get this wrong, particularly with the java GregorianCalendar class, which by default is a mixed Gregorian/Julian calendar. Joda Time makes this easy, but if it's not an option, look into GregorianCalendar.setGregorianChange(). 4. Omitted years - Clients have chosen to represent birthdays or events without years as timestamps within the year zero. When the computed date has a year of 0, it means the client did not specify a year. Note that a year 0 does not exist in a chronology like the familiar Anno Domini (A.D. and B.C.); clients must agree on year numbering. 5. Year Numbering - The chronology used to map dates to the calendar should use Astronomical Year Numbering so that the year 0 is defined and dates before it have a negative year. If libraries only provide Anno Domini, then the year of 1 BC corresponds to year zero and an omitted user provided year. Other BC values are presumed rare, but clients should still not ignore the era and interpret the year as an A.D. value, especially if writing values back to PeopleApi.
*   dateMsAsNumber (type: String.t, default: nil) - date_ms_as_number contains the same data as date_ms, but has a different type in generated javascript bindings. Non javascript clients can ignore it.
*   prompt (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPrompt.t, default: nil) - People Prompts settings for contact birthday data. Only supported for CONTACT container.
*   value (type: String.t, default: nil) - Actual value entered. Allows unstructured values.

The context providing the User Location (not just Elsewhere). This is a legacy name from when it was only set for users working remotely, now it is also set when the user is working from the office.
*   location (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserLocation.t, default: nil) - The new location of the user. Might represent home, office, or a custom address on the map.


A message that stores information about Local results to be used in the Packer for Local Categorical derived intent deduplication and conformance.


Represents text (with an associated language) that is affixed to the beginning and/or end of a primary text.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. These strings should be treated as opaque blobs. You can use LanguageCodeConverter::FromOther to convert the string to a LanguageCode reference. You can then call methods on the LanguageCode class to extract language/script/region subtags (if any). See also http://g3doc/i18n/identifiers/g3doc/using-iii. We place extra restrictions on languages in addition to what the III library requires. See http://go/geo-schema-reference/feature-properties/languages.md
*   prefix (type: String.t, default: nil) - Text to prepend to the primary text, including any necessary trailing whitespace. At least one of prefix or suffix is required.
*   suffix (type: String.t, default: nil) - Text to append to the end of the primary text, including any necessary leading whitespace. At least one of prefix or suffix is required.

An attached 3D look up table


A list of amenity constraints. There is an implicit AND relationship between the different constraints.
*   type (type: list(String.t), default: nil) - Applied amenity constraints. Nothing should be inferred about the ordering of the values in this field.

Information regarding links between annotated entities. Next available tag: 5
*   entityIndex (type: integer(), default: nil) - The index of the entry in WebrefEntities.entity that the entity carrying this field is linked to. This field must be set.
*   linkWeight (type: number(), default: nil) - The weight of the link.

NOTE: In segindexer, the docproperties of a document may be reused from a previous cycle if its content is not changed. If you add a new field to DocProperties, make sure it is taken care (i.e., gets copied from a previous cycle to the current document) in CDocProperties::EndDocument().
*   avgTermWeight (type: integer(), default: nil) - The average weighted font size of a term in the doc body
*   numTokens (type: integer(), default: nil) - The number of tokens, tags and punctuations in the tokenized contents. This is an approximation of the number of tokens, tags and punctuations we end up with in mustang, but is inexact since we drop some tokens in mustang and also truncate docs at a max cap.
*   timestamp (type: String.t, default: nil) - The time CDocProperties::StartDocument() is called, encoded as seconds past the epoch (Jan 1, 1970). This value is always refreshed and not reused.
*   title (type: String.t, default: nil) - Extracted from the title tag of the content. This is typically extracted by TitleMetaCollector defined at google3/segindexer/title-meta-collector.h. Please see its documentation for the format and other caveats.


List of { predicate, { object } } to be processed as a Nested Struct. Nested Struct can be recursive. NestedStruct.property_value(i).value(j) may have nested_struct field.

A single availability range. The displayed status should be the same during the entire time range.
*   contexts (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserContext.t, default: nil) - The contexts contain additional information about the current user's availability or its upcoming changes. The client doesn't need to extract certain bits to visualize the status or apply custom logic based on the content of this field: the status field should contain everything needed for the correct visualization.
*   status (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserStatus.t, default: nil) - The user status during the time range.
*   timeRange (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaTimeRange.t, default: nil) - The time range when this availability should be displayed.




General information about activities in the app.
*   activeLaunchableActivities (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfoActivityInfoActivity.t), default: nil) - Activities that are currently active and tagged as ACTION_MAIN and CATEGORY_LAUNCHER. Includes the activity corresponding to android_intent if it falls under CATEGORY_LAUNCHER.

Measures in the documents. This covers both time expressions as well as physical quantities.
*   value (type: String.t, default: nil) - Measurement value and unit.


These capabilities represent the audio input features associated with the device. This includes what kind of audio input the device can handle, and what the privacy circumstances of that input are.


A collection of information that applies to a polygonal area.
*   restriction (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t), default: nil) - The set of restrictions that apply to a zone. These restrictions may limit the routability of every segment contained within the defined feature.polygon. Repeated restrictions are treated collectively as an OR meaning that segments in the zone are only routable if none of the restrictions apply. If any segments within the defined polygon should not have these restrictions applied, they must list this regulated area's feature id in their feature.exempt_regulated_area field.

Used by on-device Heron. Contains information about the type of slot value returned.
*   numberValue (type: float(), default: nil) - Represents number value. In accordance to ParamValue fields(https://source.corp.google.com/piper///depot/google3/third_party/java_src/appactions/proto/app_actions_data.proto;rcl=431529042;l=12)




A set of vehicle attribute conditionals (ex: weight >= 20T && num_trailers = 2) used to define a slice of all possible vehicles. This can be useful for filtering one or more vehicles by a predicate.
*   axleCount (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "count < 4" AND "count >= 2" means "2 <= count < 4").
*   hasTrailer (type: boolean(), default: nil) - Whether the applied vehicle types have a trailer attached to them.
*   hazardousGoods (type: list(String.t), default: nil) - List of prohibited hazardous goods for a vehicle to carry. A repeated value here is treated as an OR operation, meaning that they may not carry ANY of the goods listed.
*   numTrailers (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "count <= 4" AND "count > 2" means "2 < count <= 4").
*   trailerLength (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "length <= 53ft" AND "length > 48ft" means "48ft < length <= 53ft").
*   vehicleHeight (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "height > 3m" AND "height <= 5m" means "3m < height <= 5m").
*   vehicleLength (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "length <= 40m" AND "length > 35m" means "35m < length <= 40m").
*   vehicleWeight (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreWeightComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "weight < 8T" AND "weight >= 3T" means "3T <= weight < 8T").
*   vehicleWidth (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t), default: nil) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "width < 4m" AND "width >= 2m" means "2m <= width < 4m").

Groups together the NameInfo for all variants of a given name. The variants of a name have the same normalized string, but they have a different original string and/or a different language/region. Example: For the name "apple", there may be variants such as "apple|en", "apple|en|US", "apple|de", "Apple|en"...
*   variantInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefNameInfo.t), default: nil) - All the variants of this name together with associated information such as score, sources, etc.








Metadata about the join of description anchors and OCR data which is used to build training data.
*   editDistance (type: integer(), default: nil) - The string edit distance from the anchor label to the nearest OCR text.
*   matchedDescriptionText (type: String.t, default: nil) - The description anchor text used for matching to OCR text.
*   matchedFrameTimeMs (type: integer(), default: nil) - The time of the selected OCR frame in ms. The best frame in a window around the target description anchor will be selected.
*   matchedOcrText (type: String.t, default: nil) - The OCR text that was the best match for the nearby description anchor.

Specifies usage of mesh projection. "content" contains the mshp atom: version/flags, CRC, compression method, description of the mesh(es) (vertices, coordinates corresponding to each vertex, and vertex lists to describe the projection). See go/pir-spec for mshp atom data layout.
*   bounds (type: GoogleApi.ContentWarehouse.V1.Model.VideoFileSphericalMetadataFOVBounds.t, default: nil) - Once mesh is analyzed, this field contains the bounds of the mesh(es) In case of stereo mesh, this will be the aggregate of both eye meshes
*   type (type: String.t, default: nil) - The mesh type field will only be populated when we have done analysis on the mesh. If this field is missing, mesh analysis has not been done.




//////////////////// DeviceContactId ////////////////////// Used by Device Contacts only. For more details see go/fbs-support-for-device-contacts.




A taxonomic category. A classification consists of weight (totalling 1.0) distributed among one or more categories.
*   discreteWeight (type: integer(), default: nil) - go/petacat-faq#how-should-i-interpret-classification-weights Discrete to reduce size. Range is [0,127], corresponding to [0.0,1.0].
*   id (type: integer(), default: nil) - The category's ID, e.g. 20 for /Sports in the go/verticals4 taxonomy.

A generic representation of a local result returned by a local backend. Next ID: 33
*   adminArea1 (type: String.t, default: nil) - This field can represent different areas depending on the country. For example in the US it is state but in Canada it would be a province.
*   availableIntents (type: GoogleApi.ContentWarehouse.V1.Model.QualityDialogManagerLocalIntentOptions.t, default: nil) - The set of available intents changes with result. An intersection of available_intents and allowed_intents (See: local_config.proto), is shown to the user.
*   businessType (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalBusinessType.t, default: nil) - Bitset of business types this result falls into. Many fields in this message may be unset - expect good coverage for restaurants and hotels for now, but not for other verticals.
*   countryCode (type: String.t, default: nil) - The two-letter ISO 3166-1 country code of this result. Generated by FindFeatureCountryCode http://google3/geostore/base/public/country.h?l=39&rcl=154898119 so it should always be populated, but technically there is no guarantee.
*   distanceMeters (type: String.t, default: nil) - For a directions result, this field will be the distance from the origin to this result using the best measure we have available - the distance along a route, if we have one, or just the crow's flight distance. For a local result, this field will be the crow's flight distance from the user to the result.
*   distanceUnits (type: String.t, default: nil) - The standard units of the location where the user is based (not their current location). For example, miles for a user from the US, kilometers for the UK. A US user currently in the UK should have units read in miles.
*   externalIds (type: GoogleApi.ContentWarehouse.V1.Model.QualityDialogManagerExternalIds.t, default: nil) - Various external IDs that we may have for this result.
*   inUserAdminArea1 (type: boolean(), default: nil) - If true, this LocalResult is located in the same state as the user's location.
*   inUserCountry (type: boolean(), default: nil) - If true, this LocalResult is located in the same country as the user's location.
*   inUserLocality (type: boolean(), default: nil) - Whether this result is in the same city or town that the user is in.
*   isBusinessChain (type: boolean(), default: nil) - If the original query had a chain intent, and this result is for a business chain.
*   name (type: String.t, default: nil) - The name of the result, extracted from its FeatureProto's name field.
*   neighborhood (type: String.t, default: nil) - Neighborhood within a city. This field is not likely to be set for towns or smaller cities.
*   resultId (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocalResultId.t, default: nil) - All info we will need to lookup this result in search.
*   synonym (type: list(String.t), default: nil) - A list of text synonyms the user could use to refer to the result.
*   ttsAddress (type: String.t, default: nil) - The address of this result formatted for TTS output. This formatting removes acronyms like 2-letter state codes as they cannot be spoken well.





To indicate whether the image or video is to be deleted from the repository due to legal reasons or hidden from search results.

The FileAs field in Contacts is used to override the DisplayName of a Contact for that User.

A span of text that is written using a specified language (or languages). language_spans do not need to cover all of the characters in a text -- in particular, some pieces of text may not use any language. Depending on the model used to generate them, multilingual text can be encoded using overlapping or non- overlapping language_spans; and using one or multiple language_codes per language_span.
*   bytes (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t, default: nil) - The bytes in this span.
*   characters (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t, default: nil) - The characters in this span.
*   document (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The document that contains this span.
*   languageCode (type: list(String.t), default: nil) - A set of BCP-47 codes indicating the language(s) of this span of text.




Represents an amount of money with its currency type.
*   nanos (type: integer(), default: nil) - Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units=-1 and nanos=-750,000,000.
*   units (type: String.t, default: nil) - The whole units of the amount. For example if currencyCode is "USD", then 1 unit is one US dollar.

Provider. Like, Spotify or iHeartRadio. Next ID: 13
*   androidAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfo.t, default: nil) - The android app information of the provider.
*   castAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCastAppInfo.t, default: nil) - The cast app information of the provider.
*   chromeosAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesChromeOsAppInfo.t, default: nil) - The ChromeOS app information of the provider.
*   fallbackUrl (type: String.t, default: nil) - A URL to fallback to if app can not be opened.
*   iconImageUrl (type: String.t, default: nil) - Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com/UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM
*   iosAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesIosAppInfo.t, default: nil) - The iOS app information of the provider.
*   kaiosAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesKaiOsAppInfo.t, default: nil) - The KaiOS app information of the provider.
*   sipProviderInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSipProviderInfo.t, default: nil) - The sip information of the provider.

Mention resolution for encoding the concept id (e.g. mid) for a mention.

Identifier for frames associated with a video.
*   timestampMs (type: integer(), default: nil) - Offset of the frame from the beginning of the video (in milliseconds).

A Topic represents a Knowledge Graph entity with its associated properties and their values.
*   id (type: GoogleApi.ContentWarehouse.V1.Model.FreebaseId.t, default: nil) - The id (mid and human-readable id) of the topic. The id will always be present and will contain a mid value for topics in the topic sstable.
*   propertyValue (type: list(GoogleApi.ContentWarehouse.V1.Model.FreebasePropertyValue.t), default: nil) - The property-value bindings associated with the topic. Note that in the case where a property is relevant to a topic based on its type, but no values of that property are present for the topic, the PropertyValue will simply not appear, rather than being present with a null value, or empty repeated value list.

A single Mention within a segment as defined by SegmentMentions. SegmentType

SignalTermData is signal-specific term-level information. Stores mostly internal data as it is one of the primary data structures used in the populators.
*   bigramDiscountTf (type: number(), default: nil) - The deduction of bigram counts from its unigram children. This field is only available in debug mode.
*   bigramness (type: number(), default: nil) - How much we trust this bigram. For bigrams only. Range: [0.0, 1.0] This field is only available in debug mode.
*   centrality (type: number(), default: nil) - Measures how topical this term is to a particular signal. A term like "lincoln" in the Abraham Lincoln's Wikipedia page should have a centrality close to 1.0 while non-central terms like "florida" should have a centrality close to 0.0. Range: [0.0, 1.0] This field is only available in debug mode.
*   correctedTf (type: number(), default: nil) - The final term frequency for a particular term. This field is only available in debug mode.
*   expectedTf (type: number(), default: nil) - The term frequency we were expecting for a term given its IDF. Range: [0, observed_volume] This field is only available in debug mode.
*   globalNpmi (type: number(), default: nil) - Global NPMI. For bigrams only. This is a measure of the quality of bigrams calculated using IDF. Range: [-1.0, 1.0] This field is only available in debug mode.
*   idf (type: number(), default: nil) - The IDF of the label of a particular term. For a canonical term, this is the mean IDF of its originals, weighted by their observed TF. This field is only available in debug mode.
*   isBigram (type: boolean(), default: nil) - Whether or not this term is a bigram. This field is only available in debug mode.
*   label (type: String.t, default: nil) - Raw string that identifies a particular term. This field is only available in debug mode.
*   localNpmi (type: number(), default: nil) - Local NPMI (normalized pointwise mutual information). For bigrams only. This is a measure of the quality of bigrams calculated using observed TF. Range: [-1.0, 1.0] This field is only available in debug mode.
*   observedTf (type: number(), default: nil) - The observed term frequency in a particular signal. This field is only available in debug mode.
*   originalTerm (type: list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalTermData.t), default: nil) - The list of the original terms for a canonical. This is used in the pipeline and it is not present in the final output. This field is only available in debug mode.
*   rawTf (type: number(), default: nil) - The raw term frequency in a particular signal. This field is only available in debug mode.
*   salience (type: number(), default: nil) - The measure of how important this term is in this signal. Range: [0.0, 1.0] This field is only available in debug mode.
*   source (type: String.t, default: nil) - source is the type of the signal of this SignalTermData.







An ExceptionalHoursProto holds information about exceptional (non-regular) hours for a business, such as holiday hours.
*   hours (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreBusinessHoursProto.t, default: nil) - The weekly schedule to be applied for the dates that fall within the range. The schedule may contain hours only for days of the week that occur during the date range specified in the range field.
*   range (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeIntervalProto.t, default: nil) - The dates for which this exception applies, expressed as a half open interval. For example, an exception that applies for the entire month of December 2015 should have a range December 1, 2015 to January 1, 2016. Any regular hours that start on days in this range are ignored and replaced by the exceptional hours for that day. The TimeIntervalProto for the range must be a fully specified, non-empty, and non-inverted range of dates. Concretely, the requirements are:  the range must be a TYPE_RANGE interval  the interval may not be inverted  the endpoints of the interval must specify a year, month, and day  the day_type of each endpoint must be type DAY_OF_MONTH  the endpoints may not specify hour, minute, second, week, or week_type  the begin endpoint must predate the end endpoint


GeoTopicality of a document is a set of GeoTopics ordered by their normalized scores.
*   componentScores (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsGeoTopicalityScore.t), default: nil) - The raw scores used to calculate the normalized_score. Note that not all these scores may be exposed to the users.
*   establishmentType (type: integer(), default: nil) - Sub type for POI types like ESTABLISHMENT_POI, ESTABLISHMENT_GROUNDS & ESTABLISHMENT_BUILDING
*   latE7 (type: integer(), default: nil) - Latitude and Longitude of the location.
*   locationName (type: String.t, default: nil) - Name of the Geographic location. This is the normalized name.
*   normalizedScore (type: number(), default: nil) - A score [0, 1] indicating the likelihood of the location being the GeoTopicality.
*   sumContainedPoiNormalizedScores (type: number(), default: nil) - The sum of the normalized scores of POIs contained within a particular locality.

Following signals identify spike of spammy anchor phrases. Anchors created during the spike are tagged with LINK_SPAM_PHRASE_SPIKE.
*   phraseAnchorSpamCount (type: number(), default: nil) - How many spam phrases found in the anchors among unique domains.
*   phraseAnchorSpamDays (type: number(), default: nil) - Over how many days 80% of these phrases were discovered.
*   phraseAnchorSpamFraq (type: number(), default: nil) - Spam phrases fraction of all anchors of the document.

------------------------------------------------------------------------- The total number of redundant anchors dropped per (domain, text). If we receive a large number of anchors from a particular domain, then we'll throw out all but 200 of them from that domain. The data is sorted by the (domain, text) pairs. This is capped at 10,000 entries (if less, it will have the same number of elements as the above_limit count).


Response proto for the LangId service running on a Greco server in prod. Next Tag: 6
*   endTimeUsec (type: String.t, default: nil) - The end time of the input audio that this result refers to. This value should increase across LanguageIdentificationResult emitted by the Greco server running LangId, and reflects the server having processed more of the input audio.
*   rankedTopSupportedLanguages (type: list(GoogleApi.ContentWarehouse.V1.Model.SpeechS3Locale.t), default: nil) - Ranked list of top-N language codes. Ranking is based on ConfidenceIntervals of supported languages, and N is defined in the LanguageIdentificationConfig.
*   startTimeUsec (type: String.t, default: nil) - Global start time. This value should be fixed across all LanguageIdentificationResults for a given utterance.
*   voicedUtterance (type: boolean(), default: nil) - Identifies when the provided audio sample does or doesn't contain voiced samples. E.g. an unvoice utterance happens when the EOS signal is received before any frame because all frames were filtered by the endpointer. For events where voiced_utterance is false, ranked_top_supported_languages is defined but scores are not to be trusted. All LanguageIdentificationResults contains a valid value of voiced_utterance.

Represents the case where there is a target device with low confidence so that the library didn't directly target it. Instead, the library returns the low confidence target device and the fallback device for the client to decide to either trigger a dialog to disambiguate or select one of them based on extra business logic. Next ID: 3




A membership that the person has. The person can be a member of multiple circles and multiple contact-groups. A circle membership is created by adding a person to a circle by person-id or by email. A contact-group membership is created by adding a contact to a contact-group.
*   contactGroupId (type: String.t, default: nil) - The contact-group that the person belong to. The id can be either a hex-formatted id or a camel-cased SystemContactGroup predefined group name. The id will be predefined group name iff the system_contact_group_id has a value.
*   delegatedGroupInfo (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiDelegatedGroupInfo.t, default: nil) - Information related to delegated group that this contact belongs to.
*   systemContactGroupId (type: String.t, default: nil) - This field will be populated when the membership is in a system-reserved contact-group.

A name for a Feature (street name, point of interest, city, building, etc). We currently use NameProto for two essentially disjoint purposes: 1. Common names, which can be language-specific, or have other kinds of variations. 2. Opaque IDs, such as postal codes, which only have the text field set, and potentially some flags. This includes internal-only features like template ids. Each NameProto representing a common name corresponds to an assertion that a fluent speaker or writer of a language would recognize NameProto.text to name the given feature in that language. As such, NameProtos are stored in a repeated field, often having: 1. multiple names with the same text and varying languages, and 2. multiple names with the same language and varying texts.
*   flag (type: list(String.t), default: nil) - clang-format on The set of flags that apply to this name.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. These strings should be treated as opaque blobs. You can use LanguageCodeConverter::FromOther to convert the string to a LanguageCode reference. You can then call methods on the LanguageCode class to extract language/script/region subtags (if any). See also http://g3doc/i18n/identifiers/g3doc/using-iii. We place extra restrictions on languages in addition to what the III library requires. See go/geo-schema-reference/feature-properties/languages. This field may be missing if the name does not have a concept of language but should be set if the language is unknown.
*   metadata (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t, default: nil) - Field-level metadata for this name. NOTE: there are multiple NameProto fields in the Geo Schema. Metadata here is only expected to be present on FeatureProto.name[].
*   rawText (type: String.t, default: nil) -  DEPRECATED  The name text provided in the original source data (UTF-8 encoding). This is the text provided in the source data unmodified with the exception of being converted to UTF-8 and stripping extra leading, trailing and duplicate whitespaces (if necessary).
*   shortText (type: String.t, default: nil) - The short name text (UTF-8 encoding). Acronyms/abbreviations should be consistently used, for example "NE 57th St" rather than "Northeast 57th Street", "N.E 57th St." or some other variant. This field should be populated with the chosen canonical version of the shortened name, based on per-term transformations. For feature specific abbreviations (such as 'CA' for 'California'), one should define a separate name with FLAG_ABBREVIATED set. For other variants of the shortened name that are not the canonical one, devise client based logic (ex: query rewriting rules).
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a name. Never set in MapFacts.
*   text (type: String.t, default: nil) - The name text (UTF-8 encoding). Acronyms/abbreviations should be fully expanded, for example "Northeast 57th Street" rather than "NE 57th St". They can be shortened at display or geocode time. This decision prevents ambiguity over such issues as whether "St" represents "Street" or "Saint". However, it pushes language-specific knowledge into code. We will have libraries and data files to contract acronyms/abbreviations at run-time.

Metadata about the nature of the link.
*   aggregateFlags (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLinkKindFlags.t, default: nil) - The aggregate kind flags for the link.
*   kindInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLinkKindInfo.t), default: nil) - Information about all the link kinds associated with the link.

Every entry in the GeoStore database is called a "feature". A feature is represented as a discriminated union of all the different feature types, where the actual feature type is specified by the "type" field. There are also various fields that are meaningful for most or all feature types, such as bounding regions and names. Every feature has a globally unique id that can be used to refer to it from other features.
relatedEntrance (type: list(GoogleApi. ContentWarehouse.V1.Model.GeostoreEntranceReferenceProto.t), default: nil) - Logical relationship to other features that are entrances or exits to this feature.  visualizationArea (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreGeometryStoreReferenceProto.t, default: nil) - Geometry Store ID and materialized geometry representing a tight bounding box of the feature's geometry (or the building/grounds a POI occupies), e.g. for generating flyover experiences.  bound (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRectProto.t, default: nil) - A latitude-longitude rectangle used by bucketing MapReduces. See the documentation on bucketing MapReduce for details. This field can be a source of confusion. Because it is called "bound", it is often assumed that it is a tight bound on the geometry but it can be (and often is) much larger. If a tight bound is needed then use the standard GetFeatureGeometryBound() function instead. To be more explicit, if you are using this field for anything else than a bucketing MapReduce, you are doing the wrong thing. Not all features are required to have bounding boxes. See geostore::IsBoundRequiredForFeatureType() for the list of feature types required to have a bounding box. This bound field will be updated when a feature changes in MapFacts to include its geometry. Also, a GeoSchema pipeline, go/geo-schema-pipelines-docs#expand-bounds runs periodically to update the field for strong references from other features. Therefore, most editors don't need to edit this field explicitly. See go/geo-changes:no-edit-for-feature-bound for the details.  polygonForDisplay (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePolygonProto.t, default: nil) - Provide version of the geometry suitable for display. This has been subject to water removal and (possibly) moderate simplification.  pose (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePoseProto.t, default: nil) - Defines the geometry of a feature as a 6D pose, including lat, lng, altitude, roll, pitch, and yaw along the WGS-84 ellipsoid. Only the lat and lng are strictly required.  displayData (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDisplayDataProto.t, default: nil) - Data used to render this feature on a map.  child (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Features can define themselves as a collection of other features. For example, a route is a collection of road segments, and a feature for the "Great Lakes" could be defined as lakes Superior, Michigan, Huron, Erie, and Ontario. It is not recommended to design a multi level tree using the child field to build up a feature because it requires fetching many features to see the details of the feature. In practice this is used to model archipelago, route, transit (agencies, lines, trips, departures), and river features. The geometry of a feature is implicitly defined by its children, so if a feature has children then it should not have any points, polylines, or polygons. In general, this field should not be used to represent political or postal hierarchies. For example, a county would not list its cities as children, because the county is not defined in terms of its cities (it also contains unincorporated areas, etc.).  track (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTrackProto.t), default: nil) - Defines the geometry of a feature as a sequence of 6D poses, including lat, lng, altitude, roll, pitch, and yaw. Only lat and lng are typically required. Each track has an index so that they can be viewed in a stable order.  kgProperty (type: list(GoogleApi.ContentWarehouse.V1.Model.FreebasePropertyValue.t), default: nil) - Properties that apply to this feature whose schema is defined in the Knowledge Graph schema (see https://hume.google.com/graph/schema). Not all properties that exist in the KG schema can be asserted via this mechanism. The set of properties that are allowed to be set on a feature depends on the feature's GConcepts (and feature type). For instance, only gcid:country features may have the /geo/type/country/president property (made up example, since that property doesn't actually exist in the KG schema). GConcept hierarchy is taken into account for deciding the set of allowed properties. Additionally, the specific properties allowed are further constrained by the list specified at go/kg-property-allowlist. NOTE: not all types of properties are allowed to appear in the Geo Schema. For now, we limit ourselves to properties whose value type is TYPE_BOOL, TYPE_COMPOUND, TYPE_DATETIME, TYPE_FLOAT, TYPE_ID, TYPE_INT, TYPE_NESTED_STRUCT, TYPE_TEXT, or TYPE_URI. NOTE(b/35039936): We are in the process of changing how a KG property with multiple values is stored in this field. Currently, such a KG property is stored in a single instance of the kg_property field. However, we will be changing this so that each value will be stored in its own instance of kg_property. Any client that wants to read from this field should be prepared to read data represented in either format. See b/35039936 or the announcement at http://g/geo-schema-announce/7IXR3Fex8to/7yFyT5UoAwAJ for an example and more details. The mechanism to assert that a KG property has no value is via the property_value_status field below. freebase.PropertyValue.value_status is not allowed be set here for consistency reason.  temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a feature. Never set in MapFacts.  socialReference (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreSocialReferenceProto.t, default: nil) - All establishments must have a social reference. WARNING: Aside from creating new establishments, please do NOT introduce new uses; treat social references as if they were deprecated. For alternatives and more, see g3doc/company/teams/gdeng/geo-schema-reference/home/feature-types/establishments/social-reference.md.  center (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - The conceptual center of the feature, used for routing. For cities, this would be the center of the downtown, or maybe the location of city hall. For states and countries it might be the capital city. Most feature types will not have a conceptual center - by default, routing will use the centroid of the feature's geometry. If you need a feature center point consider using GetFeatureGeometryCenter() function from geostore/base/public/feature.h rather than reading from this field directly.  metadata (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureMetadataProto.t, default: nil) - Metadata about this particular feature. Metadata is managed internally by the Geo Data Infrastructure and in general should not be set by clients. Features that don't ultimately come from the Geo repository (MapFacts) won't have any metadata set.  threeDimModel (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreThreeDimensionalModelProto.t, default: nil) - Captures full model representing the feature's 3D geometry. Should only be found on TYPE_COMPOUND_BUILDING features for now, but not part of the BuildingProto extension for possible future extensions.  geopoliticalGeometry (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreGeopoliticalGeometryProto.t, default: nil) - Geopolitical (unsimplified) polygons for a feature for different geopolitical use cases.  website (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreUrlProto.t), default: nil) - The official website of this feature. Stored as a repeated field to allow for multilingual official websites (see comments in url.proto).  storefrontGeometry (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAnchoredGeometryProto.t), default: nil) - Represents information about the store front geometry. Only TYPE_ESTABLISHMENT_POI should have this field set.  rawGconceptInstanceContainer (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreOntologyRawGConceptInstanceContainerProto.t, default: nil) - Geo Ontology GConcept Instances - Design doc linked off http://go/geo-ontology - In order to shield clients from changes in GConcept representation we provide an accessor library: geostore/base/public/gconcept_instance.h  geometryPrecisionMeters (type: float(), default: nil) - If set, the feature's actual location can be assumed to be somewhere within a circle of this radius, centered on the feature's location. More information on this field at go/gpm-definition-update. NOTE: Only applicable to features with 'point' geometry. Please contact geo-schema-team@ if you have non-point use cases for which this field would be useful.  relatedFeature (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRelationProto.t), default: nil) - Geographic or logical relationships to other features. Importers don't need to fill a geographic relationship in - it is handled by related feature processing by a standalone pipeline. Adding "contained by" country relations is however encouraged (and required for TYPE_ROUTE features). WARNING: Updates to this field handled by standalone pipelines are NOT atomic with regard to updates to the features being referenced; we do not guarantee that a given MapFacts snapshot will be consistent between this field and the related features.  operations (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreOperationsProto.t, default: nil) - Information about this feature's operations, e.g. when this feature is temporarily closed. NOTE: for legacy reasons, some closure-specifc information (e.g. permanent closure reason) lives in ExistenceProto instead. In the future, such information should move here in OperationsProto.  waterRemovedPolygon (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePolygonProto.t, default: nil) - A version of the geometry which has water removed but is not simplified (thus having equal or more vertices than polygon_for_display).  futureGeometryFor (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Specifies the feature that this feature's geometry will replace. If this field is populated, the referenced feature must have a future_geometry reference back to this feature. This field is only allowed (and required) for TYPE_FUTURE_GEOMETRY features.  name (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreNameProto.t), default: nil) - The name(s) of this feature. A feature may have different names in different languages, colloquial or "vanity" names, etc.  internal (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreInternalFeatureProto.t, default: nil) - Additional internal feature-level attributes that may be set by data providers to be used inside the Geo Data infrastructure. This field should never be present in the output of the Geo Data infrastructure that read-only clients consume.  status (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreExistenceProto.t, default: nil) - All features can have "existence" information associated with them.  originalId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - This field is used internally by the pipeline for id stability. It should not be set by individual importers, nor should it be read by consumer clients. In particular, this field will not be present in features read or snapshotted from the Mapfacts Repository.  bestLocale (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreBestLocaleProto.t, default: nil) - Describes the best-match locale for this feature.  preferredViewport (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRectProto.t, default: nil) - The preferred viewport for this feature. If present, this latitude-longitude rectangle holds the preferred viewport for the feature. For example, it might hold the bounds of the "central" portion of a large city. There are no aspect ratio requirements. This is an optional field: if no viewport is supplied, interested clients can use heuristics to determine a viewport. Calling the standard GetFeatureGeometryBound() function would be a good way to start but note that it can return an empty bounding box (e.g., if the feature has no geometry). The preferred viewport is not necessarily fully contained by the above bounding box.  relatedTerminalPoint (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Terminal points associated with this feature. For instance, an airport terminal may have specifically designated pickup and drop-off points.  attachment (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAttachmentsAttachmentProto.t), default: nil) - The collection of attachments for this feature. Documentation: http://go/geo-attachments  interiorCovering (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCellCoveringProto.t, default: nil) - S2 interior covering that consists of cells completely enclosed within the feature's geometry (for features with polygonal geometry).  accessPoint (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAccessPointProto.t), default: nil) - Optional access point information. Access points hold detailed information about routing endpoints. For example, the main Google office is at "1600 Amphitheatre Parkway". The feature representing that office has a polygon, a center, and an address with components for the street number, route, locality, etc. The access point information, on the other hand, identifies the specific segment, the latitude/longitude of the driveway, and so forth.  rankDetails (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRankDetailsProto.t, default: nil) - The rank field is computed as a weighted sum of several signals. This field contains a protocol buffer whose fields give those signals and their weights. Clients should try very hard not to depend on these individual signals and use the single rank field instead. At some point in the future, this field will not be exposed anymore.  establishment (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreEstablishmentProto.t, default: nil) - Also allowed on TYPE_BUSINESS_CHAIN and TYPE_TRANSIT_AGENCY features, to model the feature's phone number(s). Other fields within EstablishmentProto are not permitted on non-TYPE_ESTABLISHMENT features.  route (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRouteProto.t, default: nil) - Additional details on the feature types below can be found in the individual protocol buffer definitions. These extensions capture data that is specific to a set of feature types and which makes no sense for other feature types.  rank (type: number(), default: nil) - WARNING: Please do NOT introduce new uses of this field; treat it as if it were deprecated. For appropriate ranking contacts, see g3doc/company/teams/gdeng/geo-schema-reference/home/feature-properties/rank.md. A floating-point number between 0.0 and 1.0 indicating how "important" we think this feature is. This can be used to decide which features to render on maps, and how to rank results when the user does a search. The rank can depend on any number of factors such as the number of references to this feature in web pages, geographic size, population, number of referring geographic entities, "priority" information encoded in the source data, etc.  htmlText (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreHtmlTextProto.t), default: nil) -  DEPRECATED  Features can have zero or more HTML texts associated with them. These might be HTML balloons used by Google Earth, for example.  address (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAddressProto.t), default: nil) - Address for this feature. A Geo Schema address is designed to model a mailing address, so only features that have mailing addresses in the real world may have addresses. Each feature should have only one address. If you want to describe the geographic location of a feature which does not have a mailing address with respect to other well-known features, some other schema constructs should be used. Note that the field is defined as repeated though features that use this field with its intended semantics are constrained to have a single address even if they may have multiple mailing addresses in the real world. The “single address” rule is enforced by lint. Current exceptions to the single address rule and mailing address rule are described in the g3doc. Bear note that the schema team is actively working on eliminating these exceptions. http://go/geo-addresses Note the following conventions: - Addresses follow the postal hierarchy, not the political hierarchy. Addresses may have components that refer to political entities when those entities also appear in the postal hierarchy. - As stated previously, but it bears repeating, addresses on features are mailing addresses. In many cases the physical address and the mailing address are the same but the address stored on a feature represents the mailing address of the feature. An example of a non-physical mailing address would be a PO Box. - These addresses are commonly defined and verifiable by a governmental authority (e.g. the United States Postal Service in the United States, Royal Mail in the United Kingdom, Correios in Brazil, etc.) and should follow conventions and rules defined by those authorities.  type (type: String.t, default: nil) - The type of this feature -- see comments above.  syntheticGeometry (type: boolean(), default: nil) - We prefer features that have geometry over those that do not. In some cases we synthesize geometry (e.g., polygons for postal codes). This flag is set to indicate features that have such synthetic geometry.  covering (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCellCoveringProto.t, default: nil) - S2 cell coverings for this feature. See util/geometry/s2cell_union.h for more information about S2 cells. Coverings are useful for quick containment or intersection tests. S2 covering that consists of cells that intersect with the feature.  propertyValueStatus (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePropertyValueStatusProto.t), default: nil) - The value status of properties on this feature. For example, this specifies whether the feature is known to have no name (this is the value status of the 'FEATURE_NAME' property). Only property IDs which have no specific value are allowed to have a value status. Note: not all field types will be supported, please contact geo schema team if you want to enable this field for a field type that is not currently supported.  relatedBorder (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - For TYPE_COUNTRY or TYPE_ADMINISTRATIVE_AREA1 features, this field defines the associated TYPE_BORDERs which reference this feature. The linked TYPE_BORDERs must have the feature.border set, pointing to this feature. TYPE_COUNTRY or TYPE_ADMINISTRATIVE_AREA1 features must have this field set for each TYPE_BORDER referencing them.  exemptRegulatedArea (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - A list of feature ids of polygon based restrictions that do not apply to this feature. This may only include features of TYPE_REGULATED_AREA that also have a feature.regulated_area.restriction field defined. Setting this field opts the feature out of all restrictions set on that regulated area.  id (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The globally unique id for this feature.  disputedArea (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreDisputedAreaProto.t, default: nil) - Represents information about disputed areas. Only TYPE_DISPUTED_AREA features should have the field set.  attribute (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreAttributeProto.t), default: nil) -  DEPRECATED  A list of attributes that describe defined aspects of this feature. An attribute must be a concrete, high quality, and editable piece of information about a feature, and must be used on some general consumer facing Google property. The data types used for attributes must be primitive types or reusable in a generic manner.  futureGeometry (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Specifies the TYPE_FUTURE_GEOMETRY whose geometry will replace this feature's geometry. If this field is populated, the referenced future geometry must have a future_geometry_for referencing this feature.  geometry3d (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreGeometryStoreReferenceProto.t, default: nil) - Geometry Store ID and materialized geometry representing the feature's physical shape in the world.  point (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t), default: nil) - Defines the geometry of the feature. The geometry may be specified as an arbitrary union of points, poses, polylines, tracks, and polygons. Points, poses, polylines, and tracks are assumed to represent regions of unspecified size or width rather than regions of zero area. Most features should have some sort of geometry. Geometry may be synthesized if none is available (e.g., polygons for postal codes). The synthetic_geometry flag should be set in that case. Point is currently enforced as a non-repeating field for all feature types, though it is defined as repeating in case future modeling requires multiple points. The number of allowed polylines, tracks, or polygons vary based on feature type. A feature can have at most one pose (it is an optional field).  relatedTimezone (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTimezoneProto.t), default: nil) - Contains time zones known to be associated with a feature. Most features are associated with the single time zone that contains them. However, some larger features (countries, continents, etc.) are associated with all of the time zones they contain. Most features can have any number of related time zones, but TYPE_SEGMENT and TYPE_ESTABLISHMENT_POI features can have at most 1.  verticalOrdering (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreVerticalOrderingProto.t, default: nil) - Represents vertical ordering for this feature relative to other geometrically-overlaping features. See go/aboutgrades for more information about distinction among different levels.  sourceInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreSourceInfoProto.t), default: nil) - A list of the data sources that were used to construct this feature, together with optional "raw data" in the provider's format. Raw data should not be used by production clients but may be useful for exploring data that is not currently converted to a canonical form.

Info for identifying the specific field in this person that lets the requester send them notifications. These are typically fields added to a contact (e.g., email). There will not always be in originating field, typically in the case that whatever permits the requester to see this target info is not something that can be used on its own for contacting this person.
*   fieldIndex (type: integer(), default: nil) - The index of the relevant field in the merged person
*   value (type: String.t, default: nil) - The value of the origin field

General metadata related to a given feature in the Geo repository.
*   bulkUpdatable (type: String.t, default: nil) - This field indicates whether the feature is subject to bulk updates. Caution must be exercised while editing such features since the changes made by the edits will be overwritten by the bulk update (if the feature is bulk updated). See go/mapfacts-abu for more information.
*   coreVersionToken (type: String.t, default: nil) - core_version_token is an opaque token representing the version of the core fields of the feature. This field is not updated when attachments are changed.
*   featureReplacementInfo (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureReplacementInfoProto.t, default: nil) - Metadata for tracking when a feature is derived from or replaced by another feature or set of features.
*   fieldMetadata (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureFieldMetadataProto.t, default: nil) - Metadata about certain repeated fields and their subfields, for which field type is not granular enough.
*   versionToken (type: String.t, default: nil) - version_token is an opaque token representing the version of this feature. It can be used as a concurrency token when sending edits.


The Concierge features a structure is eligible for. See {@link home.graph.common. ConciergeFeatures}.




This message describes the details of a single language within a locale.
*   language (type: String.t, default: nil) - The language associated with this preference. The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. We place extra restrictions on languages in addition to what the III library requires. See http://go/geo-schema-reference/feature-properties/languages.md
*   official (type: boolean(), default: nil) - Flag to indicate if the associated language is "official" within a locale.
*   preference (type: number(), default: nil) - This value represents the preference of the associated language within a locale. It must be between 0.0 and 1.0.
*   speakingPercent (type: number(), default: nil) - Percentage of population that can speak the associated language within a locale. It must be between 0 and 100.
*   writingPercent (type: number(), default: nil) - Percentage of population that can write the associated language within a locale. It must be between 0 and 100.


The status indicating the user doesn't work at this time.
*   comeBackTime (type: DateTime.t, default: nil) - The closest time when the user will be available after this block. This might be different from the start of the working hours in Calendar, because the given OutsideWorkingHours interval might be followed by OOO.

Identifies a set of NavBoost queries in the CompositeDoc. Typically these queries were collapsed by WebRef into a single query and they were treated by the annotator as equivalent. They all contain the same mentions (at the same offsets).
*   featuresIndex (type: list(integer()), default: nil) - The set of indices in the NavBoostQuery::features() array that belong to the collapsed features.
*   queriesIndex (type: integer(), default: nil) - The index of the query in NavBoostDocument::queries() array.

Capability with regard to support of timers by the client.
*   maxSupportedExtendedTimerDuration (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t, default: nil) - Maximum extended timer duration supported by the client. The extended timer duration is the total start-to-finish duration after an AddTimeToTimer operation. E.g. if a user sets a timer for 30 minutes, and later adds 10 minutes, the extended duration is 40 minutes. Zero or unset indicates no maximum limit.
*   maxSupportedTimerDuration (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t, default: nil) - Maximum timer duration supported by the client. Zero or unset indicates no maximum limit.
*   maxSupportedTimers (type: integer(), default: nil) - Maximum number of timers that can be created on the client. Zero or unset indicates no maximum limit.
*   supportsMutateAction (type: boolean(), default: nil) - Whether the client supports the MUTATE timer action. If this is false, mutate operations may be handled by sending a pair of REMOVE and CREATE timer actions to replace the existing timer instead of mutating it.







Specifies the routing capabilities of the Intent. It will apply only when the Intent is triggered. Next ID: 8
*   cloudEndpointName (type: String.t, default: nil) - Instructions for performing a cloud execution request for the Intent when the execution_type is set to CLOUD. If non-empty, then the device execution would be routed to the CloudEndpoint specified by this name. The Account Linking exchange may be performed to fetch the OAuth access token, and the access token will be included in the HTTP header.
*   cloudIntentTranslationDisabled (type: boolean(), default: nil) - If this field is set, then the Syndication cloud call will be disabled for this intent. Note this only applies if any Syndication cloud endpoint is associated with the Device Model, otherwise setting this field does nothing. By default, all Intents that are enabled and supported by the Syndication API will be routed through the Syndication cloud endpoint if it's provided.
*   intentCommandFormat (type: String.t, default: nil) - Specifies the intent command format for this Action. For example, in order to launch an Android intent instead of receiving the device action payload on the client, then this field can be set with "intent:/#Intent;...;my_extra={$.params.channels[0].channelCode};end" The parameter "{$.params.channels[0].channelCode}" is in JSON path format, and will be replaced with the content from the original device action payload. Thus, with # JSON "execution": [ { "command": "action.devices.commands.SelectChannel", "params": { "channels": [{ "channelName": "exampleChannel", "channelCode": "1-1" }] } } ] as the original action result, then the final result would look like "intent:/#Intent;...;my_extra=\"1-1\";end"
*   localDisabled (type: boolean(), default: nil) - If this field is set, then local execution capability is disabled for all matching intents.
*   localExecutionType (type: String.t, default: nil) - Specifies how to execute this Action when it is invoked locally (from the same device.)
*   remoteDisabled (type: boolean(), default: nil) - If this field is set, then remote execution capability is disabled for all matching intents.
*   remoteExecutionType (type: String.t, default: nil) - Specifies how to execute this Action when it is invoked remotely (from a different device.)

If Provider group is not present the provider is the legacy classifiers (with id 0) and the label_value provided by Google is the global_label_value.
*   feed (type: boolean(), default: nil) - This field is intended to be deprecated. If id == 0 and feed is true it means this label is from a feed. If id == 0 and feed is false, this label is from "Google" If id != 0, feed is meaningless.
*   id (type: String.t, default: nil) - We are currently using this field to indicate an id of the set of classifiers that produced this label. This deviates from the original intention. Also see ClassifierDescription and refer to http://go/genre-labels-provider-id for further info.
*   labelBucket (type: integer(), default: nil) - A byte-size value representing 64 * (1 + global_label_value). Use it instead of global_label_value to save on label storage.
*   name (type: String.t, default: nil) - This name will only sometimes be filled in! Frontends can in general expect this to be filled in, but it will not usually be stored in backends.




The set of behavior signals that the user is expressing/demonstrating that is detected by the sentiment analysis. These signals are used to help assistant determine the proper response behavior. NEXT ID = 2
*   politeness (type: number(), default: nil) - The degree to which the user is showing politeness.


Wraps other annotations that are run over auto-generated video captions.


Represents the information about user's working hours during one day. Note that a period on Monday from 18:00 - 00:00 is represented as a triplet (1, 1080, 1440).
*   dayOfWeek (type: integer(), default: nil) - Day of week, 0 for Sunday, 1 for Monday, ...
*   periodEndMinutes (type: integer(), default: nil) - Period end, in minutes from the start of the day, exclusive.
*   periodStartMinutes (type: integer(), default: nil) - Period start, in minutes from the start of the day, inclusive.


Contains info on membership count for member types: HUMAN_USER, APP_USER & ROSTER_MEMBER different states: INVITED, JOINED
*   membershipCount (type: integer(), default: nil) - count of members with given type and state

This is an optional container of arbitrary data that can be added to a FetchReplyData. This data is meant to be logged, but not sent back in a fetch reply (it should be added after the reply is prepared). Use FetchResponsePreparatorImpl::AddTrawlerPrivateDataToFetchReplyData to add. See also the comment in fetch_response_preparator_impl.cc. Next Tag: 47
*   TrawlerInstance (type: String.t, default: nil) - Which Trawler cell was this response fetched in? (e.g. "HR" or "YQ")
*   ResponseBytes (type: String.t, default: nil) - The number of bytes we sent back to the client.
*   ServerSignature (type: String.t, default: nil) - An arbitrary string signature identifying the remote server type/version. In the case of HTTP, this would be the contents of the "Server:" header.
*   numDroppedReplies (type: String.t, default: nil) - Number of times we drop the content of a stream reply or the final reply, which can only be caused by REJECTED_NO_RPC_BUFFERS now.
*   ProxyInstance (type: String.t, default: nil) - If set, this fetch was done through a proxy (e.g., fetchproxy).
*   RequestUserName (type: String.t, default: nil) - Log the loas username in trawler private to help with debugging. Store the username in trawler private so clients won't see it from FetchReply. To reduce disk usage, we only log the loas username if the requestorid being used does not have ClientUsernameRestrictions.
*   downloadFileName (type: String.t, default: nil) - If the response header contains Content-Disposition header "attachment; filename="google.zip": the download_file_name would be "google.zip"
*   prodRegion (type: String.t, default: nil) - Log the prod region (only for regional harpoon requestor ids)
*   isBidiStreamingFetch (type: boolean(), default: nil) - Whether this is a bidirectional streaming fetch.
*   PostDataSize (type: String.t, default: nil) - What's the post data size (in bytes) if it's a post request.
*   vpcDestination (type: GoogleApi.ContentWarehouse.V1.Model.TrawlerLoggedVPCDestination.t, default: nil) - The following are vpc information that's only set if is_vpc_traffic is true.
*   BotGroupName (type: String.t, default: nil) - If we fetched using BotFetchAgent, what is the BotGroupName?
*   isFloonetFetch (type: boolean(), default: nil) - Whether or not this is a Floonet fetch request. Floonet requests have inherent lower availability (due to HOPE rejections when HOPE is in degraded mode, and other Floonet specific reasons). Therefore, it is important for debugging and for our availability SLO to know whether of not it is a floonet fetch. IMPORTANT NOTE: This field is only currently set for traffic that explicitly requires Floonet and can not failover to use Googlebot (i.e. "transparent" or "implicit" Floonet fetches).
*   cacheHitType (type: String.t, default: nil) - Only set if the fetch uses cache content (is_cache_fetch is true).
*   Producer (type: String.t, default: nil) - Note TrawlerPrivateFetchReplyData is never sent back to clients. The following field is just for Trawler and Multiverse internal tracking, and clients should not look at this field at all.
*   isFromGrpcProxy (type: boolean(), default: nil) - Whether or not this response is sent from gRPC proxy service.
*   IsRobotsFetch (type: boolean(), default: nil) - Was this an internally-initiated robots.txt fetch?
*   UserAgentSentFp (type: String.t, default: nil) - The fp2011 of useragent sent to the remote webserver, note it corresponds to UserAgentToSend field in FetchParams
*   largeStoreHitLocation (type: String.t, default: nil) - Set to the hit location (CNS filename) if cache comes from large store.
*   BotHostname (type: String.t, default: nil) - This is the HOPE server that we sent the url to. We log the HOPE backend cell and hope server shard number (e.g., 'qf:6'). This allows us to understand how we are balancing our load to the HOPE servers.
*   Is5xxHostId (type: boolean(), default: nil) - Represents if the HostId belongs to HostId set in 5xx url patterns, it can work as a tag when emitting requestor minute summary, this helps us to aggregate traffic affected by 5xx patterns, and test if there are any fetching changes.
*   CacheRequestorID (type: String.t, default: nil) - Present if the reply is from the trawler cache. This is the requestorid of the trawler client that populated the cache with the data we are reusing.
*   RobotsBody (type: String.t, default: nil) - If this was a robots.txt fetch (IsRobotsFetch above), this may contain the robots.txt body. (It may not, for instance, 404s are omitted; current policy is URL_CRAWLED + partially crawled) This includes http headers + body.
*   resourceBucket (type: String.t, default: nil) - If the requestor shares resource bucket with other requestorids, we will store the resource bucket name in these fields.
*   isVpcTraffic (type: boolean(), default: nil) - Set if the fetch goes through the virtual private cloud path so we can track the VPC traffic.
*   HintIPAddress (type: String.t, default: nil) - If we do not have Endpoints in FetchReplyData (e.g., url rejected due to hostload limit), do we have a guess of the server IPAddress (e.g., from robots fetch)? This helps us classify URLs based on country code, etc. The field is filled with IPAddress::ToPackedString().
*   RpcStartDeadlineLeftMs (type: integer(), default: nil) - RPC deadline left at the start of url control flow. Can be useful for debugging rpc deadline exceeded error received by clients, this field is only recorded if RpcEndDeadlineLeftMs is small enough.
*   RpcEndDeadlineLeftMs (type: integer(), default: nil) - RPC deadline left at the end of url control flow. Can be useful for debugging rpc deadline exceeded error received by clients, this field is only recorded if it's small enough.
*   HSTSHeaderValue (type: String.t, default: nil) - HTTP Strict-Transport-Security (RFC6797) header value. We log this so we can generate a list of hosts that prefer HTTPS over HTTP.
*   UserAgentSent (type: String.t, default: nil) - The useragent string sent to the remote webserver. It corresponds to UserAgentToSend field in FetchParams.
*   tier (type: String.t, default: nil) - Service tier info will be used in traffic grapher for ploting per tier graph.
*   concurrentStreamNum (type: String.t, default: nil) - How many concurrent streams are on the connection when the request finishes (including this request). Export this value to monitor the stream multiplexing for HTTP/2.
*   httpVersion (type: String.t, default: nil) - Stores the HTTP version we used in the last hop.

Arbitrary client data that is populated based on the client

A message to represent an item in a list. Just a basic string for now, but extensible for the future.
*   name (type: String.t, default: nil) - [REQUIRED] The name of the list item.

This variant defines the frame to be used as multiple thumbnails per miuntes.




Indicates a question, requesting the truth-value/actualness of a state of affairs denoted by the expression encompassed by the FunctionCall this appears on. Often this is a yes/no question, e.g. [was tom cruise in top gun] : ActedIn.polar(Movie=/m/top_gun, Actor=/m/tom_cruise) Not all polar questions will necessarily have a yes/no answer; the expected resolution of a polar question is a StateOfAffairs. e.g. [is chocolate good for you] : FoodItemAttribute.polar(/m/chocolate, /m/healthy) which may not have a simple yes/no answer. See go/mrf-polar-questions for details.

A nested struct is a recursive tree structure for storing a set of triples. more info can be found at go/nested-struct-primer
*   predicateObjs (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphNestedStructPredicateObjs.t), default: nil) - predicate_objs.pred should be unique within the list.

mediaType (type: String.t, default: nil) - The type of the media session. If provider does not report this field, we ## compute it by mapping provider type to media type. Here is the mapping: |ProviderType |MediaItemMetadata. Type| |-------------------------------------- |MUSIC |TRACK | |VIDEO |VIDEO | |LIVE_TV |TV_CHANNEL | |AUDIOBOOK |AUDIO_BOOK | |PODCAST |PODCAST_EPISODE | ## |LIVE_STREAMING|VIDEO |




A node representing a table of regions and restrictions that apply to those regions. This table understands region inclusion and knows to apply the most specific rule, for example, a rule for France would override a rule for the EU for a user in France.





A BlobRef is used to refer to a blob in BlobStore. Clients may only manipulate blobs through BlobRefs. BlobRefs should not be sent in the clear outside of Google (for example, encoded in URLs, stored in a client cookie, or referred to in Javascript); for efficiency, the IDs expose internal details of the blobstore (such as machine IPs or cluster names). If clients need to store BlobRefs outside of Google, they must encrypt the BlobRef securely or use an alternative insecure identifier with an id->BlobRef mapping inside our network.
*   Size (type: String.t, default: nil) - Size of the complete blob, in bytes.
*   SourceV2BlobID (type: String.t, default: nil) - The ID of the V2 blob this blob has


A web location for a Feature. URLs should always be stored in repeated fields because some objects (eg. transit schedules in Brussels) have different URLs for different languages.
*   language (type: String.t, default: nil) - The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. We place extra restrictions on languages in addition to what the III library requires. See http://go/geo-schema-reference/feature-properties/languages.md This field represents the language of the content of the web site. It may be missing if the web site is language-independent or if the language is unknown.
*   metadata (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t, default: nil) - Field-level metadata for this URL. NOTE: there are multiple UrlProto fields in the Geo Schema. Metadata here is only expected to be present on FeatureProto.website[].
*   pagerank (type: integer(), default: nil) -  DEPRECATED  The pagerank of this URL. Valid values [0, 65535] See http://wiki/Main/NearestSeeds for more information.

Contains various restriction information about a stanza, derived from properties of the stanza, the viewer and the creator. Restrictions stored in this message are not related to direct/indirect relationship between the viewer and the creator of stanza. Some examples are: - Abusive - Legal - Racy - Content not suitable for age - Porn - Blocked by country/geo of viewer. - Restricted by stanza creator (not the user specific block). - etc... Please see go/stanza-abuse-flow for more details.
*   contentRestriction (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamContentRestriction.t, default: nil) - Field to explain various restrictions of the Stanza. Some examples of restrictions are: - Not permitted because of legal restrictions of geography/country of viewer or creator. - Content not suitable for current viewer i.e. porn, abusive, racy. - Creator restricted the content to an age group. - etc...
*   deleteReason (type: list(String.t), default: nil) - Delete reasons. This is a repeated field because an stanza can be deleted multiple times due to different reasons such as user_delete, admin_delete.
*   moderationInfo (type: GoogleApi.ContentWarehouse.V1.Model.SocialStanzaModerationInfo.t, default: nil) - The moderation info. At write time, this field is only allowed to be set when moderator_type is AUTO_MODERATOR. For other moderator types, moderation_reason is the only field that can be set by clients.

Refcon name representation in split concepts sstable. This is a simplified version of repository_webref. GlobalNameInfo.
*   language (type: list(integer()), default: nil) - Languages of the name, unknown language is not kept. TODO(b/145976266) Don't use the deprecated language enum.
*   namePrior (type: number(), default: nil) - Name prior to use. We read this from the prior for the "unknown" language.
*   originalName (type: String.t, default: nil) - Filled only if different than normalized_name.


Features to be extracted from Podcast GP for ranking in HGR. Next ID: 7
*   isExclusive (type: boolean(), default: nil) - Whether the podcast is exclusive to a provider a not.
*   podcastListenersCount (type: integer(), default: nil) - The count of the unique users that listened to the podcast in the last 28 days.
*   popularityScore (type: float(), default: nil) - Provider popularity score. More details are here go/ps-to-kg.
*   scubedTstarScore (type: float(), default: nil) - Tstar score is a signal that indicates the quality of the entity.
*   youtubeConfidenceScore (type: float(), default: nil) - This score is in the range [0.0, 1.0] and is used for cross-backend (e.g., YT vs another Music/Podcast service provider) ranking and scoring. 0.0 means no confidence and 1.0 means full confidence.

Represents a principal which possesses a particular secret string whose cryptographic hash is specified here. CapTokens ("Capability Tokens") are used in ACLProto. It's expected that ACLs with CapTokenHolders will strongly enforce them by Keystore-wrapping crypto keys for the corresponding CapTokens.
*   tokenHmacSha1Prefix (type: String.t, default: nil) - The hash of the corresponding capability token. The value is defined to be identical to the one in acl.proto's CapTokenMetadata: 10-byte prefix of HMAC-SHA1 of the token. The HMAC key is the following fixed (non-secret) 512-bit value: 79b1c8f4 82baf523 b8a9ab4a e960f438 c45be041 11f1f222 e8a3f64d aeb05e3d c3576acc ec649194 aede422c 4e48e0d1 ff21234a a6ed6b49 a7fa592e efd7bba3


Metadata for ActionPackage. Device Actions are disabled by default unless explicitly enabled for the device here, see go/3p-device-actions-v2-design.
*   projectId (type: String.t, default: nil) - Google cloud project id for which the Action Package or Device Model is registered.


The basic message that contains a single decision output of go/deeptagger.
*   confidence (type: integer(), default: nil) - The confidence of the tag, encoded to 14 bits (range [0, 16383]). Due to modeling details, a large number of tags become trustworthy with confidence greater than 0.001, so two bytes of precision are required.





Last full indexing information for the partial CDoc.
*   corpus (type: String.t, default: nil) - The corpus of last full updates.


Capabilities that are associated with Assistant Settings on auto surfaces.
*   playWarmerWelcome (type: boolean(), default: nil) - If true, it indicates that the auto surface client should receive a warmer welcome TTS for signed-out users. For signed-in user, we will rely on server side metadata. go/aaae:preview-lang
*   supportsAddingCars (type: boolean(), default: nil) - If true, it indicates that the client can be used to add cars after account linking with the OEM.

The primary key for an intent. Next ID: 3
*   deprecatedVersion (type: String.t, default: nil) - The version has been changed to be defined as a horizontal version on the entire meaning catalog instead of per-schema.
*   mid (type: String.t, default: nil) - The minted MID for an intent.


Signals associated with TeleportArgumentAnnotator annotations. Empty. The signal being present is enough for the conformance checking library to be able to check.

Features to be passed from Contact GP to HGR. Next ID: 13
*   conceptId (type: String.t, default: nil) - Concept id for relationships in English, e.g. "Mother" for all non-English locales. It's only populated for source = RELATIONSHIP.
*   isRelationshipFromAnnotation (type: boolean(), default: nil) - Whether the query is a relationship query based on the annotation source.
*   isRelationshipFromSource (type: boolean(), default: nil) - Whether the contact has relationship in the contact metadata.
*   isStarred (type: boolean(), default: nil) - Whether the contact is starred contact.
*   numAlternateNameFromFuzzyContactMatch (type: number(), default: nil) - Number of alternate contact names from fuzzy contact match. (Not suggest using it since it can change due to retrieval iteration)
*   numAlternateNamesFromS3 (type: number(), default: nil) - Number of alternate contact names from S3_HYPOTHESES. (Not suggest using it since it can change due to retrieval iteration)
*   numAlternativeNamesFromInterpretation (type: number(), default: nil) - Number of alternate contact names from interpretation. (Not suggest using it since it can change due to retrieval iteration)
*   numCandidates (type: number(), default: nil) - Number of contacts populated by the contact Grounding Provider. (Not suggest using it since it can change due to retrieval iteration)

An alternate word provided by another OCR engine, used for OCR Correction. This iteration only supports simple substitution errors (exhanging one word for another), but with minor modifications (e.g. adding a word count for each alternate), it could support repairing word segmentation and text detection errors.
*   Word (type: GoogleApi.ContentWarehouse.V1.Model.GoodocWord.t, default: nil) - In order to compile, this recursive message needs to be optional, even though it's within an optional group.

This message specifies structure "overrides" to apply: it can be used to force certain kinds of GoodocToHTML renderings of elements.
*   blockImagination (type: String.t, default: nil) - For text blocks only: do not allow this block to be turned into an image when rendering, even if your algorithms want to do so:
*   doNotExpandGraphicBox (type: boolean(), default: nil) - For graphic blocks, we often expand the block a bit for rendering, to compensate for bad image segmentation. do_not_expand_graphic_box forces this behavior to be turned off.
*   fullPageAsImage (type: String.t, default: nil) - For Pages only: explicitly specify whether or not this page should be rendered fully as an image
*   fullPageLineated (type: String.t, default: nil) - For Pages only: explicitly specify whether or not all text on this page should be treated as "LINEATED"
*   fullPageSkipped (type: String.t, default: nil) - For Pages only: explicitly specify whether or not this page should be skipped.
*   needNotSuppressPhoto (type: boolean(), default: nil) - This GRAPHIC block's image can be shown even when GoodocToHTMLOptions.suppress_photos_with_this is specified.
*   pageBreakBefore (type: String.t, default: nil) - For blocks: explicitly specify whether or not this block should get a page-break before it.
*   wordHtml (type: String.t, default: nil) - For Words only: replace the rendered HTML by this:





A pose is an object's position in space, as well as its orientation. All fields except lat and lng are optional. All fields are in the WGS-84 ellipsoid, and rotations are right-hand rule (i.e. if the right hand thumb points along a vector, curled fingers indicate positive rotation direction). An un-rotated pose would be pointing due North, along the surface of the ellipsoid. Rotations are applied in the order: yaw, pitch, roll. Note that the rotation axes are rotated along with the model for each rotation step. WARNING: This proto is not meant to be used directly. Please use the provided libraries: //geostore/base/public/pose.h //java/com/google/geostore/base/Pose.java
*   altitude (type: float(), default: nil) - The height of the pose. A positive height is above the WGS-84 ellipsoid in meters; negative is below.
*   index (type: integer(), default: nil) - The index of the PoseProto in a list of PoseProtos.
*   lat (type: float(), default: nil) - The latitude of the pose in degrees [-90, 90].
*   lng (type: float(), default: nil) - The longitude of the pose in degrees (-180,180].
*   pitch (type: float(), default: nil) - The rotation around the longitude line East tangent in degrees [-90, 90].
*   roll (type: float(), default: nil) - The rotation around the latitude line North tangent in degrees (-180, 180].
*   yaw (type: float(), default: nil) - The rotation around the Up vector, from North, in degrees (-180, 180].

Basic information about the link target, i.e. the URL or the language code it's believed to represent.
*   crossDomain (type: boolean(), default: nil) - For a link A->B where B is represented by this proto, cross_domain := Host(A) != Host(B).
*   url (type: String.t, default: nil) - The URL the information in TargetLink refers to.




//////////////////// DeviceId ////////////////////// Used by Device Contacts only. For more details see go/fbs-support-for-device-contacts.
*   AndroidDeviceId (type: String.t, default: nil) - The GServices id on Android. See go/android-id.
*   Hash (type: String.t, default: nil) - DeviceId.Hash is a SHA256 of some attribute of the user and device. For Android devices: Hash = SHA256(gaia_account_name + “:” + “1” + “:” + (android id - LSB)); For iOS devices: Hash = TOLOWER(HEX(GMCSComputeUserDeviceToken(userId, iOsDeviceId)) For more details see go/client-instance-id.


ReferencedResource contains an entry per url referenced by the browser while rendering a document. Next tag available: 20
*   canceled (type: boolean(), default: nil) - True if this fetch was canceled due to render server policy. e.g. the page exceeded the fetch budget or an extension canceled the fetch.
*   contentType (type: integer(), default: nil) - Content type of this resource (webutil/http/content-type.h). The content type is from guess based on the file extension, any mime type in http headers at the beginning of the content, any content-disposition http header, and the content body itself. Note: the content type defined in webutil/http/content-type.proto is incomplete. If you are interested in missing types, please update the enum and the logic of content type detection.
*   domTreeNodeIndex (type: list(integer()), default: nil) - DOMTreeNode index which has the url as one of its attributes specified using either src, href or background attributes. src attribute applies to img, script, frame and iframe nodes, href applies to link nodes and background applies to body node. It is possible for a url to be referenced by multiple DOM nodes. For e.g. an tag with the same src attribute can occur in multiple places within a document. It is possible for a url to not have any DOM node reference. For example, redirects don't have DOM tree nodes.
*   failedHttpAccessControlCheck (type: boolean(), default: nil) - True when a HTTP request succeeded but the resource was not made accessible to script due to a HTTP Access Control (CORS) failure. This field is not implemented on Chromium.
*   fetchSourceInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.WirelessTranscoderFetchFetchSourceInfo.t), default: nil) - Where this resource comes from.
*   fetchStatus (type: String.t, default: nil) - The FetchStatus returned by the fetcher. Values are taken from wireless_transcoder_fetch.FetchConstants.FetchStatus in fetch_service.proto. The default value is SUCCESS(0).
*   httpResponseCode (type: integer(), default: nil) - HTTP response code if we had tried to fetch the url. Absence of this field indicates either we have not tried to fetch the url or the fetcher never got back to us with any response.
*   postData (type: String.t, default: nil) - The post_data field is only valid when the HTTP request method is POST.
*   redirectTarget (type: String.t, default: nil) - If the http_response_code is a HTTP redirect, the redirect target will be stored here.
*   referencedResourceContentIndex (type: integer(), default: nil) - Indicates which referenced_resource_content (in RenderResponse) this RefencedResource points to. This field will be set only when there is referenced_resource_content for this RefencedResource in RenderResponse.
*   requestHeader (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader.t), default: nil) - Only necessary headers are recorded. See google3/htmlrender/webkit_headless/resource_key.cc
*   requestMethod (type: integer(), default: nil) - The HTTP request method (GET, HEAD, POST, etc) used for this request. Values are taken from the HTTPHeaders::Protocol enum in webutil/http/httputils.h. HTTPHeaders::PROTO_GET
*   styleIndex (type: list(integer()), default: nil) - style index which has the url specified using either the background-image property or the list-style-image property.
*   synchronouslyFetched (type: boolean(), default: nil) - Whether it is synchronously fetched.
*   url (type: String.t, default: nil) - Does not have a #fragment.

These capabilities represent what software features the client supports. This should be determined based on the client's various software versions (OS, GSA version, etc). Next ID: 27
*   appCapabilities (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppCapabilities.t), default: nil) - IMPORTANT: Only one of AppCapabilities and AppCapabilitiesDelta should be in the SoftwareCapabilities. In the edge case if the client sends up both AppCapabilities and AppCapabilitiesDelta, AppCapabilitiesDelta is ignored. Complete list of app capabilities.
*   appIntegrationsSettings (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppIntegrationsSettings.t}, default: nil) - App integrations settings for each packge name.
*   clockCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiClockCapabilities.t, default: nil) - Capabilities related to clock functionality, like alarms, timers, etc.
*   conversationVersion (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedConversationVersion.t, default: nil) - A top-level version of Conversation protocol where the versions are explicitly defined at go/conversation-versions.
*   oemCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOemCapabilities.t, default: nil) - List of actions OEM supports. This includes built-in actions and custom actions.
*   onDeviceStorageCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOnDeviceStorageCapabilities.t, default: nil) - Reflects the storage capabilities on the device.
*   operatingSystem (type: String.t, default: nil) - The operating system of the device.
*   orderedLiveTvProviders (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiLiveTvProvider.t), default: nil) - An ordered list containing the live tv providers available in the client. The order of the providers reflects the ranking in the client and will be respected by server as well.







This message should be wire-equivalent to the Entity proto defined in nlp/semantic_parsing/models/personal_intelligence.proto. The message is cloned here to allow legacy intents to extract entities to slots; trying to add Entity to knowledge_answers::intent_query::ArgumentValue creates a BUILD dependency loop. For the proto used for GwsLogs, see logs/proto/knowledge/interpretation/personal_intelligence.proto.
*   airlineConfig (type: GoogleApi.ContentWarehouse.V1.Model.TravelFlightsAirlineConfig.t, default: nil) - Used if the entity is an airline with an airline annotation.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua. Must not be used by outside clients!!

The client provided this entity. Currently, this exclusively corresponds to an entity that was circulated by the client. See go/on-device-aes for more details.

A group of contacts for a given user, as described in http://cs/p#google3/focus/backend/proto/backend.proto Historically (and in still-existing ACLs), this was used to represent Google+ circles as well as contact groups, but this use is now deprecated. New code should use the CIRCLE principal type to represent Google+ circles.
*   groupId (type: String.t, default: nil) - Group ID is unique only relative to the owner's Gaia ID.
*   requiredConsistencyTimestampUsec (type: String.t, default: nil) - If present, then tests for membership in this ContactGroup must use data known to be at least as fresh as the given (FBS-assigned) timestamp. See http://go/fbs-consistent-read-after-important-write Before using this, be sure that any service checking authorization against this group supports checking consistency timestamps. For example, as of 12/2011, Keystore only supports this for the Moonshine configuration, and in others authorization checks will fail if the timestamp is present.


Fields used in legacy applications. Useful for joining legacy and new data streams. Most applications should not care about these fields.
*   mobileOwnerId (type: String.t, default: nil) - Mobile obfuscated gaia id. This is the same gaia id in metadata.owner_id, but obfuscated with the legacy mobile obfuscator.

A representation of a person other than the current user, who may have created the reminder for the current user, or will receive it from them.
*   displayName (type: String.t, default: nil) - REQUIRED. Their full name, which will be shown/spoken when referring to this person informally, e.g. "You have 2 reminders from Dave Smith."
*   gaiaId (type: String.t, default: nil) - REQUIRED. Their gaia id (used by the backend for CRUD operations).
*   givenName (type: String.t, default: nil) - REQUIRED. Their given name, which will be shown/spoken when referring to this person informally, e.g. "You have 2 reminders from Dave."
*   photoUrl (type: String.t, default: nil) - OPTIONAL. The URL of the photo. This field is read from photo field from go/people-api. Also see go/khdgk for URL formats. This field might be missing if user does not have photo URL available.


The information on whether the contact is related to an app shortcut. Next ID: 2

Capabilities that are associated with Assistants on auto surfaces. This is different from other capabilities such as CarSettingsCapabilities, CloudCarCapabilities since they are specific to settings and 3P cloud information. All the auto/car Assistant specific capabilities should live here.
*   shouldPuntMultiAssistantMode (type: boolean(), default: nil) - Indicates whether the current Assistant should provide a multi Assistant specific punt when there are multiple Auto specific Google Assistants (Android Auto Projected (AAP) and Android Auto Embedded (AAE)) in the same GAS enabled car. This will be used by both AAP and AAE. Design doc: go/doubledash++




Features for a set of Sports Key Moments (SKM) Anchors. Each instance of this object should be associated with a VideoAnchorSets object. Next ID: 3
*   prefilterClassificationLabel (type: String.t, default: nil) - The Prefilter classification label associated with the video that contains the VideoAnchorSets this object is asociated with. E.g. "basketball".




Backends return Evaluations to AbuseIAm. One of the things Evaluations are used for is to explain Verdicts.
*   backend (type: String.t, default: nil) - Who creates this Evaluation. This field is required.
*   clusterEvaluationContext (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamClusterEvaluationContext.t, default: nil) - Extra information regarding the cluster review context where the case received the evaluation.
*   comment (type: String.t, default: nil) - Backends can choose to put some debug info in addition to abuse_type, score, and status.
*   feature (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamFeature.t), default: nil) - A set of repeated features to allow adapters to return semi structured data. Please, prefer using feature instead of the old misc_data field since it supports richer and more structured data to be passed back.
*   manualReviewInfo (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamManualReviewEvaluationInfo.t, default: nil) - Information about the manual review, for manual review evaluations. Do NOT expect this field to be set if backend != MANUAL_REVIEW.
*   miscData (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamNameValuePair.t), default: nil) - This field is used to store miscellaneous information that Backend might provide. If you find youself here considering to use this field, please prefer using the repeated feature field below instead. It supports a richer structure for passing complex data back from the backend.
*   processTimeMillisecs (type: String.t, default: nil) - Time in milliseconds when the Backend processed this Evaluation.
*   processedMicros (type: String.t, default: nil) - When the evaluation was processed by the decision script.
*   region (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamRegion.t), default: nil) - The list of regions where the evaluation applies.
*   timestampMicros (type: String.t, default: nil) - When the Evaluation was generated.
*   userRestriction (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamUserRestriction.t, default: nil) - A boolean expression tree used to define the restrictions where the verdict applies. Please use java/com/google/ccc/abuse/abuseiam/client/TakedownManager.java to evaluate this proto.
*   version (type: String.t, default: nil) - Version of Backend. For rules, this string is the only way to differentiate between them.
*   videoReviewData (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamVideoReviewData.t, default: nil) - Information about the video review, for video review evaluations. Do NOT expect this field to be set if backend != VIDEO_REVIEW.

Metadata fields for UMP. A piece of data satisfies UMP policy if: (data access region is in the regions_allowed list) AND (data access time >= availability_start_timestamp) AND (data access time < availability_end_timestamp)
*   availabilityEnds (type: DateTime.t, default: nil) - Timestamp after which data with this policy cannot be used.
*   availabilityStarts (type: DateTime.t, default: nil) - Timestamp before which data with this policy cannot be used.

Represents the invitees or other users associated with a Babel Chat (see http://goto/babel). Corresponds to GroupType CHAT in //social/graph/storage/proto/data.proto.
*   chatId (type: String.t, default: nil) - Chat IDs consist of alphanumeric characters and colons. Currently required.
*   memberType (type: integer(), default: nil) - The type of Chat members to consider, e.g. "all members" vs. "invitee" These are defined by legacy_relation_id values in social.graph.storage.EdgeTypeEnum.EdgeType enum options in social/graph/storage/proto/id.proto. See chat.pb (defined in production/config/cdd/socialgraph/mixer_config/prod/node_type_config) for all valid edge types associated with chat. Currently required.

A list of entities that are latent given this entity. For example, "Lionel Messi" can have the latent entity "FC Barcelona". See go/refx-latent-entities for detailed description.
*   latentEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLatentEntity.t), default: nil) - Latent entities with associated metadata including source of the relationship. This is pruned ("compacted") from the concept table and will never reach the annotator.

Data about a frame associated with the video.
*   docid (type: String.t, default: nil) - The canonical docid of the frame.
*   regions (type: list(GoogleApi.ContentWarehouse.V1.Model.MediaIndexRegion.t), default: nil) - Metadata associated with regions within this frame.
*   starburstTokensV4 (type: list(String.t), default: nil) - Note: due to the migration to Golden7-source Starburst v4 embedding, no starburst_tokens_v4 will be provided in video content corpus (go/video-content-corpus). But this field is kept in case other purposes may still use it in the proto.
*   thumbnailType (type: list(String.t), default: nil) - Set of available thumbnail types for this frame. Should be valid image_base.ThumbnailType values (enumerated at http://google3/image/base/thumbnail-type.proto).

Represents an OAuth consumer, a/k/a AuthSub target. These principals are identified by domain name (e.g., example.com). Historically, Dasher domain GAIA group IDs have been used instead, but that doesn't work: http://go/tricky-gaia-ids




Document related features used in snippets scoring. Next ID: 10

ProviderDelta. The incremental change, e.g. installation or deletion for Spotify or iHeartRadio. Currently it is for Android only. A few considerations for edge cases: - If the app being deleted is not found from Footprints, it is ignored. - For Footprint upload through Geller, the gPRC response is available for client to retry in the next upload if the upload fails. - For Assistant Request, there is no upload status similar to the current AppCapabilities. Next ID: 4
*   androidAppInfoDelta (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfoDelta.t, default: nil) - The android app information of the provider.
*   fallbackUrl (type: String.t, default: nil) - A URL to fallback to if app can not be opened.
*   iconImageUrl (type: String.t, default: nil) - Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com/UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM

A crossing describes a path from the end point of a segment to the start point of its sibling. Each individual crossing should uniquely represent a physically distinct crossing in the real world. Pedestrian crossings are bidirectional. This proto represents "simple" crossings. More complicated crossings (such as the diagonal crosswalk at Shibuya Station in Tokyo) will be represented using a separate pedestrian network. Example 1: Standard four way crossing. Assume each road (A/B/C) has a crosswalk (denoted by a '-') right before intersection X. Assume crossing at D is prohibited (denoted by a '%'). Assume "prime" roads (A',B',...) are OUT segments relative to X. A\A' B//B' \ // \ // - - X - % // \ // \ C'//C D'\D  A CROSSABLE PedestrianCrossing should be added to A, B and C.  An UNCROSSABLE PedestrianCrossing should be added to D. Example 2: Simple intersection with one crossing. Assume intersection X was added to accommodate the crosswalk (through X, denoted by '-'). Assume "prime" roads (A',B',...) are OUT segments relative to X. A\A' \ \ -X- \ \ B'\B * A CROSSABLE PedestrianCrossing must be added to either A or B, but not both because each real-world crossing should be represented exactly once. Duplicative crossings may be arbitrarily removed.
*   angleDegrees (type: float(), default: nil) - This value specifies the angle of the crosswalk. Zero degrees represents a crosswalk perpendicular to the direction of travel, towards the right side of the segment. The crosswalk angle, winds clockwise. Range [-90, 90]. The following crosswalk would have a 15 degree angle: / / <--/-------------------------------- / /
*   crossAnywhere (type: boolean(), default: nil) - This value enables crossing anywhere (not just at the segment’s endpoint), typically used on long, low-traffic residential streets. This attribute is only respected for trivial segment -> sibling routes. All other routes can cross at a MapFacts intersection.
*   crossingType (type: String.t, default: nil) - Crossing type is used as a restriction and can also be used for rendering.
*   offset (type: number(), default: nil) - The crossing offset defines a fraction between the distance from the segment endpoint to the centerline of the crosswalk and the length of the segment. For example, the segment length is 20 meters and the distance from segment end to center of crosswalk is 2 meters, the value of offset will be 0.1.
*   restriction (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t), default: nil) - Restrictions for this crossing (such as constructions on the crosswalk). They must not have subpath or travel_mode.
*   width (type: number(), default: nil) - This value defines the full width of the crossing in the direction perpendicular to the direction which pedestrians walk on the crossing (in meters). The crossing is allowed to "spill" into the next segment (0.5 * width can be greater than the offset). Cannot be a negative value.

Frame-level similarities info for each topic for an interval of frames.
*   frameSimilarity (type: list(number()), default: nil) - The similarity between this topic and starburst features for frames in [frames[frame_level_starburst_start_index], frames[frame_level_starburst_start_index + len(frame_similarity)].
*   framesEndTimestampMs (type: String.t, default: nil) - Timestamp in milliseconds for the last frame in this frame interval.
*   framesStarburstStartIndex (type: integer(), default: nil) - The index of the first frame within this interval of similar frames. VideoMultimodalTopicFeatures.frame_starburst_data.
*   framesStartTimestampMs (type: String.t, default: nil) - Timestamp in milliseconds for the first frame in this frame interval.

Settings that control how a photo overlay is displayed.
*   relativePosition (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoRelativePosition.t, default: nil) - Top left position of the overlay relative to the user's avatar.
*   relativeScale (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoRelativeScale.t, default: nil) - Scale of the overlay relative to the user's avatar.

DEPRECATED: PLEASE USE dependency_head AND dependency_label FIELDS. One edge of the dependency parse.
*   deprel (type: String.t, default: nil) - Relation label for this dependency. Generally this should be using the Universal Dependencies label format, using fine- grained labels like nsubj:pass.
*   head (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The head of this token. By default, the root of the sentence is its own head; it should also have deprel as 'root'.




A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.
*   detectedLanguages (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentPageDetectedLanguage.t), default: nil) - A list of detected languages together with confidence.
*   provenance (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentProvenance.t, default: nil) - The history of this annotation.

LINT. IfChange(ungoverned_message_notification) This proto captures the contents of a messaging app notification that is typically part of a conversation thread. Next Id: 21
*   appName (type: String.t, default: nil) - App name of the message notification, e.g. Hangouts.
*   bundleId (type: String.t, default: nil) - The key used to group this notification into a cluster.
*   dataUri (type: String.t, default: nil) - Uri for the attachment (image, audio, video etc.).
*   groupName (type: String.t, default: nil) - Name of the group associated with the message notification. This field is set iff this is a group message.
*   groupingKey (type: String.t, default: nil) - The group key of a proactive notification. Details in assistant.api.client_op.NotificationArgs.grouping_key.
*   markAsReadActionAvailable (type: boolean(), default: nil) - Boolean indicating if the mark_as_read action is available for this message.
*   messageLength (type: integer(), default: nil) - Length of the message/notification content in characters. Note: We can't send the full content because of privacy restriction, preventing sending client content to our backends. Concatenated message_length of all notification_entries.
*   notificationKey (type: String.t, default: nil) - String key of the notification. It is the key from original StatusBarNotification received from Android OS. It is used to identify the original notification to send a reply.
*   opaqueToken (type: String.t, default: nil) - The opaque_token of a proactive notification. Details in assistant.api.client_op.NotificationArgs.opaque_token.
*   postTime (type: String.t, default: nil) - Timestamp of the last notification's post time.
*   replyActionAvailable (type: boolean(), default: nil) - Boolean indicating if the reply action is available for this message.
*   senderName (type: String.t, default: nil) - Sender's name of the message notification, e.g. Elsa. Last sender name in case of a group conversation.

Plexity is a conceptual distinction between viewing something (a slot filler, for example) as a single individual, or as a complex concept consisting of multiple individuals or subparts. Note that plexity is not the same as (or correlated with) either grammatical number or with distributive and collective interpretations of the slot. The PlexityRequirement proto and Plexity enum are defined outside ValueType as we may move the plexity specification to a different place in the intent protos in future.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.
*   simplePlexity (type: String.t, default: nil) - Simple plexity: the slot's filler must allow the specified plexity value, for example it must contain multiple individuals if the plexity is MULTIPLEX.

QuerySats contains the information about the queries that users typed to search for this image.
*   queryTextPornScore (type: number(), default: nil) - A query text porn score for the queries which have clicks to the image: query_text_porn_score := sum(clicks(query) * text_porn_score(query)) / sum(clicks(query))

An image represents the data about an image or a photo. LINT. IfChange NextId: 13
*   accessibilityText (type: String.t, default: nil) - A text description of the image to be used for accessibility, e.g. screen readers.
*   appIconIdentifier (type: String.t, default: nil) - App identifier. This field is specific to mobile surfaces and stands for app package name for Android surface, and app bundle identifier for iOS. In case identifier is specified but invalid, some default icon will be used, e.g. PackageManager.getDefaultActivityIcon() for Android. If you want to show image for AGSA versions which don't support this field, you can specify source_url as backup.
*   badgeImage (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesImage.t, default: nil) - This is the image that is displayed as the badge on the main image.
*   content (type: String.t, default: nil) - Content of the image in bytes.
*   imageSource (type: String.t, default: nil) - Indicate the data source where the image is fetched.
*   jsonContent (type: String.t, default: nil) - Content of image in form of JSON representation.
*   letterDrawableText (type: String.t, default: nil) - Text used to generate a letter drawable (a letter icon with color). It will be the default icon if the source_url is empty or cannot be rendered.
*   providerUrl (type: String.t, default: nil) - Url of the image provider, which is the website containing the image. For example, https://www.agentx.com.
*   sourceUrl (type: String.t, default: nil) - The source url of the image. For example, https://www.agentx.com/logo.png
*   width (type: integer(), default: nil) - The width and height of the image in pixels.

The extended version of this snippet.

Used for storing fingerprints, along with meta-data that expresses how the fingerprint was computed. The metadata can be anything that fits in an uint64.
*   value (type: list(String.t), default: nil) - Repeated to allow for fingerprints larger than 64-bits.


Generic geo-location information. This is error-prone due to the fact that is uses signed integer fields, which are not supported by proto1 API and are cast to unsigned integers. Consider using the metadata_util function directly, which fills out a version 2 API proto.
*   altitudeE2 (type: integer(), default: nil) - Altitude is in meters and multiplied by 100 (i.e., in centimeters). Up till 10 km this fits in 3 bytes.
*   latitudeE7 (type: integer(), default: nil) - Latitude and longitude are in degrees and multiplied by 10^7. This gives the worst precision of about 1 cm at the equator.

A UID of URL Tree. There is a hash function and a equality function for UrlTreeKey in //indexing/url_pattern/url_tree/util/url-tree-key-util.h. When adding or deprecating a field in this proto, please also update the hash function and the equality function. LINT. IfChange


Extra context about how the entity relates to the document. Typically vertical-specific.
*   subject (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosEntity.t, default: nil) - The subject of the semantic relationship. This is set when the relationship is derived from some other entity. The exact meaning of this field depends on the ContextType.
*   type (type: String.t, default: nil) - The type of semantic relationship between the document and the entity. This allows one to retrieve vertical-specific fine-grained information about the document.

The KaiOS app information of the provider. Next ID: 4
*   packageName (type: String.t, default: nil) - Unique package name that identifies a KaiOS app of the provider.







A qualifier represents an extra piece of context about an assertion/fact. See go/qualifiers-in-kg for more details.
*   pred (type: String.t, default: nil) - The qualifier pred must be a qualifier property defined in KG schema as applying to the predicate of the triple this qualifier is attached to.


Details of the work cluster for this Volume.

Extension data for use in GPay Product Profile. go/gpay-product-profile-1-pager Contact: profiles-eng-fe@google.com
*   failure (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure.t, default: nil) - Failure type if there is an error when fetching product profile data.
*   internationalNumber (type: String.t, default: nil) - A number in international format including the country code that is made user readable by including formatting such as spaces. Example: "+41 44 668 1800" DEPRECATED: A user's phone number should be masked and not in an international format
*   maskedNumber (type: String.t, default: nil) - The masked string of a user's phone number The number will be obfucsated with * except the last 4 digits. Refer to: //java/com/google/nbu/paisa/common/PhoneNumberMasker.java

Aqua features exported from a subgrammar. Primarily added here for External Subgrammar Annotations to work. See go/esa-exported-features for details. NOTE: Feature names can change and the existence of any feature is not guaranteed. Get in touch with ig-eng@ before using these features.

Geopolitical (unsimplified) polygons for a feature for different geopolitical use cases. See go/unsimplified-poly.
*   restOfWorldPolygon (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePolygonProto.t, default: nil) - The unsimplified, water-subtracted polygon representing the feature's geometry as viewed by the rest of the world, which may differ from its default polygon, for example by excluding certain regions.
*   selfPolygon (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePolygonProto.t, default: nil) - The unsimplified, water-subtracted polygon representing the feature's geometry as viewed by the country that administers it, which may differ from its default polygon, for example by including disputed areas.

The stats of each output vsi.
*   partialVsi (type: boolean(), default: nil) - True if the output vsi is a partial vsi.
*   vsiTime (type: float(), default: nil) - The time (in secondes) from vsi_engine init to vsi written to output buffer.

entityIdf (type: number(), default: nil) - The final (model omega) idf of an entity. Equals log2(1 / probability of the entity to appear in a document). This probability is currently estimated from its names (i.e. it is a sum of the name frequency weighted by P(entity | name)).


A VideoId is the unique identifier of a video. Privacy: VideoIds are visible in logs, notifications, etc and must not contain PII.
*   id (type: String.t, default: nil) - REQUIRED. IDs have some constraints: - 32 bytes max: this is enforced by the server - for the time being, must be parseable as a youtube ID (basically a base64-encoded string which maps to a 64-bit integer). This restriction will eventually be lifted.




A PriceListProto can be used to represent any type of price lists, one of which is a menu of food and drinks. It contains names and descriptions, together with its source URL list if it is extracted or attributed to that URL. The names and descriptions are represented using repeated PriceListNameInfo fields to allow versions in different languages. A PriceListProto may contain multiple sections; in the context of a food menu, this would be multiple menu sections, e.g. for breakfast, lunch, dinner, prix fixe, or dinner for two, etc. At least one menu section must be present. Each section contains a number of items; for food menus, it may be FoodMenuItems defined below. At least one item must be present in each section.
*   aggregatorId (type: String.t, default: nil) - For third party lists, represents the ID of the aggregator which provided this data. Optional.
*   availableTime (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeScheduleProto.t, default: nil) - The time period when this price list is available. Establishments are not required to give available_time for any given price list, however, when this field is not set, the price list is understood as available any time the establishment is open.
*   cuisines (type: list(String.t), default: nil) - Cuisine information if the location the price lists attached to is an eligible feature for a food menu price list. Cuisine information should also only show up in a food price list.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - The repeated name_info field is for price lists listed in multiple languages. When a price list has no names or descriptions, the size of the repeated field name_info may be 0. There should be at most one name_info for any given language.
*   section (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListSectionProto.t), default: nil) - Each price list may have multiple sections. Note that these sections within the same price list should most times contain only the same type of items for sale, e.g. all sections should usually contain only food items if the enclosing price list is representing food menu. However, sometimes such a requirement may be wrong, for example, McDonald's may sell burgers as well as toys, and the toys may be in its own section. Thus we don't enforce any requirement that all sections contain only the same type of items.
*   sourceUrl (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreUrlListProto.t, default: nil) - Where this price list comes from. If set, this must also be a member of the price_list_url field, and represents translations of a single URL.

Proto message containing one or multiple trusted genome entity. This is used to capture entities that belong to the same type and have parent-children relationship in the taxonomy. e.g. One hierarchy may include 3 entities with Game_Taxonomy Type: (1) Action (Level 1) (2) Platformer (Level 2 under Action) (3) Endless Runner (Level 3 under Platformer) e.g. One hierarchy may also include only 1 entity with Game_Graphic_Style: (1) Anime (No level information) Next ID: 5
*   entity (type: list(GoogleApi.ContentWarehouse.V1.Model.VendingConsumerProtoTrustedGenomeEntity.t), default: nil) - List of entities (one or multiple) that belong in the same hierarchy. The entries will be ordered such that the first entry will be of level 1, and the second entry will be of level 2, and so on. Required
*   hierarchyType (type: String.t, default: nil) - The (hierarchy-level) type of this Trusted Genome hierarchy. Will only be populated when meeting certain criteria, e.g. 'GD2_Game_Main' means this hierarchy of entities can serve as the main game genre for Game Discovery 2.0.
*   source (type: String.t, default: nil) - The source of this Trusted Genome hierarchy.
*   trustedGenomeType (type: String.t, default: nil) - The (entity-level) type of trusted genome entities in this hierarchy. Required.

The proto containing all the information we extracted from docjoin, for the source_url of the dataset. NEXT TAG: 17
*   displayUrl (type: String.t, default: nil) - The url used to display in the google search results.
*   docid (type: String.t, default: nil) - The docid of the document.
*   indexTier (type: list(String.t), default: nil) - Index tiers (BASE, UNIFIED_ZEPPELIN, etc) that the document belongs to. NOTE: Each document may belong to multiple tiers. NOTE: The original data type is an enum CompositeDoc::SubIndexType. However we don't want to depend on segindexer/compositedoc.proto because the proto is too large. Instead, we use CompositeDoc::SubIndexType_Name( subindexid) to convert into a string representation. To convert string back to CompositeDoc::SubIndexType, use CompositeDoc::SubIndexType_Parse.
*   languageCode (type: String.t, default: nil) - The language of the document in the string representation of LanguageCode. Converts from Language Enum to LanguageCode through i18n/identifiers/langenclanguagecodeconverter.h Please use i18n/identifiers/languagecodeconverter.h for converting between LanguageCode and string representation.
*   latestPageUpdateDate (type: String.t, default: nil) - The syntactic date of a dataset document that reflects the publication date of the content.
*   navboostQuery (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchNavboostQueryInfo.t), default: nil) - A sequence of Navboost queries for the dataset source_url.
*   pagerank (type: integer(), default: nil) - The page rank of the document.
*   petacatInfo (type: GoogleApi.ContentWarehouse.V1.Model.FatcatCompactDocClassification.t, default: nil) - Petacat classifications for the web document. Normally the results from calling Petacat come in a PetacatResponse, which is very flexible and extensible. This proto takes most of the flexibility away - only rephil clusters, taxonomic classifications, and binary classifications, with discretized weights.
*   salientTerms (type: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTermSet.t, default: nil) - A set of salient terms extracted fromthe document. DEPRECATEAD. Moved to DatasetMetadata for performance reasons.
*   sporeGraphMid (type: list(String.t), default: nil) - A set of entities from WebRef annotations that are in SPORE_GRAPH.
*   title (type: String.t, default: nil) - The title of the document.
*   topEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntity.t), default: nil) - A set of top entities from WebrefAnnotation, top is defined by topicality score, see go/topicality-score for detail. DEPRECATED. See label_to_mids_map instead.
*   url (type: String.t, default: nil) - The url of the document.
*   webrefEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchSourceUrlDocjoinInfoWebrefEntityInfo.t), default: nil) - A set of entities copied from WebRefEntities on cDoc.

A message representing the collection membership of an entity.
*   collectionMid (type: String.t, default: nil) - Identifier of the collection, usually a MID (/m/xyz or /g/zyw).
*   score (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryCollectionScore.t), default: nil) - Different types of scores for the collection. Each score type has at most one score.

Capabilities with regard to support of outputting TTS.
*   supportsStructuredTts (type: boolean(), default: nil) - Specifies whether client supports out-of-band TTS synthesis. When this is enabled, client could receive TTS request message in SpeechOutputArgs.structured_tts which it can then use to make request to S3 for synthesizing TTS audio.

The mid and description of a WebRefEntity.
*   description (type: String.t, default: nil) - The English description of the mid from the KG.
*   mid (type: String.t, default: nil) - The KG identifier of the WebrefEntity.

The goal of the special words are to: - Canonicalize the user query by rewriting abbreviations into the canonical version that is indexed. - Figure out at index time for each element which tokens are important. We use this to decide if an address component is matched or not. For instance in "1600 Pennsylvania Ave NW" since "NW" is recognised as a directional (and "Ave" is recognised as a street visible type), "Pennsylvania" becomes the name and you can't match this street by just specifying "avenue" or "NW".
*   alternate (type: list(String.t), default: nil) - Alternate versions of this canonical form. This is mainly abbreviations of the canonical form e.g. "St", "NE", etc. This should be present as it is used in the specified language with the correct capitalization, accents, etc. in UTF-8.
*   canonical (type: list(String.t), default: nil) - Canonical versions: the version which is in oyster. This should be present as it is used in the specified language with the correct capitalization, accents, etc. in UTF-8. The canonical can be a single or a multi-token string. There can be several canonicals, e.g. "center" and "centre" in English.
*   country (type: list(String.t), default: nil) - If empty, apply this rule to any country. Otherwise, a list of ISO 3166-1 alpha-2 (2-letter uppercase) country codes that this description applies to.
*   flags (type: GoogleApi.ContentWarehouse.V1.Model.MapsQualitySpecialWordsFlags.t, default: nil) - Boolean flags indicating what type of special word this is.
*   language (type: list(String.t), default: nil) - The III language code of the language that this description applies to. No language means that this applies worldwide. This could be useful for codes like country codes or airport codes or for displayed language neutral icons. A special word with a language code here also applies to the regional variants of that language (e.g. "en" applies to "en-GB" and "en-US" as well).
*   visibleTypeId (type: list(String.t), default: nil) - visible_type_id from VisibleTypeProto for visible types converted to the special words. For original special words this field is empty.

Stores the information about each cluster of versions. Versions are defined in go/s2-versioning. Next available tag: 4
*   indexInVersionCluster (type: integer(), default: nil) - Index of this dataset in its cluster of versions.
*   numVersions (type: integer(), default: nil) - The number of versions in a Version Cluster. This is equivalent to cluster size.
*   versionClusterId (type: String.t, default: nil) - A fingerprint id of the cluster of versions this dataset belongs to. This is a hash of a dataset_id in the cluster.

Specification of which webview features can be used.
*   jasperWebviewConsent (type: boolean(), default: nil) - Indicates if user has consented Jasper warning message.


Specifies the allowed type(s) that a value can have, e.g. for a Slot. For example, having both entitytype and string_type present in a ValueType field of a Slot means that the Slot can take _either an an EntityType or StringType as a value, and nothing else. It may be helpful to think of this proto as being called something like AllAllowedValueTypes. To enforce a component-specific contract (go/contract-based-conformance) for allowed type(s), we add a repeated field viewspecific${x} for the type ${x}. For example, if we want a slot that can hold any type by default, but can only hold an integer when checking against the P2_LWA contract, then the following should be added to MeaningCatalog: slot { name: "integer_only_slot" type { // The default view has no sub_type or other options. number_type {} // The P2_LWA view specifies INTEGER sub_type. view_specific_number_types { sub_type: INTEGER component_specific_contracts: P2_LWA } } } See go/view-based-options-for-valuetype for more information. Next tag id: 26 LINT. IfChange
*   anyType (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersAnyType.t, default: nil) - This type is meant to accept "any" type and allow any and all composition. As such, it should not be used for any composition algorithms, e.g. in Loose Parser. See more detailed discussion at go/any-type-in-mrf. This type may appear on an answer_type, implying that the output of that Meaning Schema is allowed to nest in any other slot. However, support for this is NOT implemented in Loose Parser due to risk of overcomposition, but the MRF Conformance checker allows for this. If you are thinking of using this, please contact mrf-team@.
*   dependencyType (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersDependencyType.t, default: nil) - Used for configuring dynamic types to allow for type transparency. See: go/type-dependencies
*   inputCompositionConfig (type: String.t, default: nil) - When specified on a slot's type, restricts composition based on the enum value. This does not mean anything when the value type is to be interpreted as an output_type.
*   normalizedStringType (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersNormalizedStringType.t, default: nil) - Note that normalized_string_type is NOT supported in the loose parser. A slot with this type will cause the intent to not be parsed.
*   viewSpecificNumberTypes (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersNumberType.t), default: nil) - LINT.IfChange Contract-specific typing (go/view-based-options-for-valuetype). NOTE: To facilitate writing macros for view-specific filtering, all view-specific fields should be named with the format "viewspecific${singular_field}s" -- e.g., for the singular field |number_type|, the view-specific repeated field is |view_specific_number_types|. LINT.ThenChange( //depot/google3/nlp/meaning/remodel/meaning_remodeling_utils.cc:ViewSpecificTypes, //depot/google3/nlp/meaning/analyzer/checks/component_specific_contracts_checks.cc:ViewSpecificTypes)

Sensitivity is marked at end of the last turn. See go/followon-sensitivity for more details.
*   blockNonV2SearchBackends (type: boolean(), default: nil) - Should e2e search candidates running in parallel with QU (eg. GBot) be blocked.
*   ignoreQueryUnderstanding (type: boolean(), default: nil) - Iff true this follow-on sensitivity will rank above the ones determined by query understanding (QU).

A DestinationStream is a /namespace/id[0]/id[1]/.../id[n] that represents a collection of Activities. Example destinations: -The Profile Stream on http://plus.google.com/+JohnDoe/posts -A Square Stream on http://plus.google.com/squares/123 -A "comment Stream" (Fountain) on http://www.youtube.com/watch?id=123 It's possible for a single Activity to show in each of these destinations - and it might behave/look slightly differently for each one. Destinations can have their own business logic associated with them at both write-time and read-time server-side (these are documented below). Each DestinationStream is indexed and can be retrieved using the GetDestinationStreamRequest. For the repeated ID space indexing happens at all levels, e.g. if you have: /square/123/abc /square/123/efd /square/456 You can fetch /square/123/abc directly or /square/123 (which includes all Activities in both /square/123/abc and /square/123/efd), or even /square which retrieves all Activities in the Square namespace (visible for that user). On the storage layer, we represent DestinationStream as Channel (http://cs/#google3/social/common/channel/channel.proto), since the storage does not have the concept of a Stream. Both terms are used interchangeably within the service layer, but client of Social Infrastructure should use the term DestinationStream. Next ID: 3
*   id (type: list(String.t), default: nil) - The hierarchy of IDs. Each individual ID is "flat" and the repeated list defines the hierarchy. Namespaces define the "validity" of this hierachy (depth, naming convention, etc) and the server will reject invalid IDs.

The status indicating the user is in a meeting.
*   committedUntil (type: DateTime.t, default: nil) - The time when the user will either stop being committed or change commitment type (i.e. InMeeting, DoNotDisturb, Busy or OutOfOffice < Xh). Note that the goal of this field is to provide information to help users decide how to communicate with a user (see also http://shortn/_wXYXtZScgh).
*   eventSummary (type: String.t, default: nil) - The summary of the corresponding event in Calendar.
*   inMeetingsUntil (type: DateTime.t, default: nil) - The time when the user will stop being in a meeting.
*   nextAvailable (type: DateTime.t, default: nil) - The next time when the user will be available, i.e., when their status will be neither InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
*   occupiedUntil (type: DateTime.t, default: nil) - The time when the user will stop being occupied, i.e., when their status will be neither InMeeting, Busy nor DoNotDisturb.

The social connection of this person to the viewer. NOTE: this is used by go/starlight, but not actually used or returned in PeopleAPI. See b/27281119 for context.


This field records where the ItemScope was retrieved, if it was created via a web fetch.
*   canonicalUrl (type: String.t, default: nil) - Canonical url of the retrieved_url, if one was resolved during retrieval, for example, if a rel="canonical" link tag was provided in the retrieved web page.
*   inputUrl (type: String.t, default: nil) - The url originally passed in the PRS request, which should be used to re-discover the content. Note that this URL may be a forwarding service or link shortener (bit.ly), so it should not be assumed to be canonical, but should be used for navigation back to the original source of the itemscope.
*   itemtype (type: list(String.t), default: nil) - Contains exact types as parsed, whether or not we recognized that type at parse time. If an itemscope is created by merging SchemaOrg markup and open graph markup then the first itemtype would be schemaorg type, the second would be open graph and so on. example: http://schema.org/VideoObject, og:video.movie Plain text; usually a URL
*   retrievedUrl (type: String.t, default: nil) - The final URL that was the actual source of the itemscope, after any redirects.

Wrapper message containing list of regions and their corresponding type of region signal to use in data governance.
*   regionType (type: String.t, default: nil) - The particular type of region should be explicitly set to disambiguate.
*   regions (type: list(String.t), default: nil) - Values are go/iii RegionCode in capital case. It is a good practice to keep elements in this list unique, although not enforced. In case of duplicated entries, they'll be treated as if there were only one entry of the same value.

Relation stores the related person between the contact or profile and a third person. See go/relation-vs-relationship for relation vs relationship explanation. This field currently includes RelationshipToMe data in fields value and canonical_value for ContainerType CONTACT_ANNOTATION. This will be moved to RelationshipToMe in b/221081499.
*   canonicalValue (type: String.t, default: nil) - Canonicalized value of the relation from this person to the user. This is currently used for data from contact annotations. Possible canonical values are based from http://google3/googledata/quality/aliases/relationship_en.config.
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   relationDetails (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRelationRelationDetails.t, default: nil) - The person whose email matches the Relation.value field, if it is a valid email address. This field is read-only and ignored on update.
*   type (type: String.t, default: nil) - The relation type. The type can be free form or one of these predefined values:  spouse  child  mother  father  parent  brother  sister  friend  relative  domesticPartner  manager  assistant  referredBy  partner
*   value (type: String.t, default: nil) - The person this relation applies to. Custom value provided by the user.




The proto to be stored in raw_redirect_info column of document table.
*   rawFinalTargetFromRendering (type: String.t, default: nil) - Final redirect target found from rendering. It is the same as the last element of raw_redirect_chain_from_rendering. It is used as an input source for the indexable fragment detection pipeline and also downstream phases.
*   rawFinalTargetFromTrawler (type: String.t, default: nil) - This is with-fragment version of redirect_with_contents. This field is populated only if there was a fragment. This field is used by indexing::mobile::GetRedirectTarget() defined in indexing/mobile/internal/smartphone-util.cc, which extracts the redirect target for smartphone optimized pages. The extracted target in turn is served in search results for smartphone users. We need with-fragment version because with-fragment url can return different content than fragment-stripped url. For example, http://www.example.com/m#article=11 and http://www.example.com/m can return different content. These cases are most typical for Ajaxy sites. This fragment does not have to be indexable.
*   rawRedirectChainFromRendering (type: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRedirectChain.t, default: nil) - Redirect chain generated from redirect events in rendering. At the beginning of it, there could be some redirects from trawler (i.e. could be partial or entire trawler redirect chain), other redirects have their RedirectParams::is_redirect_from_rendering fields set to true. Redirects here have no RedirectChain::Hop::raw_target fields populated, and targets stored in RedirectChain::Hop::target fields are likely cleaned while keeping fragments (also sometimes they could be uncleaned ones because of cleaning failures), fragments could be indexable or non-indexable.
*   renderingRedirectLimit (type: integer(), default: nil) - This is used to describe how many redirect hops from Webkit were kept in the raw_redirect_chain_from_rendering. If it is -1, it means it kept all the hops from Webkit in redirect chain.







Conceptually this describes one location. Technically, this is a sequence of location elements with the intention that at least one element in the sequence is an actual location (rather than a modifier).


The value is carried over from an attentional entity. For example, in a dialog about a movie that publishes an attentional entity for /m/matrix: U: What is the cast. [Cast(location=/m/matrix)] G: The cast includes Keanu Reeves and others. U: Great, buy some tickets. [BuyTickets(movie=/m/matrix)] On the second user query, the "movie" argument would have a provenance of ATTENTIONAL_ENTITY.
*   attentionalEntityKey (type: String.t, default: nil) - This key can be used to recover the attentional entity from the corresponding attentional_entities::EntityCache.





Trust related information about the input source (feed or user) to help feature summarization. Typically, the values in this proto are either based on source's previous observations (e.g., a blocked LBC user or a trusted feed) or their status (Google hired operator or admin user). The proto can later contain a more granular trust score or correctness probabilities. A higher enum value indicates a more trusted source. Leaving room in the value space for adding more granular enums, if they become necessary later.
*   level (type: String.t, default: nil) - The level of trust for the source of the observation.

A range of the annotated document explained by an entity.
*   mention (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t, default: nil) - SegmentMention describing the occurrence of the token in the document.

For a more detailed presentation on what's a fetching operation, see go/datetime-meaning-schemas. Examples to illustrate how the proto is used: I. Fetching day-of-weeks: a) query: "1st 2 Mondays of April" proto: ordinal: 1 target {weekday: MONDAY} count: 2 range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} b) query: "1st and last Monday of April" proto: ordinal: 1 ordinal: -1 target {weekday: MONDAY} range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} c) query: "next Monday" proto: ordinal: 1 target {weekday: MONDAY} d) query: "last 2 Mondays" proto: ordinal: -1 count: 2 target {weekday: MONDAY} e) query: "this Monday" proto: ordinal: 0 target {weekday: MONDAY} f) query: "the monday after next" proto: ordinal: 2 target {weekday: MONDAY} g) query: "third Monday in April" proto: ordinal: 3 target {weekday: MONDAY} range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} h) query: "the monday before last" proto: ordinal: -2 target {weekday: MONDAY} i) query: "the second to the last monday in April" proto: ordinal: -2 target {weekday: MONDAY} range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} II. Fetching date/time unit: a) query: "1st 2 weeks of April" proto: ordinal: 1 target {unit: WEEK} count: 2 range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} b) query: "1st and last week of April" proto: ordinal: 1 ordinal: -1 target {unit: WEEK} range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} c) query: "next year" proto: ordinal: 1 target {unit: YEAR} d) query: "last 2 weeks" proto: ordinal: -1 count: 2 target {unit: WEEK} e) query: "this month" proto: ordinal: 0 target {unit: MONTH} f) query: "the week after next" proto: ordinal: 2 target {unit: WEEK} g) query: "third week in April" proto: ordinal: 3 target {unit: WEEK} range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} h) query: "the week before last" proto: ordinal: -2 target {unit: WEEK} i) query: "the second to the last week in April" proto: ordinal: -2 target {unit: WEEK} range: {begin {year: RESOLVED_YEAR month: APRIL day: 1} {end {year: RESOLVED_YEAR month: APRIL day: 30} Next field: 9
*   count (type: integer(), default: nil) - How many to fetch (e.g. [next weekend] vs. [next two weeks])
*   metadata (type: String.t, default: nil) - Can be used to tag relative datetime expressions with metadata information in the grammar.
*   ordinal (type: list(integer()), default: nil) - Encodes expressions like next (+1), last (-1), after next (+2), this (0).
*   range (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeRange.t, default: nil) - The restriction range on which fetching is operated, e.g., "April" in "first Tuesday in/of April." If this field is missing, the operation is done relative to the base_type (or if not given, to the query's reference datetime). When the fetching operation is performed relative to a reference time point, positive ordinal values represent upcoming instances from the reference point, negative ordinal values represent previous instances from the reference point. Similarly, ordinal=0 represents a reference to the "current instance", which may vary depending on the target. E.g. "this week" is simply defined as the week range that contains the current reference time point, but "this " can be ambiguous and its resolution will depend on language/locale conventions ("this monday" in some languages refers to the closest upcoming instance of Monday, while in other languages it represents the Monday instance within the current week).
*   rangeModifier (type: String.t, default: nil) - Modifier that return the appropriate subrange. For more information, see the description of RangeOfDateTimeModifier. Example:  early next week  late next Monday
*   relativeRange (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeResolutionProperties.t, default: nil) - If the underlying range comes from a relative datetime expression, encode the expression here instead.
*   target (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeTargetToFetch.t, default: nil) - The target to be fetched. This could be a named day-of-week or month (e.g., "Monday", "April"), or a date/time unit (e.g., "day", "week", "month").


How a piece of data was resolved through external data (either elsewhere in the query, or from a previous query). Examples: [obama and his age] -> "his" is resolved from the Obama entity obama -> "he" is resolved from the Obama entity starbucks -> Q2 is resolved from the list of shops
*   refersToFullMrf (type: boolean(), default: nil) - True iff this ReferentialResolution is part of an intent and refers to the full MRF subtree (rather than just the intent).

Identifies a set of anchors in the CompositeDoc. Typically these anchors were collapsed by WebRef into a single anchor and they were treated by the annotator as equivalent. They all contain the same mentions (at the same offsets).
*   index (type: list(integer()), default: nil) - The set of indices in the Anchors::anchor() array that belong to the collapsed anchors.

All nearest neighbors for one data point. Last tag used: 5
*   docid (type: String.t, default: nil) - Data point for which we computed nearest neighbors. This field is set based on the data_id_str field in the QueryRequest GFV (or SSTable key if data_id_str is not present), and thus can be arbitrary data, e.g. docid, URL, query string.
*   metadata (type: String.t, default: nil) - Metadata about the query. This field is populated if and only if: 1) ScaM is running in offline query-database or online mode and; 2) The metadata is directly fetched from the userinfo field inside GFV and; 3) MetadataConfig.userinfo.set_user_info_for_query is set to true. The field name is kept as "metadata" for consistency with neighbors.
*   query (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVector.t, default: nil) - The query vector for which we computed nearest neighbors.
*   retrievedVersion (type: String.t, default: nil) - The version ID of the server that responded to this query, if one was specified. This field is not populated for offline (i.e. Flume rather than RPC) search.

Proto contains parameters for a multiple component distributions, where each component has non-negative weight and the sum of component weights is 1.

These are the set of features that are supported by the device. It's a part of the SoftwareCapabilities of the device. Next ID: 68
isPairedPhoneNeededForComms (type: boolean(), default: nil) - Whether a Bluetooth-paired phone is a core component of communications flows on the client.  privacyAwareLockscreenSupported (type: boolean(), default: nil) - Whether the client supports the privacy-aware lockscreen protocol (go/assistant-lockscreen-spec).  immersiveCanvasConfirmationMessageSupported (type: boolean(), default: nil) - Whether the client supports confirmation messages in Immersive Canvas actions. Deprecated: use the filed in immersive_canvas_support.  whatsNextSupported (type: boolean(), default: nil) - Whether or not the client supports WhatsNext in the protocol.  crossDeviceBroadcastSupported (type: boolean(), default: nil) - Whether the client supports cross-device broadcast (i.e. on Torus).  sleepSensingSupported (type: boolean(), default: nil) - Whether the client can monitor sleep. This allows us to show sleep CUJ related information: go/TwilightDesign Use for development only, see the same field in DeviceCapabilities. SoftwareCapabilities.SelinaCapabilities.  duoClientApiFeatures (type: String.t, default: nil) - The features set which duo client on the device supports. This should be serialized from proto {@code duo_client_api.DuoClientApiFeatures}.  fitnessFeatureSupport (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiFitnessFeatureSupport.t, default: nil) - Information about what support this device has for fitness.  funtimeSupported (type: boolean(), default: nil) - Whether the surface client op performer supports Funtime alarms and timers. go/funtime-engdesign  shLockScreenSupported (type: boolean(), default: nil) - Whether the client supports SmartHome lock screen logic (i.e. on Tangor).  assistantExploreSupported (type: boolean(), default: nil) - Whether the client supports the assistant explore section. This field will be active only when the Explore section is available to the user. This means that the user is (a) signed-in, (b) a IOPA / AGSA user, and (c) in a locale where explore is available.  assistantForKidsSupported (type: boolean(), default: nil) - Whether Assistant for Kids (a.k.a. Designed for Family) features are supported.  transactionFeaturesSupport (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTransactionFeaturesSupport.t, default: nil) - Transactions features, supported by the client. Transactions feature may includes how Transactions team want to populate additional information from the device to the server.  noInputResponseSupported (type: boolean(), default: nil) - Whether the client can render no input response or just ignore it. No input response is returned when client has a no speech input interaction, eg. user tapped mic but didn't say anything.  hasPhysicalRadio (type: boolean(), default: nil) - Whether the client has a physical radio installed.  opaOnSearchSupported (type: boolean(), default: nil) - When the entry source is search, whether the client supports rendering a similar response as OPA one does. Entry source is defined at http://cs/symbol:assistant.api.params.DeviceProperties.EntrySource  sunriseFeaturesSupport (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSunriseFeaturesSupport.t, default: nil) - Whether the client supports the sunrise screen brightening feature before the alarm fires. This is used to indicate whether sunrise alarms can be set on the device. http://cs/symbol:assistant.api.core_types.governed.RingtoneTaskMetadata.GentleWakeInfo  mediaSessionDetection (type: String.t, default: nil) - The ability of the client to detect media sessions on the device.  gdiSupported (type: boolean(), default: nil) - Whether account linking via Google Deep Integrations (GDI) is supported. go/opa-gdi-design  thirdPartyGuiSupported (type: boolean(), default: nil) - Whether the device supports the 3p GUI framework, which allows third parties to enter the conversation with the user, showing their logo next to their chat bubbles, etc. go/3p-phone  gearheadNotificationSourceSupported (type: boolean(), default: nil) - Whether the client supports the Gearhead message notification source, in which case notification-related operations can access it.  fluidActionsSupport (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiFluidActionsSupport.t, default: nil) - Fluid Actions features supported by the client. If this field is not set in the incoming request, it could mean that the client does not support Fluid Actions. Alternatively, it could mean that the client supports Fluid Actions, but syncs state with server using the old protocol, namely ConversationStateParams. When b/140733618 is resolved, Surface Adaptation Layer will add this field for old clients that support Fluid Actions framework.  transactionsVersion (type: String.t, default: nil) - The version of transactions which the client supports.  confirmationBeforeReadingMultipleMessagesSupported (type: boolean(), default: nil) - Whether the client supports confirmation flow before announcement of multiple messages. If set to true the user will be prompted once and confirmation will be taken before all the messages are announced.  conversationalCareSupported (type: boolean(), default: nil) - Whether the client can render conversational care responses. go/conversational-care  warmWelcomeTutorialSupported (type: boolean(), default: nil) - Whether the client supports the programmatic warm welcome tutorial. Design doc: go/opal-pww-design.  appControlSupport (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppControlSupport.t, default: nil) - The client information for app control support. More details in: go/acaia.  usesSeparateFullViewer (type: boolean(), default: nil) - If set, it indicates that the client can open a separate HTML browser/webviewer (full viewer) to display certain visual results. These visual results usually require more memory to render (e.g. high resolution photos). Compared to the regular viewer that display all other Assistant result, the full viewer does not have memory limit. The field is copied from the device model. See http://google3/assistant/devices_platform/proto/device_model_capabilities.proto?l=225&rcl=312576471 Also see go/webassistant-full-card-viewer.  crossDeviceBroadcastVersion (type: String.t, default: nil) - The version of cross device broadcast (ie; broadcast on torus) which the client supports.  readMessagesTtsTaperingSupported (type: boolean(), default: nil) - Whether the client supports tts tapering for the read messages flow. If set to true the tapered tts variant would be used during the read messages flow.  remoteCloudCastingEnabled (type: boolean(), default: nil) - Whether the client has remote casting enabled. For ex: we want to disable this for clients like Auto.  clientOpResultBatchingSupported (type: boolean(), default: nil) - Whether the client can batch client op results before sending them to the server.  launchKeyboardSupported (type: String.t, default: nil) - Which way of launching the keyboard the client supports.  serverGeneratedFeedbackChipsEnabled (type: boolean(), default: nil) - Whether the Assistant Server should generate feedback suggestion chips.  lottieAnimationSupport (type: String.t, default: nil) - Whether the client supports the Lottie animation library for the broadcast feature.  signInMethod (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSignInMethod.t, default: nil) - Which kind of sign in the client supports.  soliGestureDetectionSupported (type: boolean(), default: nil) - Whether or not the client supports gesture detection via soli chips. The reason to prepend the name with soli is to distinguish it from computer vision based methods, e.g. Newman devices.  webBrowserSupported (type: boolean(), default: nil) - Whether the supports opening a URL in a web browser. For example, we want to disable this for clients like Chirp.  lensSupported (type: boolean(), default: nil) - Whether the client has Google Lens (Assistant Eyes).  tapToReadOptimizationSupported (type: boolean(), default: nil) - Whether the client supports faster optimization for tap_to_read feature.  inDialogAccountLinkingSupported (type: boolean(), default: nil) - Whether the client supports account linking in-dialog (askForSignIn). This is used before this feature is moved to conversation protocol. To support this, the client needs to: - Integrate with Google Deep Integrations. - Have logic to send the result of account linking back to AS.  mapsDialogsSupported (type: boolean(), default: nil) - Whether the client supports Assistant dialogs within Maps. This field will be set only when the Maps on the surface supports Assistant dialogs embedded within Maps. go/gsa-gmm.  parentalControlsSupported (type: boolean(), default: nil) - Whether or not the client supports enabling parental controls. When a device to supports parental controls, it has the software necessary to store the relevant information required for parental controls to work. This information includes a boolean "enabled bit" as well as the obfuscated gaia ID of the kid account selected for use with parental controls. Devices supportings kids mode send this information to S3 via S3ClientInfo in every request. See go/aff-kidsproduct for details.  bypassDiDcCheckForComms (type: boolean(), default: nil) - Whether communications flows for the client can bypass the DI/DC check. The client will enforce some other equivalent permission as necessary concerning access to device contacts and apps.  aaeNotificationSourceSupported (type: boolean(), default: nil) - Whether the client supports the alternative message notification sources on AAE, in which case notification-related operations can access it.  liveCardsSupported (type: boolean(), default: nil) - Whether the surface supports LiveCards. In cases where the user intent flow cannot be completed within the Assistant, LiveCards are used to take the user to an external app or website. These cards will be pushed to the Google Home app via the PushMessage ClientOp.  viewReminderHubPageNotSupported (type: boolean(), default: nil) - Whether the client supports viewing of reminder hub page or not. Default is supported. Set to true to disable returning reminder hub page url in reminder responses.  persistentDisplaySupported (type: boolean(), default: nil) - Whether the client supports persistent display. The new feature allows Assistant devices with screen to display a continuously updating permanent display, such as ambient weather, without the need for a user to ask the Assistant. Design doc: go/assistant-persistent-display.  acpSupport (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAssistantContinuedPresenceSupport.t, default: nil) - In what way is assistant continued presence supported. (go/opa-acp-prd)  bypassMsgNotificationDismissal (type: boolean(), default: nil) - Whether or not Assistant should enforce the dismissal of communication notifications associated with messages.  justInTimeSupported (type: boolean(), default: nil) - Whether the client supports confirmation flow when a permission is missing. If set to true, the user will be prompted and on confirmation the original flow will continue.  isPairedPhoneContactUploadNeededForComms (type: boolean(), default: nil) - Whether paired-phone contact upload is needed for communications queries to work (e.g. on AAE).

An entity profile contains a summary of the information about a single unique entity. Next available index: 46.
*   attribute (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityProfileAttribute.t), default: nil) - List of attributes for the entity.
*   disambiguation (type: String.t, default: nil) - Disambiguation phrase. The combination of entity name and disambiguation phrase should be unique within the corpus.
*   mid (type: String.t, default: nil) - Freebase MID for entity. This field should be the same as FREEBASE_MID identifier for the entity profile.
*   name (type: String.t, default: nil) - Representative name for entity.
*   nameLanguage (type: integer(), default: nil) - Language for the name and disambiguation.

This proto represents the geographic area served by an establishment. WARNING: This proto is not meant to be used directly. Please use the provided libraries. http://google3/geostore/base/public/service_area.h http://google3/java/com/google/geostore/base/ServiceArea.java
*   servedFeature (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The features that make up the service area for this establishment. These features are subject to the following constraints applied by editing middleware (notably, not strictly enforced by lints in storage): 1. The following feature types (and their subtypes) may be used: + TYPE_ISLAND + TYPE_POLITICAL, except the following prohibited subtypes: - TYPE_CONSTITUENCY - TYPE_LAND_PARCEL + TYPE_POSTAL 2. There is a maximum limit (currently 20) to the number of areas which may be provided. This is due to serving efficiency limitations. 3. There are no additional geometry requirements for these features beyond the requirements based on the feature types above. In practice this means that these features will either have polygonal or point-based geometries. 4. These referenced features are generally required to have names, though this is not strictly enforced.

An anchor label can be attached to any element to give it a reference address. LogicalEntity links (see goodoc-semantics.proto) may use anchor labels to point to goodoc elements (they may also use indices to locate the element, but the indices could become invalid if the goodocs are allowed to mutate). Multiple elements may have the same anchor.
*   Anchor (type: String.t, default: nil) - There is a generic method for composing such strings. Please take a look at GoodocUtils::GenerateUniqueAnchorName(...) in ocr/goodoc/goodoc-utils.h.


Each entry corresponds to an image containing an offensive symbol.
*   score (type: number(), default: nil) - Confidence score of the match. The higher, the more likely to match the symbol.

To support the custom weighting across document schemas.
*   weightedSchemaProperties (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1WeightedSchemaProperty.t), default: nil) - List of schema and property name. Allows a maximum of 10 schemas to be specified for relevance boosting.

Information about what the raters saw, how the information was presented to them, or how they interacted with the task. Next id: 6
*   experimentId (type: String.t, default: nil) - The id of the experiment in case we are dealing with a refx data experiment. Should only be set in case of data experiments to gather topicality ratings, in order to allow separating these ratings from regular ratings.

All informations about category types of the entity.
*   allTypes (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefFreebaseType.t), default: nil) - Contains all types relevant for this entity, along with their provenances and confidences. This field basically replicates information above in a unified way, so that Refcon scroing can make better use of it. If present, Refcon scoring will use all_types, and ignore other fields like freebase_type. Note: there is some basic conflict resolution applied when all_types are computed (implemented in type-extractor.cc, IsLikelyConflictingFreebase).
*   salientCategory (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefFatcatCategory.t), default: nil) - verticals4 categories that cooccur with this entity, aggregated over D2E. See where we read from CompactDocClassification in http://google3/repository/webref/preprocessing/fatcat-categories.cc.


Contains information about how an entity was presented as part of a list.
*   index (type: String.t, default: nil) - The index of the entity presented to the user. NOTE: Indexing starts from 0.
*   lexicalGroundingsId (type: String.t, default: nil) - A string which uniquely identifies the list item this entity represents in the list. For example, consider the "OrderPizza" intent with the "size" slot: U: I want to order a pizza A: Sure. What size do you want: large, medium, or small? U: Gigantic The lexical_groundings_id can be "large" to identify the large item in the list. This lexical_groundings_id together with the semantic role fields (i.e., role.intent_id & role.role_id) can be used to match the nlp_semantic_parsing::LexicalGroundings::ValueTermType to utilize lexical grounding for i18n of static list selection items. Note that this field only needs to be populated when developers expect to provide lexical groundings for the list item this entity represents. Effectively, this field will be populated when this entity is published by ListPresentationFrame and the ::quality::dialog_manager::IntentStageSignals::FieldCandidate.lexical_groundings_id field is populated. See go/lpf-i18nv2 & go/taskstate-ae-sync for more details.

The original, unconverted document, typically PDF or Word. Copied from OriginalDoc field of doclogs. Unlike "Content", this does not contain any HTTP headers. The content may be compressed using the same method as "Content". In practice it is only compressed in the Teragoogle index. It is never compressed in docjoins because those are compressed at the sstable level. In doclogs content will only be compressed if the Trawler fetchreply is also compressed--which is currently never and unlikely to change for performance reasons.

Message that stores information about the morphology of a token.

Capabilities related to Lens Perception, i.e. image understanding. See go/loa-lens-device-capabilities. Next ID: 6
*   isLensPostCaptureAvailable (type: boolean(), default: nil) - Indicates whether Lens supports Post-capture experience with an image payload.
*   lensCapabilities (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilities.t, default: nil) - Contains the capabilities that Lens can support.

Non-Gregorian dates are similar to AbsoluteDateTime, but use non-Gregorian calendars.
*   day (type: integer(), default: nil) - The day is the offset within the month, same as in Gregorian calendars.
*   year (type: integer(), default: nil) - The year is relative to the calendar (e.g. 5777 for Hebrew calendar).

Represents a delegated group id, delegated groups refer to groups that are owned by another gaiaId, but this user has access to.

Used to make timers and alarms more delightful. See go/funtime-engdesign for more details.
*   agentIds (type: list(String.t), default: nil) - For FunTime alarms and timers, the media resources are provided through AOG apps during their ringtone. Multiple AoG agents can satisfy a label. So a random agent will be chosen from those that are supplied. See go/funtime-engdesign.
*   animationBlob (type: String.t, default: nil) - These bytes may represent the blob of the Rive animation that we pass to the Opal App. We will deprecate this field if we figure out a solution to load the animation from the web.
*   animationUrl (type: String.t, default: nil) - Url for Rive animation that is brought up on ring. Rive is a lightweight animation library that is compatible with Flutter on Opal. See https://rive.app/.
*   timerHeroUrl (type: String.t, default: nil) - The url used to load the image that is at the center of the timer during timer countdown visuals.
*   ttsServiceRequestBytes (type: String.t, default: nil) - This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular dependency issue in libassistant protos. It is a serialized proto of type speech.s3.TtsServiceRequest.

Custom field that represents POSIX account information. Description of the field family: go/fbs-posix. If account has non-empty Username or Uid we will enforce global uniqueness of (AccountNamespace, CustomerKey, SystemId, Uid) and (AccountNamespace, CustomerKey, SystemId, Username) tuples to ensure there are no duplicates.
*   accountId (type: String.t, default: nil) - The user visible value is used to distinguish identical posix account fields with different customer key values.
*   accountNamespace (type: String.t, default: nil) - Value indicates the uniqueness namespace that applies to the POSIX information. The value is included in all POSIX account uniqueness indices. The indexing prevents two accounts within the same customer from having the same username. Namespacing allows Windows and Linux users to share the same username.
*   accountType (type: String.t, default: nil) - Value indicates whether the POSIX information is associated with a non-human entity and the validation logic to apply during PosixAccount mutation.
*   customerKey (type: String.t, default: nil) - The customer associated with the POSIX identity. If the user is already associated with a G Suite Customer, this field has the same value as http://google3/ccc/hosted/policies/settings/dthree_customer_info.proto
*   fingerprint (type: String.t, default: nil) - The value is automatically set to a SHA-256 fingerprint of the POSIX account. A fingerprint should uniquely identify a POSIX account entry.
*   gecos (type: String.t, default: nil) - The GECOS (user information) entry for this account.
*   homeDirectory (type: String.t, default: nil) - The path to the home directory for this account.
*   operatingSystemType (type: String.t, default: nil) - Value indicates whether to use Linux or Windows specific validation logic during PosixAccount mutation.
*   shell (type: String.t, default: nil) - The path to the login shell for this account.
*   systemId (type: String.t, default: nil) - System identifier for which account Username or Uid apply to. If not specified on mutate by a caller it will default to empty value if either Username or Uid are being set. SystemId does require to have a value (even an empty one) because it is included into null-filtered Spanner index used to enforce uniqueness on Username and Uid fields.
*   username (type: String.t, default: nil) - The username of the account.

Information related to domain administrator (or authority) certification of a users age.
*   bornBefore (type: DateTime.t, default: nil) - Indicates that the user was born at or before this time.

Represents datetime. It can be @sys.date, @sys.time or, in some cases, @sys.date-time. Our platform doesn't track seconds, so this field is omitted. Number of seconds should be considered 0. Hour and minute can be 0 in case of dates. In case of time and dateTime, hours and minutes will represent actual time, even if both of them are 0.
*   date (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t, default: nil) - Date value. Note, that month and day are 1 based. If this DateTime is a PARTIAL datetime, then fields have value -1, which means these fields are inferred rather than derived directly from query.
*   property (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingProtoActionsOnGoogleDateTimeProperty.t, default: nil) - Property of this DateTime value that can be used to match user specification of parameters, e.g. date.recent.
*   time (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t, default: nil) - Time value. Only hours and minutes are used. Hours are in 24h format.
*   timeZone (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeZone.t, default: nil) - Timezone field specified only if this DateTime has type TIME or DATETIME.




A video can have a list of text anchors, which have different anchor types. Next ID: 15
*   entityGroupInfo (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchEntityGroupInfo.t, default: nil) - The list of entity groups derived from the caption entities.
*   experimentalPredictedQuerylessTocUsefulness (type: number(), default: nil) - Same as above, but used for experimenting with new models.
*   filterReason (type: list(String.t), default: nil) - If is_filtered is true, this field illustrates the reasons.
*   isFiltered (type: boolean(), default: nil) - If true, the anchor set is filtered and not served online.
*   mergedAnchorsSources (type: list(String.t), default: nil) - The anchor sources being used to generate this merged anchors. This field is filled only when this is a merged anchor.
*   predictedQuerylessTocUsefulness (type: number(), default: nil) - The score that predicts the usefulness of this anchor set on the Huh table of contents eval without considering the query.
*   score (type: number(), default: nil) - The quality of the anchor set.
*   shouldServeThumbnails (type: boolean(), default: nil) - Whether or not thumbnails should be displayed when serving anchors.
*   thumbnailForced (type: boolean(), default: nil) - This field indicates that the thumbnail should be hidden but is forced to show.
*   thumbnailSetInfo (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchAnchorsThumbnailInfo.t, default: nil) - Information about the set of thumbnails.

The name of the device (Nexus 5, Nexus 10, etc).
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!




Information about where the url comes from.


The inference result features coming from the prediction service that generates the topics.
*   groundTruthTopic (type: String.t, default: nil) - This field is present if we already have a ground truth topic from the training data.
*   modelName (type: String.t, default: nil) - The name of the model where the predictions come from.
*   predictions (type: list(String.t), default: nil) - Inference results from the prediction service. Since we generally use beam search with beam_size > 1, this field is repeated to capture all the generated topic beams.

This proto is trimmed down from RecognizerMetadataResponse in google3/speech/service/s3/services/recognizer/recognizer.proto

Experimental NsrTeam data. This is a proto containing versioned signals which can be used to run live experiments. This proto will not be propagated to MDU shards, but it will be populated at query time by go/web-signal-joins inside the CompressedQualitySignals subproto of PerDocData proto. See go/0DayLEs for the design doc. Note how this is only meant to be used during LEs, it should not be used for launches.

Reference to the citation in Google scholar.
*   safeHtmlCitation (type: GoogleApi.ContentWarehouse.V1.Model.WebutilHtmlTypesSafeHtmlProto.t, default: nil) - The citation after HTML sanitation. Used only by the front-end.

=========================================================================== # Make sure you read the comments in the bottom before you add any new field. NB: As noted in the comments, this protocol buffer is used in both indexing and serving. In mustang serving implementations we only decode perdocdata during the search phase, and so this protocol should only contain data used during search. See mustang/repos_www/attachments.proto:{MustangBasicInfo,MustangContentInfo} for protocols used during search and/or docinfo. Next available tag deprecated, use this (and look for commented out fields): blaze-bin/net/proto_compiler/protocol-compiler --freetags \ indexer/perdocdata/perdocdata.proto Next tag: 223
nsrIsElectionAuthority (type: boolean(), default: nil) - This field is propagated to shards. It will also be populated at serving time by go/web-signal-joins (see b/168114815).  noimageframeoverlayreason (type: integer(), default: nil) - If not 0, we should not show the image in overlay mode in image snippets  webrefEntities (type: GoogleApi. ContentWarehouse.V1.Model.RepositoryWebrefWebrefMustangAttachment.t, default: nil) - WebRef entities associated to the document. See go/webref for details.  semanticDateInfo (type: integer(), default: nil) - Info is encoded using a SemanticDate specific format. Contains confidence scores for day/month/year components as well as various meta data required by the freshness twiddlers.  oceandata (type: GoogleApi.ContentWarehouse.V1.Model.OceanPerDocData.t, default: nil) - 28 bytes per page, only in the Ocean index  ScaledLinkAgeSpamScore (type: integer(), default: nil) - End DEPRECATED ------------------------------------------------------------ Link age score is represented as a 7-bit integer, going from 0 to 127.  numUrls (type: integer(), default: nil) - Total number of urls encoded in the url section = # of alternate urls + 1  ymylHealthScore (type: integer(), default: nil) - Stores scores of ymyl health classifier as defined at go/ymyl-classifier-dd. To use this field, you MUST join g/pq-classifiers-announce and add your use case at http://shortn/_nfg9oAldou.  mediaOrPeopleEntities (type: GoogleApi.ContentWarehouse.V1.Model.ImageQualitySensitiveMediaOrPeopleEntities.t, default: nil) - Contains the mids of the 5 most topical entities annotated with selected KG collections. This information is currently used on Image Search to detect cases where results converged to mostly a single person or media entity. More details: go/result-set-convergence.  rosettaLanguages (type: list(String.t), default: nil) - Top two document language BCP-47 codes as generated by the RosettaLanguageAnnotator in the decreasing order of probability.  toolbarPagerank (type: integer(), default: nil) - A copy of the value stored in /namespace/indexing/wwwglobal//fakepr/* for this document. A value of quality_bakery::FakeprUtils::kUnknownToolbarPagerank indicates that we don't have toolbar pagerank for this document. A value between 0 and 10 (inclusive) means that this is the toolbar pagerank of the page. Finally, if this value is not set it means that the toolbar pagerank is equivalent to: quality_bakery::FakeprUtils::EstimatePreDemotionFromPagerankNearestSeeds( basic_info.pagerank_ns()) called on the MustangBasicInfo attachment for the same document.  eventsDate (type: list(String.t), default: nil) - Date for Events. A web page might list multiple events with different dates. We only take one date (start date) per event.  SpamWordScore (type: integer(), default: nil) - The spamword score is represented in 7-bits, going from 0 to 127.  ymylNewsScore (type: integer(), default: nil) - Stores scores of ymyl news classifier as defined at go/ymyl-classifier-dd. To use this field, you MUST join g/pq-classifiers-announce and add your use case at http://shortn/_nfg9oAldou.  nsrIsCovidLocalAuthority (type: boolean(), default: nil) - This field is propagated to shards. In addition, it is populated at serving time by go/web-signal-joins.  homepagePagerankNs (type: integer(), default: nil) - The page-rank of the homepage of the site. Copied from the cdoc.doc().pagerank_ns() of the homepage.  Event (type: list(GoogleApi.ContentWarehouse.V1.Model.PerDocDebugEvent.t), default: nil) - Free form debug info. NB2: consider carefully what to save here. It's easy to eat lots of gfs space with debug info that nobody needs...  ScaledIndyRank (type: integer(), default: nil) - The independence rank is represented as a 16-bit integer, which is multiplied by (max_indy_rank / 65536) to produce actual independence rank values. max_indy_rank is typically 0.84.  fringeQueryPrior (type: GoogleApi.ContentWarehouse.V1.Model.QualityFringeFringeQueryPriorPerDocData.t, default: nil) - Contains encoded FringeQueryPrior information. Unlikely to be meaningful for anyone other than fringe-ranking team. Contact fringe-ranking team if any questions, but do NOT use directly without consulting them.  freshnessEncodedSignals (type: String.t, default: nil) - Stores freshness and aging related data, such as time-related quality metrics predicted from url-pattern level signals. Use the encoding decoding API in quality/freshness/docclassifier/aging/encoded-pattern-signals.h This field is deprecated.  watchpageLanguageResult (type: GoogleApi.ContentWarehouse.V1.Model.WatchpageLanguageWatchPageLanguageResult.t, default: nil) - Language classified by the WatchPageLanguage Model (go/watchpage-language). Only present for watch pages.  smartphoneData (type: GoogleApi.ContentWarehouse.V1.Model.SmartphonePerDocData.t, default: nil) - Additional metadata for smartphone documents in the Google index.  socialgraphNodeNameFp (type: String.t, default: nil) - For Social Search we store the fingerprint of the SG node name. This is used in one of the superroot's PRE_DOC twiddlers as a lookup key for the full Social Search data. PRE_DOC = twiddlers firing before the DocInfo request is sent to the mustang backend.  DocLevelSpamScore (type: integer(), default: nil) - The document spam score is represented as a 7-bits, going from 0 to 127.  IsAnchorBayesSpam (type: boolean(), default: nil) - Is this document considered spam by the anchor bayes classifier?  pageregions (type: String.t, default: nil) - String that encodes the position ranges for different regions of the document. See "indexer/pageregion.h" for an explanation, and how to decode the string  countryInfo (type: GoogleApi.ContentWarehouse.V1.Model.CountryCountryAttachment.t, default: nil) - This field stores the country information for the document in the form of CountryAttachment.  biasingdata2 (type: GoogleApi.ContentWarehouse.V1.Model.BiasingPerDocData2.t, default: nil) - A replacement for BiasingPerDocData that is more space efficient. Once this is live everywhere, biasingdata will be deprecated.  semanticDate (type: integer(), default: nil) - SemanticDate, estimated date of the content of a document based on the contents of the document (via parsing), anchors and related documents. Date is encoded as a 32-bits UNIX date (1970 Jan 1 epoch). Confidence is encoded using a SemanticDate specific format. For details of encoding, please refer to quality/freshness/docclassifier/semanticdate/public/semantic_date.proto  inNewsstand (type: boolean(), default: nil) - This field indicates whether the document is in the newsstand corpus.  datesInfo (type: String.t, default: nil) - Stores dates-related info (e.g. page is old based on its date annotations). Used in FreshnessTwiddler. Use encode/decode functions from quality/timebased/utils/dates-info-helper-inl.h  fireflySiteSignal (type: GoogleApi.ContentWarehouse.V1.Model.QualityCopiaFireflySiteSignal.t, default: nil) - Contains Site signal information for Firefly ranking change. See http://ariane/313938 for more details.  lastSignificantUpdate (type: String.t, default: nil) - Last significant update of the document. This is sourced from the quality_timebased.LastSignificantUpdate proto as computed by the LSUSelector from various signals. The value is a UNIX timestamp in seconds.  DEPRECATEDAuthorObfuscatedGaia (type: list(String.t), default: nil) - The obfuscated google profile gaia id(s) of the author(s) of the document. This field is deprecated, use the string version.  languages (type: list(integer()), default: nil) - Plausible languages in order of decreasing plausibility. Language values are small, IE < 127 so this should compress to one byte each.  launchAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.QualityRichsnippetsAppsProtosLaunchAppInfoPerDocData.t, default: nil) - Info on how to launch a mobile app to consume this document's content, if applicable (see go/calypso).  spamrank (type: integer(), default: nil) - The spamrank measures the likelihood that this document links to known spammers. Its value is between 0 and 65535.  trendspamScore (type: integer(), default: nil) - For now, the count of matching trendspam queries.  freshboxArticleScores (type: integer(), default: nil) - Stores scores of freshness-related classifiers: freshbox article score, live blog score and host-level article score. The encoding/decoding API is in quality/freshness/freshbox/goldmine/freshbox_annotation_encoder.h. To use this field, you MUST join g/pq-classifiers-announce and add your use case at http://shortn/_RYXS2lX2IV.  onsiteProminence (type: integer(), default: nil) - Onsite prominence measures the importance of the document within its site. It is computed by propagating simulated traffic from the homepage and high craps click pages. It is a 13-bit int.  brainloc (type: GoogleApi.ContentWarehouse.V1.Model.QualityGeoBrainlocBrainlocAttachment.t, default: nil) - Brainloc contains location information for the document. See ariane/273189 for details.  hostNsr (type: integer(), default: nil) - Site rank computed for host-level sitechunks. This value encodes nsr, site_pr and new_nsr. See quality_nsr::util::ConvertNsrDataToHostNsr and go/nsr.  isHotdoc (type: boolean(), default: nil) - Set by the FreshDocs instant doc joiner. See //indexing/instant/hotdocs/README and http://go/freshdocs-hotdocs.  crawlPagerank (type: integer(), default: nil) - This field is used internally by the docjoiner to forward the crawl pageranks from original canonicals to canonicals we actually chose; outside sources should not set it, and it should not be present in actual docjoins or the index.  crawlerIdProto (type: GoogleApi.ContentWarehouse.V1.Model.LogsProtoIndexingCrawlerIdCrawlerIdProto.t, default: nil) - For crawler-ID variations, the crawling context applied to the document. See go/url, and the description in google3/indexing/crawler_id  PremiumData (type: GoogleApi.ContentWarehouse.V1.Model.PremiumPerDocData.t, default: nil) - Additional metadata for Premium document in the Google index.  TagPageScore (type: integer(), default: nil) - Tag-site-ness of a page, repesented in 7-bits range from 0 to 100. Smaller value means worse tag page.  videoLanguage (type: GoogleApi.ContentWarehouse.V1.Model.QualityVidyaVideoLanguageVideoLanguage.t, default: nil) - Audio-based language classified by Automatic Language Identification (only for watch pages).  extraData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - This field is available only in the docjoins: it is cleared before building per-doc data in both Mustang and Teragoogle. (MessageSet is inefficient in space for serving data) Use this for all new fields that aren't needed during serving. Currently this field contains:  UrlSignals for the document level spam classifier (when the doclevelspamscore is set).  PerDocLangidData and realtimespam::ClassifierResult for the document level fresh spam classifier (when the doc-level fresh spam score is generated).  MicroblogDocQualitySignals for document-level microblog spam classifier. This only exists in Firebird for now.  spam_buckets::BucketsData for a document-structure hash  QuarantineInfo (type: integer(), default: nil) - bitmask of QuarantineBits (or'd together) used to store quarantine related information. For example: QUARANTINE_WHITELIST | QUARANTINE_URLINURL.  bodyWordsToTokensRatioBegin (type: number(), default: nil) - The body words over tokens ratios for the beginning part and whole doc. NB: To save space, field body_words_to_tokens_ratio_total is not set if it has the same value as body_words_to_tokens_ratio_begin (e.g., short docs).  scaledSelectionTierRank (type: integer(), default: nil) - Selection tier rank is a language normalized score ranging from 0-32767 over the serving tier (Base, Zeppelins, Landfills) for this document. This is converted back to fractional position within the index tier by scaled_selection_tier_rank/32767.  uacSpamScore (type: integer(), default: nil) - The uac spam score is represented in 7 bits, going from 0 to 127. Threshold is 64. Score >= 64 is considered as uac spam.  titleHardTokenCountWithoutStopwords (type: integer(), default: nil) - Number of hard tokens originally in title without counting the stopwords.  GibberishScore (type: integer(), default: nil) - The gibberish score is represented in 7 bits, going from 0 to 127.  servingTimeClusterIds (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerServingTimeClusterIds.t, default: nil) - A set of cluster ids which are generated in Alexandria and used to de-dup results at serving time.  MobileData (type: GoogleApi.ContentWarehouse.V1.Model.MobilePerDocData.t, default: nil) - Additional metadata for lowend mobile documents in the Google index.  spamMuppetSignals (type: GoogleApi.ContentWarehouse.V1.Model.SpamMuppetjoinsMuppetSignals.t, default: nil) - Contains hacked site signals which will be used in query time joins. As of Oct'19, the field is stored in a separate corpus. It'll only be populated for in-flight requests between retrieve and full-score in perdocdata. So no extra storage is needed on muppet side.  spamCookbookAction (type: GoogleApi.ContentWarehouse.V1.Model.SpamCookbookAction.t, default: nil) - Actions based on Cookbook recipes that match the page.  appsLink (type: GoogleApi.ContentWarehouse.V1.Model.QualityCalypsoAppsLink.t, default: nil) - AppsLink contains Android application IDs in outlinks. It is used to improve results ranking within applications universal. See http://go/apps-universal for the project details.  spamtokensContentScore (type: number(), default: nil) - For SpamTokens content scores. Used in SiteBoostTwiddler to determine whether a page is UGC Spam. See go/spamtokens-dd for details.  ScaledSpamScoreYoram (type: integer(), default: nil) - Spamscores are represented as a 7-bit integer, going from 0 to 127.  ScaledExptIndyRank (type: integer(), default: nil) - DEPRECATED ---------------------------------------------------------------- Please do not use these fields in any new code. experimental  urlAfterRedirectsFp (type: String.t, default: nil) - These two fingerprints are used for de-duping results in a twiddler. They should only be populated by freshdocs, and will only be present for documents that are chosen to be canonicals in a cluster whose previous canonical is also in the index. Additionally, url_after_redirects_fp is only present if it is different from a fingerprint of the URL.  spambrainTotalDocSpamScore (type: number(), default: nil) - The document total spam score identified by spambrain, going from 0 to 1.  s3AudioLanguage (type: GoogleApi.ContentWarehouse.V1.Model.S3AudioLanguageS3AudioLanguage.t, default: nil) - Primary video's audio language classified by S3 based Automatic Language Identification (only for watch pages).  asteroidBeltIntents (type: GoogleApi.ContentWarehouse.V1.Model.QualityOrbitAsteroidBeltDocumentIntentScores.t, default: nil) - For indexing Asteroid Belt intent scores. See go/asteroid-belt for details.  scienceDoctype (type: integer(), default: nil) - Scholar/Science Document type: <0 == not a Science Document -- default 0 == Science doc fully visible >0 == Science doc but limited visibility, the number is the visible terms  voltData (type: GoogleApi.ContentWarehouse.V1.Model.IndexingMobileVoltVoltPerDocData.t, default: nil) - Contains page UX signals for VOLT ranking change. See http://ariane/4025970 for more details.  localizedCluster (type: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedCluster.t, default: nil) - Information on localized clusters, which is the relationship of translated and/or localized pages.  OriginalContentScore (type: integer(), default: nil) - The original content score is represented as a 7-bits, going from 0 to 127. Only pages with little content have this field. The actual original content score ranges from 0 to 512. It is encoded with quality_q2::OriginalContentUtil::EncodeOriginalContentScore(). To decode the value, use quality_q2::OriginalContentUtil::DecodeOriginalContentScore().  nsrIsVideoFocusedSite (type: boolean(), default: nil) - This field is propagated to shards. It will also be populated at serving time by go/web-signal-joins (see b/170607253). Bit indicating whether this site is video-focused, but not hosted on any major known video hosting domains.  hostAge (type: integer(), default: nil) - The earliest firstseen date of all pages in this host/domain. These data are used in twiddler to sandbox fresh spam in serving time. It is 16 bit and the time is day number after 2005-12-31, and all the previous time are set to 0. If this url's host_age == domain_age, then omit domain_age Please use //spam/content/siteage-util.h to convert the day between epoch second. Regarding usage of Sentinel values: We would like to check if a value exists in scoring bundle while using in Ranklab AST. For this having a sentinel value will help us know if the field exists or has a sentinel value (in the case it does not exist). 16-bit  lastSignificantUpdateInfo (type: String.t, default: nil) - Metadata about last significant update. Currently this only encodes the quality_timebased.LastSignificantUpdate.source field which contains the info on the source of the signal. NOTE: Please do not read the value directly. Use helpers from quality/timebased/lastsignificantupdate/lsu-helper.h instead.  BookCitationData (type: GoogleApi.ContentWarehouse.V1.Model.BookCitationPerDocData.t, default: nil) - the book citation data for each web page, the average size is about 10 bytes  commercialScore (type: number(), default: nil) - A measure of commerciality of the document Score > 0 indicates document is commercial (i.e. sells something) Computed by repository/pageclassifiers/parsehandler-commercial.cc  KeywordStuffingScore (type: integer(), default: nil) - The keyword stuffing score is represented in 7 bits, going from 0 to 127.  topPetacatTaxId (type: integer(), default: nil) - Top petacat of the site. Used in SiteboostTwiddler to determine result/query matching.  originalTitleHardTokenCount (type: integer(), default: nil) - The number of hard tokens in the title.  tundraClusterId (type: integer(), default: nil) - This field is propagated to shards. Stores clustering information on a site level for the Tundra project.  saftLanguageInt (type: list(integer()), default: nil) - Top document language as generated by SAFT LangID. For now we store bare minimum: just the top 1 language value, converted to the language enum, and only when different from the first value in 'languages'.  nsrSitechunk (type: String.t, default: nil) - SiteChunk computed for nsr. It some cases it can use more information than just url (e.g. youtube channels). See NsrAnnotator for details. If sitechunk is longer than --populate_nsr_sitechunk_max_length (default=100), it will not get populated. This field might be compressed and needs to be decoded with quality_nsr::util::DecodeNsrSitechunk. See go/nsr-chunks for more details. This field contains only nontrivial primary chunks.  GroupsData (type: GoogleApi.ContentWarehouse.V1.Model.GroupsPerDocData.t, default: nil) - 16 bytes of groups2 data: used only in groups2 index  nsrDataProto (type: GoogleApi.ContentWarehouse.V1.Model.QualityNsrNsrData.t, default: nil) - Stripped site-level signals, not present in the explicit nsr_* fields, nor compressed_quality_signals.  pagerank (type: number(), default: nil) - Experimental pageranks (DEPRECATED; only pagerank in MustangBasicInfo is used).  queriesForWhichOfficial (type: GoogleApi.ContentWarehouse.V1.Model.OfficialPagesQuerySet.t, default: nil) - The set of (query, country, language) triples for which this document is considered to be the official page. For example, www.britneyspears.com would be official for ("britney spears", "us", 0) and others (0 is English).  rsApplication (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsRdfaRdfaRichSnippetsApplication.t, default: nil) - Application information associated to the document.


Data and associated metadata for a scholarly pdf article.
*   citation (type: GoogleApi.ContentWarehouse.V1.Model.ScienceCitation.t, default: nil) - Proto containing all of the Scholar Metadata for this article.
*   figureOrTableImage (type: String.t, default: nil) - contains the image of the figure or table cropped out of the pdf page encoded as a PNG.
*   figureOrTableOcrText (type: String.t, default: nil) - Contains the text (as detected by OCR) contained inside the image of the figure or table.
*   landingPageUrl (type: String.t, default: nil) - The url of the landing page for the scholarly article.
*   pageNumber (type: integer(), default: nil) - The page number where the table and figure is located in the original pdf document.
*   pdfDownloadUrl (type: String.t, default: nil) - The url where the pdf file is located for the scholarly article.

A proto that stores SafeSearch internal signals that are not exported to clients.
*   starburstPornScore (type: number(), default: nil) - Additional SafeSearch signals that are used to compute final scores.

Flags indiciating the specific implicit intent, e.g. dining, travel, etc. Next ID = 13


Event for frame resize. Currently we only record resize events caused by automatic frame expansion.


Metadata about data governance policies. For more context, see go/ke-triple-dg-policy-and-metadata. If any attribute is not set, then there's no specific restrictions associated with the missing attribute. For example, if availability_start_timestamp is not set, the data won't be embargoed automatically; if availability_end_timestamp is not set, they won't expire automatically. LINT. IfChange
*   availabilityEndTimestamp (type: DateTime.t, default: nil) - Timestamp after which data with this policy cannot be used. This value must be strictly larger/later than availability_start_time, if both are set.
*   availabilityStartTimestamp (type: DateTime.t, default: nil) - Timestamp before which data with this policy cannot be used. This value must be strictly smaller/earlier than availability_end_time, if both are set.
*   legalAllowedRegions (type: list(GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t), default: nil) - List of regions in which the data with this policy is allowed to be used, while the data need to be removed in all regions outside this list according to legal request. This field should be used when the data is only allowed in a few regions and it is inconvenient to enumerate all of the regions in legal_removal_regions field. legal_allowed_regions and legal_removal_region together should include all possible regions, setting one field implies the other. Please set only one of them so the other field's values are implied. See details: http://go/ke-allowed-countries-policy-1p WARNING: This field is for legal purposes only. Please do not populate it without consulting ke-data-governance@.
*   legalRemovalRegions (type: list(GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t), default: nil) - List of regions in which the data with this policy need to be removed according to legal request. WARNING: This field is for legal purposes only. Please do not populate it without consulting ke-data-governance@.
*   lmsPolicyMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata.t, default: nil) - Policy metadata fields for LMS data. Only expected to be used by LMS providers -- please consult ke-data-governance@ before populating this field.
*   policyDataScopeKeys (type: list(integer()), default: nil) - This triple is protected by the policies with PolicyDataScope identified by these global unique ids.
*   policySourceType (type: String.t, default: nil) - Policy metadata are VERTICAL by default. Vertical policy makers / providers does not need to set this field explicitly.
*   rwjPolicyMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgRwjPolicyMetadata.t, default: nil) - Policy metadata fields for Real World Journey (RWJ) data. Only expected to be used by RWJ providers -- please consult ke-data-governance@ before populating this field.
*   umpPolicyMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata.t, default: nil) - Policy metadata fields for UMP data. Only expected to be used by UMP providers -- please consult ke-data-governance@ before populating this field.

Contains information about 3 versions of the content of a document: 1. Original: the crawled content (possibly patched in ConversionFilters). 2. Processed: the final version of the content indexed in Web search. 3. Intermediate (no longer generated): intermediate version between the original and the processed content. All 3 versions of the content consist of HTTP headers (in unknown encoding) concatenated with the document body (in interchange valid UTF-8 encoding).

This is a wrapper needed for the WSJ corpus. We want the WSJ RPCs to inject both the experimental_data and the keys, and as of June 2022 these need to be first level members of the proto.
*   lookupKey (type: String.t, default: nil) - The key used to lookup this data in the WSJ corpus. The WSJ data is sitechunk-level, however the documents in the MDU shards are simply urls. WSJ does a mapping from url -> {primary_chunk, secondary, fallbacks, etc.} and retrieves all the keys from the corpus. This lookup key field will keep track of which key was used for this particular lookup.

NOTE: in docjoins, the following anchor sampling information is only ## available in the first record of a document (under the same docid). The total number of redundant anchors dropped per (domain, text) in linkextractor. If we receive a large number of anchors from a particular domain, then we'll throw out all but a sampling of them from that domain. The data is sorted by the (domain,text) pairs. This field is not populated by Alexandria, which uses cdoc.anchor_stats instead.

Verdict against a target. AbuseIAm generates a verdict based on evaluations. AbuseIAm can send such verdicts to clients for enforcement.
*   client (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamClient.t, default: nil) - Target client of the verdict. It can be used to differentiate verdicts from multiple clients when such verdicts are processed in one common place.
*   durationMins (type: integer(), default: nil) - Time duration (in minutes) of the verdict.
*   evaluation (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamEvaluation.t), default: nil) - Evaluations relevant to this verdict. Every Verdict should contain at least one Evaluation.
*   hashes (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamHash.t), default: nil) - Details of all the hashes that can be computed on a message, such as simhash and attachment hash
*   isLegalIssued (type: boolean(), default: nil) - Is this verdict issued by legal?
*   miscScores (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamNameValuePair.t), default: nil) - This field is used to pass relevant / necessary scores to our clients. For eg: ASBE propogates these scores to moonshine.
*   reasonCode (type: String.t, default: nil) - A short description of the reason why the verdict decision is made.
*   region (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamRegion.t), default: nil) - The regions in which this verdict should be enforced. Absence of this field indicates that the verdict is applicable everywhere.
*   restriction (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamVerdictRestriction.t), default: nil) - Restrictions on where this verdict applies. If any restriction is met, the verdict is applied there. If no restrictions are present, the verdict is considered global.
*   strikeCategory (type: String.t, default: nil) - Category of the strike if this is a strike verdict.
*   targetTimestampMicros (type: String.t, default: nil) - The timestamp of the target. E.g., the time when the target was updated.
*   timestampMicros (type: String.t, default: nil) - When the verdict is generated
*   userNotification (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamUserNotification.t), default: nil) - Extra notification(s) to be delivered to target user or message owner about the verdict.

The version of the surface/client. New surfaces are encouraged to only use the “major” field to keep track of version number. The “minor” field may be used for surfaces that rely on both the “major” and “minor” fields to define their version.


Internal-only proto used to express additional information about segments. This is intended for communicating extra information between editing clients and the repository, and should not be used by or visible to clients. WARNING - if you add new fields to InternalSegmentProto, make sure that geostore/tools/internal/mr-mergesegments_test.cc is aware of them.
*   disallowedConnections (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreInternalSegmentProtoLaneConnectionReference.t), default: nil) - A list of lane connections that are explicitly not allowed to be added. NOTE: This should never reference existing lane connections on this segment.
*   disallowedPrimaryConnection (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreInternalSegmentProtoLaneConnectionReference.t), default: nil) - A list of lane connections which cannot have the primary_connection bit set.
*   travelAllowance (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t), default: nil) - The set of restrictions that apply to this segment; these are actually POSITIVE restrictions, i.e. they are known to be allowed.

Following structure summarizes output of AnchorSpamPenalizer. Spammy anchors are tagged with LINK_SPAM_PHRASE_PENALIZER and demoted to SPAM locality in anchor-localizer.cc
*   anchorEnd (type: integer(), default: nil) - End date of the last anchor of the document.
*   anchorFraq (type: number(), default: nil) - Ratio of spam demoted period to all anchor period.
*   anchorStart (type: integer(), default: nil) - Start date of the first anchor of the document.
*   demoted (type: integer(), default: nil) - Following field record details of anchor demotion in action. How many anchors were demoted.
*   demotedAll (type: boolean(), default: nil) - Demoted all anchors in the period or only anchors classified as spam.
*   phraseCount (type: number(), default: nil) - Following fields record signals used in anchor spam classification. How many spam phrases found in the anchors among unique domains.
*   phraseDays (type: number(), default: nil) - Over how many days 80% of these phrases were discovered.
*   phraseFraq (type: number(), default: nil) - Spam phrases fraction of all anchors of the document.
*   sampled (type: boolean(), default: nil) - True if anchors were sampled during observation phrase.
*   sources (type: list(GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorTrustedInfo.t), default: nil) - Detailed information about trusted sources and match computation. Populated only when --anchorspam_penalizer_debug=true.
*   trustedDemoted (type: integer(), default: nil) - Number of trusted anchors used in computation of spam probability.
*   trustedTarget (type: boolean(), default: nil) - Following fields record details about trusted anchors True if is this URL is on trusted source.
*   trustedTotal (type: integer(), default: nil) - Total number of trusted sources for this URL.

AgentInformation represents the details needed to support both 1P and 3P partnerships for Home Automation. Next ID: 7
*   id (type: String.t, default: nil) - Unique Agent ID which maps to a specific Agent. Not using Agent Name here as it may change over time.


Notification channels state for the new server driven channels.
*   disabled (type: boolean(), default: nil) - Weather the notifications on this channel are disabled.

The association between this station and the agency which services this station.
*   agency (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The transit agency which services this station.

The Google account the annotated personal data belongs to.


Represents a list of words given by the customer All these words are synonyms of each other.


Message representing a Dynamite Group (AKA Google Chat space) This is currently only used to indicate the existence of said group and can be later extended to include more group information as needed.

Anchor-level metadata about the instruction anchors. Each instruction passage anchor can contain multiple instruction steps and multiple description anchors and thus the following fields are defined as repeated.
*   bestAsrAndDescriptionAnchorsMatchInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSimilarityMatchInfo.t), default: nil) - The match info about the description anchor matches with the ASR n-grams in the instruction passage. Each element represents the best match between a given description anchor and all qualified n-grams within the passage.
*   bestDescriptionAndInstructionAnchorsMatchInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSimilarityMatchInfo.t), default: nil) - The match info about the description anchor matches with the instruction anchors in a instruction passage. Each element represents the best match between a given description anchor and all the instruction anchors in the passage.
*   instructionAnchorsMatchInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSimilarityMatchInfo.t), default: nil) - The match info about the instruction steps matches with the ASR. Each instruction step corresponds to a step extracted from a web doc. Each instruction passage can contain multiple instruction step matches thus the repeated field.







Configuration for the response. Next Id: 11
*   audioOutConfig (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1AudioOutConfig.t, default: nil) - Specifies the current audio mode on the device.
*   deviceInteraction (type: String.t, default: nil) - The client interaction to be sent to Assistant. This is a assistant.embedded.v1.DeviceInteraction message in serialized binary proto format.
*   deviceState (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1DeviceState.t, default: nil) - Device state to pass to the Assistant server to use in calculating the response.
*   initialAudioBytes (type: integer(), default: nil) - Specifies the initial bytes of TTS audio to send.
*   isNewConversation (type: boolean(), default: nil) - If true, the server will treat the request as a new conversation and not use state from the prior request. Set this field to true when the conversation should be restarted, such as after a device reboot, or after a significant lapse of time since the prior query.
*   outputSampleRateHz (type: integer(), default: nil) - Specifies the desired audio sample rate of the output TTS stream in Hz.
*   screenOutConfig (type: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1ScreenOutConfig.t, default: nil) - Specifies the desired format to use when server returns a visual screen response.

This message represents a price range of an attribute. The meaning of the price bounds is domain specific. But mainly they are soft bounds for a normal usage. E.g. "restaurant prices" are subject to an higher level of "soft" bounds than "museum admission price"
*   currency (type: String.t, default: nil) - Currency code for the price range: a valid currency code from i18n/identifiers/currencycode.h. Lower and upper price are both assumed to use the same currency.
*   lowerPrice (type: float(), default: nil) - This message allows unbounded price ranges. e.g. Lower_price is undefined. At least one of the two prices must be set for the price range to be meaningful.

Each EasyDisjunction represents one OR clause.
*   isPositive (type: boolean(), default: nil) - If is_positive is set to false, then the entire disjunction is negated, and will be true only if none of its members is true.
*   tokenGroups (type: list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamTokenGroup.t), default: nil) - token_groups - the group:token tuples that make up this disjunction. The disjunction will be active if any off the group:token tuples are present in a request.


Message representing a Document (i.e. Google Docs, Sheets, Slides) This is currently only used to indicate the existence of said document and can be later extended to include more document information as needed.

Proto descrbing an attachment to an Assistant Reminder. If the attachment has different behavior on different surfaces (e.g., deeplinks), there will be multiple attachments attach to the Reminder. Each of them will specify the surface type and the corresponding deeplink.
*   id (type: String.t, default: nil) - REQUIRED. An unique identifier for the attachment. We have a plan to index this field, so it's marked as REQUIRED. Chat with opa-reminders-eng@ if you have a use case without an attachment ID.
*   surfaceType (type: list(String.t), default: nil) - REQUIRED. Surface types this attachment should be shown.

Represents properties about a matched DateTime value. Will only be populated for @sys.date-time, @sys.date and @sys.time.
*   datetimeType (type: String.t, default: nil) - Since datetime is a superset of date, time and date&time, this field is used to indicate which type the associated DateTime object belongs to.
*   relativeDatetimeType (type: String.t, default: nil) - The relative relationship between this DateTime value and DateTime&Timezone info provided in ClassifyRequest.

Similar to social.graph.storage. Affinity, but pared down to what the clients of the People API are interested in.
*   containerId (type: String.t, default: nil) - The ID of the container
*   containerType (type: String.t, default: nil) - The type of container to which this affinity applies
*   loggingId (type: String.t, default: nil) - Used to log events for this affinity value, for disco diagnostic-purposes. See go/disco-diagnostics.
*   value (type: float(), default: nil) - Affinity value. Frequently represented as an inverse ranking, sometimes with additional data encoded. If data_formats.affinity_formats.score_format is set to RAW_SCORE then the value will be the score returned by DAS.


An unique identification of a chain. The following are the possible chain id forms: 1) prominent_entity_id only: The entity uniquely represents a chain, which may have multiple sitechunks. 2) sitechunk only: The sitechunk uniquely represents a chain while the chain currently does not have an entity in KG. 3) prominent_entity_id + sitechunk: The chain could be represented by the entity, but not merged at last, and the sitechunks represents the chain better. 4) prominent_entity_id + category: There are multiple subchains for the prominent entity, and category is used to differentiate subchains. NOTE: the size and complexity of the ChainId proto has implications in the serving system and should be thoughtfully kept under control.
*   category (type: String.t, default: nil) - The category associated with this chain, currently only used for subchains.
*   prominentEntityId (type: String.t, default: nil) - The Knowledge Graph (KG) entity of the chain, found and used in chain mining.
*   sitechunk (type: String.t, default: nil) - The website sitechunk/domain that is owned by the chain.

Proto to store vertical indexing information for the document and associated image outlinks. The image content can be indexed to multiple verticals, including imagesearch. It can also be indexed only in verticals, not in imagesearch.
*   name (type: String.t, default: nil) - List the string representation of the vertical that this image is indexed into.


An Attachment represents a linked entity associated with a piece of social content. This may be a 1st-party or 3rd-party entity. In the Papyrus context, an Attachment is part of a Cent, and sits alongside the main content of the cent, which is represented as a sequence of Segments. Right now an Attachment is just a wrapper around an Embed, but we provide the extra layer of abstraction since, as Embeds move to separate storage in Briefcase, we may want to add additional fields that are not part of the Embed proper, but that (for example) relate to the usage of the linked content within the particular post/cent.
*   embedItem (type: GoogleApi.ContentWarehouse.V1.Model.EmbedsEmbedClientItem.t, default: nil) - An embed represents an external entity. See go/es-embeds.
*   id (type: String.t, default: nil) - An id to uniquely identify an attachment when several attachments are in a collection.


As of 03/2018 is not supported for user Profile.
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   type (type: String.t, default: nil) - The type of the SIP address. The type can be free form or or one of these predefined values:  home  work  mobile  other

This proto contains attributes relevant to physical lane markers.
*   barrierMaterials (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreBarrierLogicalMaterialProto.t, default: nil) - If this is a physical barrier marker, represent materials found on the marker.
*   crossingPattern (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreCrossingStripePatternProto.t, default: nil) - Pattern border and color for crossing markers. These include crosswalks, stop, and yield lines.


This message denotes the serving portion size of a food dish.
*   unit (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - Required. The repeated name_info field is for the unit in multiple languages.


For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
*   shardIndex (type: String.t, default: nil) - The 0-based index of this shard.
*   textOffset (type: String.t, default: nil) - The index of the first character in Document.text in the overall document global text.

The restriction issuers here identify "why" the restriction is issued. Most reasons are specific to one type of issuer but some of them are shared among multiple issuers.

A simple 2D box represented by an (x, y) co-ordinate, width and height. Copied from htmlrender_webkit_headless_proto. Document to avoid additional dependency.

The information representing one navboost query for the dataset source_url.
*   impCount (type: number(), default: nil) - imp_count stores an estimate of the number of impressions for this tuple.
*   lccCount (type: number(), default: nil) - lcc_count stores an estimate of the number of long clicks for this tuple. NOTE: It is similar to query_doc_count, but calculated in different manner.
*   queryCount (type: number(), default: nil) - The query_count stores the counts on this query.
*   queryDocCount (type: number(), default: nil) - The query_doc_count stores the number of long-clicks on this pair.

Label aggregates all kinds of optional characteristics of page elements.
*   LanguageLabel (type: list(GoogleApi.ContentWarehouse.V1.Model.GoodocLanguageLabel.t), default: nil) - Languages used in the element (page, block, paragraph or word). Ordered by dominant-language first. Note: content scanjobs processed by the garbage_text_detector before CL 9223538 (Dec. 2008) have LanguageLabels in arbitrary order (within Page and Block elements) -- the confidence value should be inspected to find the dominant language guess for these, rather than just taking the first.
*   SemanticLabel (type: GoogleApi.ContentWarehouse.V1.Model.GoodocSemanticLabel.t, default: nil) - SemanticLabel is defined in goodoc-semantics.proto, it allows rich annotation of content, identifying the nature of page elements.


Copy of ocr/goodoc/layout-common.proto:CurvedBoundingBox, temporary duplicated here to allow for on-device builds.
*   points (type: list(GoogleApi.ContentWarehouse.V1.Model.OcrPhotoCurvePoint.t), default: nil) - The sequence of points that approximate the curve.

Structure to hold the response time for a node. Last used: 3
*   cpuTime (type: float(), default: nil) - An estimate of the CPU time used for this query on the machine associated with task_id, from when the query was received to when the response was ready to send, in seconds. Caveats: 1. Does not account for CPU time spent serializing, deserializing, compressing or decompressing protos within Stubby. 2. Does not account for cleanup time after response has been sent.
*   wallTime (type: float(), default: nil) - Wall time taken on the machine associated with task_id from when the query was received to when the response was ready to send, in seconds. This time excludes the time spent sending the response and the time to perform cleanup operations after the response is sent.

Specification of which search features can be used.


A version of this proto for logging is available at cs/symbol:logged_fatcat. LoggedCompactTaxonomicClassification
*   taxonomy (type: String.t, default: nil) - Either taxonomy will be set, using the enum above, or taxonomy_name will be set (if the taxonomy is not one of the ones in the enum) - never both

Startburst visual tokens or features, more details in go/starburst-mum-user-guide

The periods that this place is open during the week. The periods are in chronological order, starting with today in the place-local timezone. An empty (but not absent) value indicates a place that is never open, e.g. because it is closed temporarily for renovations.
*   openNow (type: boolean(), default: nil) - Is this place open right now? Always present unless we lack time-of-day or timezone data for these opening hours.
*   weekdayTexts (type: list(String.t), default: nil) - Localized strings describing the opening hours of this place, one string for each day of the week. Will be empty if the hours are unknown or could not be converted to localized text. Example: "Sun: 18:00-06:00"

Store ProductInformation for a given version of the models used in VSS.
*   modelType (type: String.t, default: nil) - The type of the model.
*   products (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryShoppingProductInformationProductInformation.t), default: nil) - List of ProductInformation for this version.
*   version (type: integer(), default: nil) - The version of the models used in VSS. Newer version will have a higher version number.

CallCapabilities supported by a surface. See go/call-capabilities. Next ID: 7
*   callFormats (type: list(String.t), default: nil) - The supported call formats on the surface.
*   callMediums (type: list(String.t), default: nil) - The supported call mediums on the surface.
*   callOptions (type: list(String.t), default: nil) - The call options this surface can provide. For example, SPEAKERPHONE is available on Android OPA while iOPA doesn't support it yet.
*   fallbackToTetheredDeviceAppCapabilities (type: boolean(), default: nil) - If true, APP_ID queries initiated by this device should fall back to execution on the tethered device if it's available and if the primary device cannot perform the action (e.g. due to the app not being installed).
*   supportedRecipientTypes (type: list(String.t), default: nil) - Should only be checked if nonempty.


This protocol buffer holds the building-specific attributes for features of type TYPE_COMPOUND_BUILDING.
*   baseHeightMetersAgl (type: number(), default: nil) - The height of the base of this building, in meters above ground-level, if known.
*   defaultDisplayLevel (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The level in this building that should get displayed by default. If present, the default display level must be one of this building's levels that are listed in the level[] field, and if a level is set as a default level of one building, all buildings sharing the level should have that same level as their default level. If not present, clients should not display any level by default for that building.
*   floors (type: integer(), default: nil) - The number of floors above the base of the building, if known. For example a regular 1-story building would set this to "1". Use a value of GeostoreConstants::kDefaultHeightPerFloor when converting "floors" to "height_meters".
*   heightMeters (type: number(), default: nil) - The height of the building above its base, in meters, if known.
*   level (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The levels in this building, in no particular order. These levels refer back to the building via another strong reference (the LevelProto.building field).
*   structure (type: String.t, default: nil) - "Structure" denotes a physical architecture of the building that is readily visible. This attribute is useful in that rarer structures can make good landmarks.

Set of per-document markup restrictions based on go/eucd-indexing-design. Used for EUCD and global preview compliance. Next ID: 17
*   bylineDateSecs (type: String.t, default: nil) - Publish date set by webmaster. See detailed description here: http://shortn/_1eC0zzjR7k. Note that this will currently only be set for canonical documents where byline date could be extracted.
*   crawlTsUsec (type: String.t, default: nil) - The time that the info in this attachment was computed during crawl, in microseconds.
*   extendedNewsPreviewsDomain (type: GoogleApi.ContentWarehouse.V1.Model.QualityDniExtendedNewsPreviews.t, default: nil) - Whether this document comes from a domain that is affected by Extended News Previews (ENP) and its status (approved/rejected).
*   faviconDisplay (type: String.t, default: nil) - Whether the favicon for a given domain should be displayed. FAVICON_DISPLAY_UNSPECIFIED - Display the favicon DISABLE_FAVICON - the favicon should not be rendered by the feature
*   firstseenDateSecs (type: integer(), default: nil) - Firstseen date populated by indexing. It works as fallback to byline_date if it doesn't exist. Note that this will currently only be set for canonical documents where firstseen date could be populated.
*   isAmp (type: boolean(), default: nil) - Only be true when the page itself is an AMP page. For paired AMP, the canonical page will have this bit as false.
*   maxSnippetLength (type: integer(), default: nil) - The max number of snippet characters allowed. Based on document markup. No limit if value is less than 0, Google could use any length of snippets. Default value 0 is the strictest restriction, to avoid violating mistakenly If not set, there is no snippet length policy to enforce. Features must first check has_max_snippet_length to avoid applying an overly strict policy.
*   maxSnippetLengthFromPublisher (type: integer(), default: nil) - Same as the max_snippet_length, max_thumbnail_size, max_video_preview_secs listed above. But values are based on publisher's preferences from Search Console's robots meta tag tool.
*   maxThumbnailSize (type: String.t, default: nil) - The max thumbnail size allowed. Based on document markup Default value NONE is the strictest restriction, to avoid violating mistakenly. If not set, there is no thumbnail policy to enforce.
*   maxVideoPreviewSecs (type: integer(), default: nil) - The max seconds of video preview allowed. Based on document markup. No limit if value is less than 0, Google could show any seconds of video. Default value 0 is the strictest restriction, to avoid violating mistakenly If not set, there is no preview length policy to enforce. Features must first check has_max_video_preview_secs to avoid applying an overly strict policy.


Component-Specific Contract for SemanticTypes, which are atomic string values (and thus can't have a ComponentSpecificContracts message attached to them). go/contract-based-conformance

This protobuf is used (1) To pass data between EmbeddedExporter and the publisher, and (2) As a member of CompositeDoc, to stick embedded content output into the docjoins. Next tag available: 21
*   compressedDocumentTrees (type: String.t, default: nil) - The document's DOM and render tree produced by WebKit as a side effect of rendering the page. It might be compressed or not. Thus, use indexing::embedded_content::UncompressWebkitDocument to decode it.
*   convertedContents (type: String.t, default: nil) - The converted contents, as produced by the same DocumentUpdater transaction that generated the render tree. Useful whenever one of our users wants to experiment with deriving an annotation from the render tree.
*   embeddedLinksInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentEmbeddedLinksInfo.t, default: nil) - Information about all external resources needed to render this page, a.k.a. embedded links. This includes .css files, images embedded in a page, external javascripts, iframes etc.
*   headlessResponse (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderResponse.t, default: nil) - The headless response for rendering the document.
*   isAlternateSnapshot (type: boolean(), default: nil) - Indicate if the snapshot is generated from alternate snapshot. If true, the snapshot will be exported even if the snapshot quality score is low.
*   originalEncoding (type: integer(), default: nil) - The original encoding of the content crawled from trawler. It's the value of enum i18n::encodings::encoding. We put a int32 here instead of encoding proto to maintain the compatibility of "py_api_version = 1"
*   rawRedirectInfo (type: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRawRedirectInfo.t, default: nil) -  DEPRECATED  This field is only populated in fresh_doc which is shutting down.
*   referencedResource (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoReferencedResource.t), default: nil) - Information about all external resources used to render this page, a.k.a. embedded links. This includes .css files, images embedded in a page, external javascripts, iframes etc.
*   renderedSnapshotImage (type: String.t, default: nil) - Snapshot image of a rendered html document (possibly encoded as png, jpeg, or webp).
*   renderedSnapshotMetadata (type: GoogleApi.ContentWarehouse.V1.Model.SnapshotSnapshotMetadata.t, default: nil) - A collection of values which are needed by the users of the Kodachrome bigtable.
*   renderedSnapshotQualityScore (type: float(), default: nil) - The quality of the image, 0.0 is the worst, 1.0 is the best. If all dependencies are successfully crawled, the quality should be 1.0. If one or more of the dependencies are unknown, the quality will be lower.
*   richcontentData (type: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRichContentData.t, default: nil) - The rich content data to recover the original contents from the converted_contents. Useful for offline content analysis.


To keep track of fetch connection endpoints. Note: You can use trawler::SourceIP(info) or trawler::DestinationIP(info) (as well as HasSourceIP/HasDestinationIP) in basictypes.h instead of accessing the packed strings directly. This will return a proper IPAddress. Never use the fixed32 based Source/Destination-IP in new code as they will go away (only IPv4).
*   DestinationIPAddressPacked (type: String.t, default: nil) - Address of the destination host. Extract with trawler::DestinationIP() or decode with PackedStringToIPAddress().
*   SourceIPAddressPacked (type: String.t, default: nil) - Source address of the crawl machine we originated the fetch from. Extract with trawler::SourceIP() or decode with PackedStringToIPAddress().

Contact information for the |contact_location| field in LocationElement.
*   contactType (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsCommunicationPhoneType.t, default: nil) - The type of contact address (home, work, etc).

Options that may be passed to a request function. See request/2 for detailed descriptions.

The value is carried from injected contextual schema. Such schemas can be injected by go/qu-biasing-config for particular clients when their biasing configs are triggered for their traffic Config: (if QRewrite source == CARS_IMMERSIVE then inject LocalCarListings and Cars) Context: (QRewrite source == CARS_IMMERSIVE) U: Red [LocalCarListings(Cars() & RelatedTo(/m/red))] In this case, both LocalCarListings and Cars are spanless injected contextual schemas.

The top-level DATE/TIME representation. It can represent either (1) one or multiple Date/Time ranges, or (2) one or multiple of Date/Time points, or (3) a recurrent date/time expression. Next available ID: 12. Only one of |range|, |point| and |recurrent| will be set: |range| contains a list of resolved Date/Time ranges. |point| contains a list of resolved Date/Time points. |recurrent| contains the representation for periodical dates/times. |range| and |point| are repeated to accommodate the need when the date/time expression under one non-terminal is resolved to a list of correct values. For example, "Mondays in April, 2014" may have 4 correct dates.
*   compositionElement (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - For temporal expressions that consist of components with different types, the elements in the composition are nested according to the order they should be grounded/resolved. For example, "tomorrow at 8am" has a relative component [tomorrow] and an absolute datetime component [8am] so the annotation will be represented in the following way, indicating that the relative datetime for tomorrow should be grounded first, and then resolve the actual 8am point for that given date: point { hour: 8 hour_state: UNAMBIGUOUS properties { time_format: AM_PM_TOKEN } } composition_element { relative { fetched { ordinal: 1 target { unit: DAY } base_type: CURRENT_DATETIME } } grounding_stage: UNGROUNDED } grounding_stage: UNGROUNDED_COMPOSITION The composition_element field will be populated only when the grounding_stage is set to UNGROUNDED_COMPOSITION and it will hold the nested DateTime value for the rest the compositional expression. More details in: go/datetime-resolution-decoupling.
*   deleted7 (type: boolean(), default: nil) - Deprecated fields. Do NOT use.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field of the DateTime message should not in general be used by outside clients of the grammar. It is intended to be used internally in Aqua for evaluation purposes. The rationale is that token counts depend on the particular tokenization used in Aqua which may be different from the one used by the client and may change from time to time. Outside clients should not create a dependency on the current tokenization used in Aqua.
*   range (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeRange.t), default: nil) - Note that there is a difference between this scenario and an ambiguous date/time expression. The latter is resolved to multiple proto messages, not multiple values within one proto message. To be concrete, consider "Monday" in "Monday football". It is ambiguous and can be reasonably resolved to "Monday last week," "Monday this week" and "Monday next week." The 3 values are represented as 3 separate DateTime messages, not 3 values within one DateTime message.





Specification of which assistant features are allowed for a particular device or user account.


Extension data for use in AboutMe.


A span in a user query that could not be identified as any other type of Phrase.


DO NOT USE THIS FOR ANYTHING LIVE WITHOUT PERMISSION! If you want to use this for anything user-facing file a logs-access ticket describing what you want to do. This data is currently only available in the freshdocs pipeline, so it will only be present in instant mustang and certain librarian shards. Email freshdocs-indexing with questions.
*   VisitorsPastDay (type: integer(), default: nil) - Indicates how many distinct toolbar visitors this page had in the past day. Will only be present if the number is reasonably large.

A container for speed limits that allows tagging with a correctness trust level.
*   trustLevel (type: String.t, default: nil) - The level of trust we have in this speed limit value.

A replacement for BiasingPerDocData that is more efficient wrt size in the index.


A fact about potentially sensitive personal info (http://what/SPII) can be "certified" iff it meets specific requirements. See go/kg-spii-certification for details.
*   authorityFeedback (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgAuthorityFeedbackMetadata.t, default: nil) - This fact was provided via KGO / Entity Authority.
*   legalRequest (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLegalRequestMetadata.t, default: nil) - This fact was provided via a legal request.
*   publicInformation (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPublicInformationMetadata.t, default: nil) - This fact is public information. (See go/kg-spii-certification for a description of what qualifies as public information -- simply finding a fact online is not sufficient to certify a fact as public.)

Salient Countries is an estimated probability (salience) of a doc to be relevant to a country. On this message, countries are represented as int32 (the format of this data is defined in i18n/identifiers/stableinternalregionconverter.cc). Salience is a value in range [0.0 - 1.0] in which 1.0 represents a high likelihood to be relevant to the country





Container proto for repeated pronunciation objects. For example, a set of pronunciations that can be added to a single name field.




Data used to compute delta_subchunk_adjustment. (I.e, the subchunks looked up, with their confidences and weights). This data is not propagated to ascorer.
*   confidence (type: number(), default: nil) - Confidence associated with the chunk.
*   pageWeight (type: number(), default: nil) - Weight with which this document belong to this subchunk (greater than 0).
*   type (type: String.t, default: nil) - Type of this chunk. Eg, ymyl_health, d2v, etc.


LINT. IfChange Task metadata information describing the ringtone. IMPORTANT: The definition of RingtoneTaskMetadata proto is being moved to //assistant/api/core_types/ringtone_task_metadata.proto. All existing references will be updated to point to the new location. If you are adding a reference, use the new one instead. Next id: 11
*   category (type: String.t, default: nil) - The category related with the ringtone. It's used to generate ringtone related with the category if the entity_mid is not be populated. E.g. for instrument, the ringtone may be piano sound.
*   entityMid (type: String.t, default: nil) - The freebase mid of the entity related to the ringtone. It will be used to generate the ringtone for the alarm or timer (with support for i18n). For instance, for the "cat" mid, the related ringtone will be a cat sound in some language, and for the "Beyonce" mid, the ringtone will be, e.g., a playlist of Beyonce's best hits.
*   onDeviceAlarmSound (type: String.t, default: nil) - Will be deprecated. Use OnDeviceAlarmMetadata.

Token by token mapping between hypothesis text and reference text.
*   hypothesisIndex (type: integer(), default: nil) - Index of the token in hypothesis text.
*   referenceIndex (type: integer(), default: nil) - Index of the word in reference.





The NsrChunksProto corresponds to the NSRChunks class. The data saved by the proto and the class is the same. We provide utilities to go from one to the other.
*   primaryChunk (type: String.t, default: nil) - Primary NSR sitechunk. In most of the cases it's same as HOST_LEVEL_V3 sitechunked canonical url of the document. In rare, but important cases it's based on page markup (see quality/nsr/util/sitechunker.h for details).
*   secondaryChunks (type: list(String.t), default: nil) - Secondary NSR sitechunk. When present, it provides more granular chunking than primary sitechunks (see quality/nsr/util/sitechunker.h for details). Note that the NSRChunks class does not store trivial secondary chunks. Be aware of this when constructing NsrChunksProto from scratch.

This is the log version of apps.people.oz.external.mergedpeopleapi. PersonMetadata Next ID: 2




Used for stanza KV pair. Next tag: 7.

A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
*   detectedLanguages (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentPageDetectedLanguage.t), default: nil) - A list of detected languages together with confidence.
*   provenance (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentProvenance.t, default: nil) - The history of this annotation.

Stores information for a single image-only orbit intent. See go/orbit-for-images-v2 for more details.
*   trigger (type: boolean(), default: nil) - Whether the intent triggered with the default threshold or not.

attributes of the source document for the link
*   additionalInfo (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - Additional information related to the source, such as news hub info.
*   docid (type: String.t, default: nil) - The docid field used to be "required", but it is now "optional" because it is not present when anchors are stored in webtable. When anchors are stored as part of docjoin files in the segment indexer, however, docid should be considered required.
*   doclength (type: integer(), default: nil) - necessary for anything?
*   homePageInfo (type: integer(), default: nil) - Information about if the source page is a home page. It can be one of the enum values defined in PerDocData::HomePageInfo (NOT_HOMEPAGE, NOT_TRUSTED, PARTIALLY_TRUSTED, and FULLY_TRUSTED).
*   localCountryCodes (type: list(integer()), default: nil) - Countries to which the source page is local/most relevant; stored as III identifiers for country/region codes (see http://go/iii).
*   nsr (type: integer(), default: nil) - This NSR value has range [0,1000] and is the original value [0.0,1.0] multiplied by 1000 rounded to an integer.
*   pageTags (type: list(integer()), default: nil) - Page tags are described by enum PageTag in PerDocData. Page tags are used in anchors to identify properties of the linking page. These are DEPRECATED: in the future, use link_tags instead. DEPRECATED
*   spamscore1 (type: integer(), default: nil) - deprecated, to be removed after October 20. 0-127 scale

Message containing calls to action specified by the business owner.




Specification of which news features can be used.




The best suggested name to use for the Person from the available source fields, which may include FileAs, Name, Org, Email, IM, Phone, ... Rough source container priority order is Contact, then Profile, then Place.
*   containerType (type: String.t, default: nil) - The container the suggested name was sourced from
*   displayName (type: String.t, default: nil) - The display name. This name is intended to be the best name to display for this Person. It may be built from a variety of fields, even if those fields are not explicitly requested in the request mask. Generally, the display name is formatted in 'first last' format. If the name appears to be a CJK name (as determined by a heuristic), the 'last first' format will be used. There may be other cases that the 'last first' format is used which are not documented here. See the code at: http://google3/java/com/google/focus/backend/client/DisplayNameFormatter.java?l=659&rcl=351360938
*   displayNameLastFirst (type: String.t, default: nil) - The display name, always in 'last first' format. This field does not depend on the format of display_name and will always be in 'last first' format.

Providers of PriceInfo (e.g. SinglePlatform, YEXT) send verified and unverified listings. PriceInfoStatus is used to encapsulate this information.

Used by the Smarthome Business Rules twiddler to determine whether to replace the top-scoring Smarthome intent with another.
*   deviceRdMetadata (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantPfrDeviceRdMetadata.t), default: nil) - Each DeviceRdMetadata represents one device RD (device slot) in the intent. Note that each device RD could have multiple device groundings inside of it.
*   isExactMatch (type: boolean(), default: nil) - When num_constraints == num_constraints_satisfied, indicating all slot matchings are exact match.
*   isGrounded (type: boolean(), default: nil) - When num_grounded_args > 0, indicating there is at least one top-level argument is grounded.

Main proto for all internal fields to be stored at the feature level.
*   polygonShapeId (type: String.t, default: nil) - A unique identifier for this feature's polygon data which is being held externally in Shapestore (see go/shapestore).
*   restOfWorldPolygonShapeId (type: String.t, default: nil) - A unique identifier for this feature's rest-of-world view polygon data which is being held externally in Shapestore (see go/shapestore). This is part of the feature's geopolitical geometry.
*   rightsStatus (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreRightsStatusProto.t, default: nil) - Per-field rights for this feature. See http://g3doc/geostore/g3doc/developers-guide/inputs/rights-tracking for more information.
*   selfPolygonShapeId (type: String.t, default: nil) - A unique identifier for this feature's self view polygon data which is being held externally in Shapestore (see go/shapestore). This is part of the feature's geopolitical geometry.
*   trust (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTrustSignalsProto.t, default: nil) - Trust signals/annotations for the feature. In an input feature, these signals are computed at the beginning of the pipeline and are immutable during the processing. In output features, this proto may define the rules/criteria that a newer edit should meet, in order to be applied.
*   waterRemovedPolygonShapeId (type: String.t, default: nil) - A unique identifier for this feature's water-removed polygon data which is being held externally in Shapestore (see go/shapestore).

A globally unique identifier associated with each feature. We use 128-bit identifiers so that we have lots of bits available to distinguish between features. The feature id currently consists of a 64-bit "cell id" that sometimes corresponds to the approximate centroid of the feature, plus a 64-bit fingerprint of other identifying information. See more on each respective field in its comments. Feature ids are first assigned when the data is created in MapFacts. After initial creation of the feature, they are immutable. This means that the only properties that you should rely on are that they are unique, and that cell_ids often - but not always - preserve spatial locality. The degree of locality varies as the feature undergoes geometry changes, and should not in general be considered a firm guarantee of the location of any particular feature. In fact, some locationless features have randomized cell IDs! Consumers of FeatureProtos from Mapfacts are guaranteed that fprints in the id field of features will be globally unique. Using the fprint allows consumers who don't need the spatial benefit of cell ids to uniquely identify features in a 64-bit address space. This property is not guaranteed for other sources of FeatureProtos.
*   cellId (type: String.t, default: nil) - The S2CellId corresponding to the approximate location of this feature as of when it was first created. This can be of variable accuracy, ranging from the exact centroid of the feature at creation, a very large S2 Cell, or even being completely randomized for locationless features. Cell ids have the nice property that they follow a space-filling curve over the surface of the earth. (See s2cellid.h for details.) WARNING: Clients should only use cell IDs to perform spatial locality optimizations. There is no strict guarantee that the cell ID of a feature is related to the current geometry of the feature in any way.
*   fprint (type: String.t, default: nil) - A 64-bit fingerprint used to identify features. Most clients should rely on MapFacts or OneRing to choose fingerprints. If creating new fprints, the strategy should be chosen so that the chance of collision is remote or non-existent, and the distribution should be reasonably uniform. For example, if the source data assigns unique ids to features, then a fingerprint of the provider name, version, and source id is sufficient.
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a feature ID. Never set in MapFacts.




Whether a HOLD decision is enforced based on the decision name and QPS requirement. For LiveChat, there could be multiple Automod moderations generated at chat message creation time. Only HOLD decisions are persisted. At most one HOLD decision can be enforced based on write QPS.
*   enforced (type: boolean(), default: nil) - Whether or not the decision is enforced.
*   name (type: String.t, default: nil) - Current the enforcement rule depends on live chat write QPS at chat message creation time. Enforce MEDIAN when QPS<=4. Enforce HIGH_RECALL when QPS>4 AND QPS<=10. Enforce ULTRA_HIGH_RECALL when QPS>10.

This message is used for text changes aka. OCR corrections.
*   changedText (type: String.t, default: nil) - The text that replaces the text identified in the text_anchor.
*   provenance (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentProvenance.t), default: nil) - The history of this annotation.
*   textAnchor (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentTextAnchor.t, default: nil) - Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single TextAnchor.text_segments element. If the start and end index of the text segment are the same, the text change is inserted before that index.


Extra ranking info returned with affinity data. This info is returned by DAS and passed to PAPI clients (Yenta), where it is used for ranking and filtering device and server suggestions together.
*   cloudDeviceDataInfo (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphWireProtoPeopleapiAffinityMetadataCloudDeviceDataInfo.t, default: nil) - Device information about the candidate available in the cloud.
*   suggestionConfidence (type: String.t, default: nil) - Indicator of the confidence in suggestion relevance.


A subset of LaunchableApplication, which is stored in the PerDocData proto (indexer/perdocdata/perdocdata.proto) and thus stored in the Search Mustang index. It is used to identify documents containing app links at serving time by SuperRoot. A subset of LaunchableApplication is used to save on storage requirements.
*   packageIdFingerprint (type: String.t, default: nil) - Android package id of the application associated with this document (example: 'com.imdb.mobile'), encoded with the Fingerprint2011() function.
*   perAppInfoEncoded (type: String.t, default: nil) - A subset of the data in the PerAppInfo message, encoded to save on space. See quality/calypso/utils/app_info_utils.h for encoding/decoding.







The PhoneNumber object that is used by all LibPhoneNumber API's to fully represent a phone number.
*   countryCode (type: integer(), default: nil) - The country calling code for this number, as defined by the International Telecommunication Union (ITU). For example, this would be 1 for NANPA countries, and 33 for France.
*   countryCodeSource (type: String.t, default: nil) - The source from which the country_code is derived.
*   extension (type: String.t, default: nil) - Extension is not standardized in ITU recommendations, except for being defined as a series of numbers with a maximum length of 40 digits. It is defined as a string here to accommodate for the possible use of a leading zero in the extension (organizations have complete freedom to do so, as there is no standard defined). Other than digits, some other dialling characters such as "," (indicating a wait) may be stored here.
*   italianLeadingZero (type: boolean(), default: nil) - In some countries, the national (significant) number starts with one or more "0"s without this being a national prefix or trunk code of some kind. For example, the leading zero in the national (significant) number of an Italian phone number indicates the number is a fixed-line number. There have been plans to migrate fixed-line numbers to start with the digit two since December 2000, but it has not happened yet. See http://en.wikipedia.org/wiki/%2B39 for more details. These fields can be safely ignored (there is no need to set them) for most countries. Some limited number of countries behave like Italy - for these cases, if the leading zero(s) of a number would be retained even when dialling internationally, set this flag to true, and also set the number of leading zeros. Clients who use the parsing or conversion functionality of the i18n phone number libraries (go/phonenumbers) will have these fields set if necessary automatically.
*   nationalNumber (type: String.t, default: nil) - The National (significant) Number, as defined in International Telecommunication Union (ITU) Recommendation E.164, without any leading zero. The leading-zero is stored separately if required, since this is an uint64 and hence cannot store such information. Do not use this field directly: if you want the national significant number, call the getNationalSignificantNumber method of PhoneNumberUtil. For countries which have the concept of an "area code" or "national destination code", this is included in the National (significant) Number. Although the ITU says the maximum length should be 15, we have found longer numbers in some countries e.g. Germany. Note that the National (significant) Number does not contain the National (trunk) prefix. Obviously, as a uint64, it will never contain any formatting (hyphens, spaces, parentheses), nor any alphanumeric spellings.
*   numberOfLeadingZeros (type: integer(), default: nil) - Full description of this field in the comment for italian_leading_zero since this field will only be set when italian_leading_zero is true.
*   preferredDomesticCarrierCode (type: String.t, default: nil) - The carrier selection code that is preferred when calling this phone number domestically. This also includes codes that need to be dialed in some countries when calling from landlines to mobiles or vice versa. For example, in Columbia, a "3" needs to be dialed before the phone number itself when calling from a mobile phone to a domestic landline phone and vice versa. Note this is the "preferred" code, which means other codes may work as well.
*   rawInput (type: String.t, default: nil) - This field is used to store the raw input string containing phone numbers before it was canonicalized by the library. For example, it could be used to store alphanumerical numbers such as "1-800-GOOG-411".

The information about the original client who starts the request.

A document phrase marks a range of tokens in a document as a phrase. The indices are token positions in the document.
*   head (type: integer(), default: nil) - The head token in the phrase is the id of the top-most token within the phrase. It either has an arc from outside the phrase going to it, or it is a root token of the sentence. A value of -1 indicates that the head has not yet been computed for the phrase (not the same semantics as the head of a token!). Note that even when it is uniquely defined, there is no guarantee that the head is set for entities and measurements within a document: you may need to explicitly compute it.
*   start (type: integer(), default: nil) - First and last token in the phrase. The phrase goes from start to end (inclusive).




Oneof doesn't allow list, this message is used to inject list as a possible value into Slot.


ImageTemplate contains local and/or global features generated from one image. User-defined members can be set to any value within the constraints outlined below. Algorithms usually pass these through without evaluation, unless documented otherwise. Next id: 29
*   authorName (type: String.t, default: nil) - Name of the author or image source. User-defined. Must be NULL-terminated.
*   corpus (type: String.t, default: nil) - Identifier for which corpus the image belongs to. Currently Cyclone uses this field in: - photos_vision_objectrec.SpatialMatcherRequest.residual_template to select which spatial matcher should be applied to the candidate matches - photos_vision_objectrec.CustomCorpusQuantizer to map a custom corpus to one or more posting lists
*   geoLocation (type: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGeoLocation.t, default: nil) - The geolocation of the image. Assumed to represent the location where the photo was taken from.
*   imageId (type: String.t, default: nil) - Unique identifier for the image used to compute this template.
*   imageUrl (type: String.t, default: nil) - URL or filename of the image used to compute this template. User-defined. Must contain only ASCII characters and be NULL-terminated.
*   imageWidth (type: integer(), default: nil) - Dimension of the image used to compute this template.
*   objectInfo (type: list(String.t), default: nil) - Tags pertaining to this image. User-defined. Must be NULL-terminated.
*   objectName (type: String.t, default: nil) - Name of the object/scene depicted. User-defined. Must contain only ASCII characters and be NULL-terminated.
*   opaqueData (type: String.t, default: nil) - Opaque template data. May be used to pass through additional data from template sources to processing modules, that is not already covered by other members of this PB. It is the responsibility of processing modules to verify that the data is in a compatible format.
*   roi (type: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecROI.t, default: nil) - Region-of-interest: The bounding box of the object or scene depicted in the image.







Proto used to represent rights for a feature property id. See go/geo-rights for more details. NOTE: Use google3/geostore/provenance/public/rights.h or google3/java/com/google/geostore/provenance/rights/Rights.java instead of accessing this proto directly.
*   featurePropertyId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto.t, default: nil) - The feature property id for which this entry tracks rights.
*   fieldType (type: integer(), default: nil) - DEPRECATED The field type for which this entry tracks rights. There may be multiple entries for the same field type - prefer feature_property_id to uniquely identify a particular entry.
*   minRightsLevel (type: String.t, default: nil) - The minimum rights level among all current values for this feature property id.

Merged-person combines multiple sources of data like contacts and profiles. See go/people-api and go/understanding-merged-person NOTE: Why are all the fields repeated? See go/people-api-concepts#repeated
circleMembership (type: list(GoogleApi. ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiCircleMembership.t), default: nil) - Circles that this person is a member of.  contactStateInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiContactStateInfo.t), default: nil) - Contact state and related metadata. See go/fbs-contacts-trash. If this field was requested but is not set on the Person then the contact is in the DEFAULT contact state. This field is read-only, and should not be set on a mutate (e.g. UpdatePerson) call. Clients must call the explicit APIs (e.g. UntrashPerson) to change contact state.  rosterDetails (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRosterDetails.t), default: nil) - Data specific to rosters (such as Google Groups and Chat Rooms). Data which also applies to contacts and profiles such as name, email, and photo, etc are returned in the corresponding Person fields.  plusPageInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlusPageInfo.t), default: nil) - DEPRECATED. Info about plus pages in the person.  pronoun (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPronoun.t), default: nil) - Pronouns are not supported for consumer profiles. See go/pronouns-in-people-system-prd for more details.  linkedPerson (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPerson.t), default: nil) - Other person resources linked indirectly by an edge. The full person or just the IDs may be populated depending on request parameters. We consider linked people distinct people, but they share information. Example: A contact with two outgoing edges. The two edges are considered separate, but linked people.  contactCreateContextInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiContactCreateContextInfo.t), default: nil) - ContactCreateContextInfo has a timestamp timestamp and additional metadata (e.g. the source of the creation) for when the contact was created. See also ContactEditContextInfo.  connectionReminder (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiConnectionReminder.t), default: nil) - Reminder to connect with a Contact (part of go/people-prompts). Also contains contact-level prompts settings. Each Contact can have a single connection_reminder (but can have multiple Prompts inside of it). Field is repeated per PeopleAPI data model go/people-api-concepts#repeated. Only supported for CONTACT container.  peopleInCommon (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPerson.t), default: nil) - DEPRECATED. This feature was stubbed, but never implemented. This field will not be populated with any results.  coverPhoto (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiCoverPhoto.t), default: nil) - DEPRECATED. Now always returns a default cover photo. See go/sunset-cover-photo.  inAppNotificationTarget (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiInAppNotificationTarget.t), default: nil) - Ways to send in-app notifications to this person. See go/reachability. This field is read-only and ignored for mutates.  name (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiName.t), default: nil) - See go/people-api-howto:names for details about names in PeopleAPI.  profileUrl (type: String.t, default: nil) - DEPRECATED. No data is returned for this field anymore. (go/people-api-concepts#repeated): Use person.profile_url_repeated instead. Access to this field is restricted to a set of legacy clients. This is a Google+-only field. See go/fbs-g+-deprecation. NOTE: Person.profile_url is only populated for profile-centric person.  fingerprint (type: String.t, default: nil) - A fingerprint that can be used to reliably determine if a resource has changed. Externally it is used as part of the etag.  event (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEvent.t), default: nil) - Event is currently in use by contacts.  legacyFields (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiLegacyFields.t, default: nil) - DEPRECATED. This field was only for backwards compatibility with legacy GData callers, and should not be used by new clients. Legacy fields used for mobile clients.  personId (type: String.t, default: nil) - The ID of the person. This is determined by the backend, is unstable, and may not be the same as a user_id. Internally referred as 'personKey' to distinguish from the common PersonId pojo. See go/people-api-concepts#person-id  inAppReachability (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiInAppReachability.t), default: nil) - Used only by profile service, deprecated for PeopleAPI and Sharpen. If you aren't sure, contact people-api-users@ and profile-service-eng@.  placeDetails (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlaceDetails.t), default: nil) - Data specific to places. Data which also applies to contacts and profiles such as name, phone, photo, etc. are returned in the corresponding Person fields.  extendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonExtendedData.t, default: nil) - Data added by extensions that are not specific to a particular field.  profileUrlRepeated (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProfileUrl.t), default: nil) - DEPRECATED. No data is returned for this field anymore. This is a Google+-only field. See go/fbs-g+-deprecation.  calendar (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiCalendar.t), default: nil) - b/145671020: Deprecated for Profiles, but not for Contacts.  socialConnection (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiSocialConnection.t), default: nil) - NOTE: this is used by go/starlight, but not actually used or returned in PeopleAPI. See b/27281119 for context. Please reach out to people-api-eng@ if you have questions.  relation (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRelation.t), default: nil) - See go/relation-vs-relationship for relation vs relationship explanation.  braggingRights (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiBraggingRights.t), default: nil) - Used only by contacts, no data will be returned for profiles.  teamsExtendedData (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiTeamsExtendedData.t, default: nil) - DEPRECATED. UNSUPPORTED. This field is never populated.  relationshipInterest (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRelationshipInterest.t), default: nil) - DEPRECATED. No data is returned for this field anymore.  contactGroupMembership (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiContactGroupMembership.t), default: nil) - Contact groups that this person is a member of.  relationshipStatus (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiRelationshipStatus.t), default: nil) - DEPRECATED. No data is returned for this field anymore.  userDefined (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiUserDefined.t), default: nil) - UserDefined is currently in use by contacts.  limitedProfileSettings (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiLimitedProfileSettingsField.t), default: nil) - Settings for the limited profile. See go/limited-profiles-api.  contactEditContextInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiContactEditContextInfo.t), default: nil) - ContactEditContextInfo is a timestamp and additional metadata (e.g. the source of the edit) for the last 'human initiated edit'. See also ContactCreateContextInfo.  readOnlyProfileInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiReadOnlyProfileInfo.t), default: nil) - Information about the profiles that are a part of this Person. This is only applicable to PROFILE and DOMAIN_PROFILE containers.  tagline (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiTagline.t), default: nil) - Only supported for PLACE container results, no data will be returned for profiles.  ageRangeRepeated (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAgeRangeType.t), default: nil) - Data on the person's age range, adult status, and age of consent. NOTE: Please read go/people-api-howto:age on how to correctly get age data.  sipAddress (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiSipAddress.t), default: nil) - SipAddress is currently in use by contacts.  ageRange (type: String.t, default: nil) - Deprecated. If age is needed use person.age_range_repeated instead. Please see go/people-api-howto:age on how to correctly get age data.  personAttribute (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonAttribute.t), default: nil) - In order to request this field, the client must set desired PersonAttributeKey in the dedicated RequestMask field person_attribute. Unlike other person fields, this field cannot be requested in the include_field field mask.  visibleToGuests (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiVisibleToGuests.t), default: nil) - Add annotation_id and metadata (product_source) for visible to guests contacts go/visible-to-guests.  namePronunciationAudioMetadataInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiNamePronunciationAudioMetadataInfo.t), default: nil) - Metadata info for a user's name pronunciation audio. See go/name-pronunication-backend.  membership (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiMembership.t), default: nil) - DEPRECATED. Please use circle_membership or contact_group_membership instead. Contact-groups and circles that this person is a member of.




Star ratings constraints, mostly relevant for hotels. There is an implicit OR relation between these. E.g., for "three star or four star hotel" both three and four would be set to true. Next Available ID: 13.
*   orMore (type: boolean(), default: nil) - If this field is set, exactly one of the star classes above should be set, and the interpretation should be that at least that many stars should be present.

A time zone. Conceptually, a time zone is a set of rules associated with a location that describes a UTC offset and how it changes over time (e.g. Daylight Saving Time). The offset is used to compute the local date and time.

The identification information for third party devices that integrates with the assistant. All of these fields will be populated by the third party when the query is sent from the third party device. Next Id: 5
*   deviceId (type: String.t, default: nil) - Unique identifier for the device. Example: DBCDW098234. Required

The status indicating that no other status applies.

A media provider and the deeplinks provided by the provider. MediaProviderInfo is an abstraction for topics of multiple media related KG types under /base/mediaasset domain and /media_common. It's often eligible for topics of media related KG types like /broadcast/radio_station, /film/film, /music/artist, /music/album, /music/recording_cluster, /music/recording, /tv/tv_program, etc. See go/media-pq for design details. Next ID: 6
*   deeplinkInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaDeeplinkInfo.t), default: nil) - Deeplinks provided by the provider. If empty it indicates that the media is unavailable with the provider, e.g. due to country restrictions or limited catalog.
*   kgProviderKey (type: String.t, default: nil) - The unique and reverse unique provider enumerator in KG (e.g., "ORANGE_SPAIN" for /g/11h6nkfyrm). It is more stable than the KG mid. See go/kema-api#keys. Some mids cannot have the enumerator property due to historical reason (e.g., multiple media providers were created for iTunes and only ""/g/11fhyxjwt5" has provider enumerator as "ITUNES_NEW" in KG). These entities need to have hard-coded key (e.g., "/m/019g58" has key "ITUNES") kept outside of KG.
*   mediaId (type: String.t, default: nil) - Media ID of a MediaItem in a MediaBrowseTree (MBT). This field is used to play a specific media item from MBT using playFromMediaId API.
*   providerMid (type: String.t, default: nil) - The machine ID (MID) of the media provider.
*   providerName (type: String.t, default: nil) - The name of the media provider.





An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation. JSON example: { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation.
*   bindings (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleIamV1Binding.t), default: nil) - Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal. The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.
*   etag (type: String.t, default: nil) - etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.
*   version (type: integer(), default: nil) - Specifies the format of the policy. Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations:  Getting a policy that includes a conditional role binding  Adding a conditional role binding to a policy  Changing a conditional role binding in a policy  Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation.


Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.
*   content (type: String.t, default: nil) - Optional. Inline document content, represented as a stream of bytes. Note: As with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.
*   entities (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentEntity.t), default: nil) - A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.
*   error (type: GoogleApi.ContentWarehouse.V1.Model.GoogleRpcStatus.t, default: nil) - Any error that occurred while processing this document.
*   shardInfo (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentShardInfo.t, default: nil) - Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.
*   text (type: String.t, default: nil) - Optional. UTF-8 encoded text in reading order from the document.
*   textChanges (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentTextChange.t), default: nil) - Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.
*   uri (type: String.t, default: nil) - Optional. Currently supports Google Cloud Storage URI of the form gs://bucket_name/object_name. Object versioning is not supported. For more information, refer to Google Cloud Storage Request URIs.

The change of AndroidAppInfo, e.g. app installation or deletion for incremental delta app info upload.
*   androidAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfo.t, default: nil) - The android app information of the provider. Like, Spotify.
*   lastUpdateTimestamp (type: DateTime.t, default: nil) - The client-side timestamp in millis when the app is last updated, installed or deleted.

A speed limit, containing both the limit and the conditions in which it applies.
*   condition (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRoadConditionalProto.t), default: nil) - The conditions under which this speed limit is applicable. If multiple conditions are set, at least one of them must be true.
*   sourceType (type: String.t, default: nil) - The source of the speed limit.
*   unlimitedSpeed (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreUnlimitedSpeedProto.t, default: nil) - A speed limit with no limit value. When there is no speed limit in place.
*   variableSpeed (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreVariableSpeedProto.t, default: nil) - A dynamic speed limit that can vary within a range of values based on road conditions.


This is a minimal version of SourceInfoProto.
*   dataset (type: String.t, default: nil) - The dataset from which this the referenced data was created. The content of this string will be determined by the data provider, and may encode extra information, such as data confidence.
*   provider (type: String.t, default: nil) - The data provider from which the referenced data was generated.

Key-Value-like message to store values associated with a personalization type. Next id: 3
*   score (type: number(), default: nil) - Score corresponding to some kind of biasing strength which was applied. The exact semantics of this score is subject to further changes. Don't make assumptions about specific values or ranges. Values > 0 represents that a boost was applied. Values < 0 represents that a penalty was appled.

A high-level categorization of business types. Used for location elements that are either BUSINESS_NAME or BUSINESS_CATEGORY. The business types roughly correspond to QRef collections and should be interpreted broadly. E.g., hotel also include motels, youth hostels, and guest houses; restaurants includes bars and cafes, etc. Business types can be populated by QRef collections; other population is done by grammar categories from local_categories.grammar. It is expected that some business organizations will match more than one business type. E.g., Safeway is both a grocery store and a pharmacy. Next ID: 43 NOTE(oksana): LocalCategoryReliable grammar over-rides a few business type queries to include hyper_reliable location element. If you change this, please make sure that LocalCategoryReliable grammar reflects this too. LINT. IfChange
*   transitLine (type: boolean(), default: nil) - A particular line in a transit system, e.g., "3 train", "Red Line", "Cirle Line", etc.
*   cuisineGcid (type: list(String.t), default: nil) - If the element implies a cuisine type then we include the gcid string when available. Currently this happens for BUSINESS_CATEGORY type. The field is repeated to model categories like "mandarin buffet restaurant" with multiple cuisine gcid's: mandarin_restaurant and buffet_restaurant.
*   transitStation (type: boolean(), default: nil) - The different types of transit station business types will be used to figure out which vehicle types to use when querying Tripfinder's SearchStations service. The stations in that backend seem to be divided into HEAVY_RAIL, SUBWAY, and TRAM. There isn't a very reliable division between intercity rail and commuter rail -- Amtrak, LIRR, PATH, and NJ Transit are all classified as HEAVY_RAIL. That's why in these types we make a distinction between train and subway, and not train and muni_rail, (unlike TransitMode in the TravelAction proto).
*   qrefTransitStation (type: boolean(), default: nil) - This is used for transit stations annotated by QRef. The transit_station business_type above is only used for business categories, and therefore is used downstream to find nearby stations rather than a particular station, and so cannot be present in a Location that is a specific station from QRef. For these cases, this business_type is used instead. e.g. "grand central" "millbrae station" "union station" will have business_type qref_transit_station
*   emergency (type: String.t, default: nil) - This field is used to determine the emergency type of the element, which is specified by the grammar parse in (http://cs/file:googledata/localsearch/quality/grammar/local_patterns.asciipb). e.g. "coronavirus_treatment_locations" TODO(b/151330576) Deprecate the emergency field and replace with normal triggering.
*   vehicleType (type: list(String.t), default: nil) - All of the vehicle types serviced by this business or business category. e.g. VEHICLE_TYPE_RAIL and VEHICLE_TYPE__BUS for "transit stop". This allows downstream to serve different result types for transit station categories in different languages. e.g. In en-US "train station" seeks both railway station and subway station results. But the equivalent word in French/Italian/German seeks only railway stations.

IMPORTANT: It is unsafe to accept this message from an untrusted source, since it's trivial for an attacker to forge serialized messages that don't fulfill the type's safety contract -- for example, it could contain attacker controlled script. A system which receives a SafeHtmlProto implicitly trusts the producer of the SafeHtmlProto. So, it's generally safe to return this message in RPC responses, but generally unsafe to accept it in RPC requests.
*   privateDoNotAccessOrElseSafeHtmlWrappedValue (type: String.t, default: nil) - IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at the top of .proto file for programming language packages with which to create or read this message.

Hold a list of URLs, usually to contain translations of a single URL.




A CollectionType configures a value whose type is intended to be a collection.
*   collection (type: list(String.t), default: nil) - The collection this value is filled with must be one of these collections (denoted by a /collection/* id). If no collections are specified, this value can be filled with any collection.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

Location of the user, which might be "home", for example, or an office building, as well as a custom location specified by the user.
*   customLocation (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaCustomLocation.t, default: nil) - Indicates the user is working from some other location.
*   homeLocation (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaHomeLocation.t, default: nil) - Indicates the user is working from home.
*   officeLocation (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaOfficeLocation.t, default: nil) - Indicates the user is working from the office.

A mention of an entity. A single entity might be mentioned multiple times.
*   bytes (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t, default: nil) - The bytes in this mention.
*   document (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The document that contains this mention.
*   entity (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The entity that this mention refers to.
*   text (type: String.t, default: nil) - The mention text itself. Must contain valid UTF-8.
*   tokens (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t, default: nil) - The token(s) in this mention. This may not be present, or have zero length if representing an implicit mention, as in the prodrop case.
*   type (type: String.t, default: nil) - Mention type, typically 'named' (for name mentions) or 'nominal'. More types include 'pronominal', 'conjoined' for conjoined mention construction, and 'non-referential' for non-referential pronoun mentions.

To represent unanchored durations - the length of a date/time expression not related to calendar in local context. E.g., "play first (DURATION: 5 minutes) of Yellow Submarine", "it takes (DURATION: more than 3 days) to finish." In contrast, queries like: "wake me up in 5 minutes" will be resolved to a AbsoluteDateTime since the query indicates that the reference is now. A duration can be turned into a range if either end is anchored.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field of the Duration message should not in general be used by outside clients of the grammar. It is intended to be used internally in Aqua for evaluation purposes. The rationale is that token counts depend on the particular tokenization used in Aqua which may be different from the one used by the client and may change from time to time. Outside clients should not create a dependency on the current tokenization used in Aqua.
*   modifier (type: String.t, default: nil) - For expressions such as "about 2 hrs".







Contains the needed information for serving a single LiveOp/LiveEvent on AU. Next ID: 9
*   countryLevelScheduleInformation (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.QualityCalypsoAppsUniversalAuLiveOpEvent.t}, default: nil) - Key is country, and value is the schedule information in that country.
*   defaultFormatInformation (type: GoogleApi.ContentWarehouse.V1.Model.QualityCalypsoAppsUniversalAuLiveOpFormat.t, default: nil) - Fallback option for the LiveOp format. We will try en-US -> en -> any locale and get the first one that is available.
*   defaultScheduleInformation (type: GoogleApi.ContentWarehouse.V1.Model.QualityCalypsoAppsUniversalAuLiveOpEvent.t, default: nil) - Fallback option for the LiveOp event scheduling information. Will use earliest start time and last end time from PDC LiveOps data dump.
*   localeLevelFormatInformation (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.QualityCalypsoAppsUniversalAuLiveOpFormat.t}, default: nil) - Key is locale, and value is the format information for that locale.


OnDevice describes the device(s) to perform an action. This message type can be imported in action messages as an argument.
*   device (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDevice.t), default: nil) - The device(s) to perform an action.

This protocol buffer is used to store information about disputed areas. E.g., the political power that administers a disputed area or the countries that claim it. It should only be used for features of TYPE_DISPUTED_AREA.
*   administeredBy (type: String.t, default: nil) - If present this feature is administered by the power present in the field. In most cases this will be a two letter ISO-3166 region code, but may be a descriptive string if no region code is available.
*   claimant (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - Feature IDs (usually a country feature ID) of all parties who claim this feature. No claimants means the claim by the country that contains it (based on country polygon) is not disputed.


This contains physical and logical characteristics about the device (e.g. screen size and DPI, etc).
*   screenDpi (type: number(), default: nil) - Dots (pixels) per inch of the screen.
*   screenHeightPx (type: integer(), default: nil) - Height of the device's screen in pixels. If 0 or not specified, it's assumed to be the same as screen_width_px. For a square or round screen, it's recommended to leave this field empty as a bandwidth optimization.
*   screenShape (type: String.t, default: nil) - The shape of the device's screen
*   screenWidthPx (type: integer(), default: nil) - Width of the device's screen in pixels.

Structure of each notification in the MessageNotification Bundle. Attribute sender_name could be different in case of group messages. Next Id: 8
*   charCount (type: integer(), default: nil) - Count of characters in the message body in the notification.
*   dataUri (type: String.t, default: nil) - Uri for the attachment (image, audio, video etc.).
*   messageBody (type: String.t, default: nil) - Note that this is not present in production traffic. Content of the message body in the notification.
*   wordCount (type: integer(), default: nil) - Count of words in the message body in the notification.








A media product that can be purchased
*   author (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProductMediaAttributeValue.t, default: nil) - The author of the media
*   genre (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProductMediaAttributeValue.t, default: nil) - The genre of the media
*   mediaTitle (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProductMediaAttributeValue.t, default: nil) - The title of the media Example: The assasin's creed
*   orderInSeries (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProductMediaAttributeValue.t, default: nil) - Order in media series (series title is given by the product title)
*   topic (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProductMediaAttributeValue.t, default: nil) - The topic of the media


Zero or more attributes for the node.
*   htmlAttributeType (type: integer(), default: nil) - Identifies the HTML attribute type (src, width, height, etc). For a list of possible types refer HtmlAttributeEnum defined in webutil/html/htmlattrenum.h.

List of PerDocRelevanceRatings for Precision@5 evals done via ewok (template 2282).





A count value tagged with a comparison operator. This can be used for axle count, trailer count, etc.

Download URL mentioned in citation; we keep up to K of them LINT. IfChange
*   BrokenLandingPage (type: boolean(), default: nil) - set if we know the landing page is broken
*   LikelyDifferentMetricsVenue (type: boolean(), default: nil) - In the context of a given venue in Scholar Metrics, whether this URL likely does not link to the current venue.
*   LikelyWorldViewable (type: boolean(), default: nil) - Likely to be free-to-read for everyone, after accounting for library links etc.
*   ExcerptContent (type: String.t, default: nil) - first few lines of abstract'ish excerpt
*   MaybeNoIndexReparse (type: boolean(), default: nil) - Incremental only: mark as NoIndexed if this is a reparse and the base version is NoIndexed.
*   LikelyAheadPrint (type: boolean(), default: nil) - Whether this is likely the URL for an ahead print, at indexing time.
*   OceanView (type: GoogleApi.ContentWarehouse.V1.Model.ScienceOceanView.t, default: nil) - describes whether url is viewable in ocean
*   PageCount (type: integer(), default: nil) - Number of pages in the pdf2html conversion output. Only set for PDFs. For a partitioned PDF, this is the page count of the entire volume.
*   DMCANotice (type: String.t, default: nil) - metatag: URL; result was taken down
*   Type (type: integer(), default: nil) - ArticleType for this particular url

The style customizations for the 3p agent.
*   backgroundColor (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor.t, default: nil) - The background color of the agent. Used if no background image is specified for the given display orientation, or if the provided background image does not fit.
*   landscapeBackgroundImageUrl (type: String.t, default: nil) - URL for the background image of the agent on landscape display.
*   logoUrl (type: String.t, default: nil) - URL for the image containing the 3p logo. This can include logomark and logotype, or logotype only. If present, this can be used in place of the square logo contained in the top level logo_url field in CloudProviderInfo. See go/cards-logo-customization for details on applying this logo.
*   maskColor (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor.t, default: nil) - The color of the mask to apply to the background. See go/aog-cards-background-mask for details on applying this mask.
*   portraitBackgroundImageUrl (type: String.t, default: nil) - URL for the background image of the agent on portrait display.
*   primaryColor (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor.t, default: nil) - The primary color of the agent. Used by the client to style the header and suggestion chips.

Proto message containing the id, localized title, score, and hierarchy level of a trusted genome entity. Next ID: 12
*   categoryId (type: String.t, default: nil) - The category id matching this trusted genome entity. e.g. Action tag with id /m/025zzc matches category of id GAME_ACTION
*   isLocalized (type: boolean(), default: nil) - Indicate whether the trusted genome entity has localized title.
*   level (type: integer(), default: nil) - The level of the entity. E.g. in hierarchy like Action -> Platformer > Endless Runner. Action is level 1, Platformer is level 2 and Endless Runner is level 3. Currently, only APP_TAXONOMY and GAME_TAXONOMY type may have the levels. For entity that does not have hierarchy, its level is 1. Required.
*   predicateName (type: String.t, default: nil) - The name of the relation between the app and the entity. Required.
*   queryText (type: String.t, default: nil) - The localized query string for this trusted genome entity. This query will be used when we want to bring users to SERP on click.
*   recsTopicId (type: list(String.t), default: nil) - The corresponding recs topics created from the trusted genome entity if available.
*   score (type: number(), default: nil) - The confidence score of the entity to the app.
*   userVisible (type: boolean(), default: nil) - This boolean is used to decide whether this entity will be shown on user-facing features in the Store or not.

Detected non-text visual elements e.g. checkbox, signature etc. on the page.
*   detectedLanguages (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudDocumentaiV1DocumentPageDetectedLanguage.t), default: nil) - A list of detected languages together with confidence.


A Gaia account, which may represent a user, device, service account, etc. For prod (@prod.google.com) accounts, use MdbUserProto instead.

Whether this field is set or not determines whether an account is in the grace period. While in the grace period, the user is unable to change their birthday on their own, and will be age-disabled if they don't act in a limited amount of time. Applies only to ServiceData Birthday. Users enter the grace period if they choose a birthday below the Age of Consent (go/aoc). After the grace period ends, the account will be age disabled. See go/age-disable-grace-period-dd.
*   calendarDay (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t, default: nil) - Provisional birthday <AoC the user provided, which made them enter the grace period. The main birthday fields were not altered yet while in the grace period.
*   gracePeriodEnd (type: DateTime.t, default: nil) - Timestamp which signifies the end of the grace period for this account.
*   gracePeriodStart (type: DateTime.t, default: nil) - Timestamp which signifies the start of the grace period for this account.





Represents BUY and RENT offers and associated cost info. Next ID: 3
*   cost (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaCost.t), default: nil) - Represents the price of this offer according to the locale and region.

Page boosting using Live Results data. Attaching this proto to a document indicates that a Live Result feed exists for that document, and that this feed has sufficient reliability to warrant potential boosting of the document rank. Next ID: 3
*   boostLevel (type: number(), default: nil) - Identifies the degree to which the existence of this LiveResult should boost a query's score (when the query is performed within the hot_times range). This field is always in the range [0,1]. A missing field, a value of 0, or a value outside the legal range indicates that no boosting is performed. A value of 1 indicates that the maximum level of boosting will be applied. This field will be updated from time to time based on CTR and other signals.
*   hotTimes (type: GoogleApi.ContentWarehouse.V1.Model.WeboftrustTimeRange.t, default: nil) - Specifies the time range within which this LiveResult is relevant. Used for deciding whether the rank of the corresponding page should be boosted. For example, this range can be set to encompass a few days before and after a sports game to which the page refers. If this field is missing, no boosting is performed. Specifying that a page should always be boosted is not recommended, but can be accomplished by setting hot_times.start_unix_time=0 and hot_time.end_unix_time=0x7fffffff. Note that multiple time ranges can be implemented by adding several LiveResultDocBoostData messages to the LiveResultsDocAttachments proto. If overlapping time ranges are used, the proto containing the highest boost level will be used.




The status indicating the user is out of office.
*   comeBackTime (type: DateTime.t, default: nil) - The closest time when the user will be available after this OOO block. This might be different from the end of the OOO block in Calendar, since the OOO block might end on Friday evening, and then the user is outside working hours.
*   committedUntil (type: DateTime.t, default: nil) - The time when the user will either stop being committed or change commitment type (i.e. InMeeting, DoNotDisturb, Busy or OutOfOffice < Xh). Note that the goal of this field is to provide information to help users decide how to communicate with a user (see also http://shortn/_wXYXtZScgh). Note that if this OOO block is large (>=Xh), committed_until is not set.
*   eventSummary (type: String.t, default: nil) - The summary of the corresponding OOO block in Calendar. This is entered by the user, so we return it "as is" - no i18n.


Filter on create timestamp or update timestamp of documents.
*   timeField (type: String.t, default: nil) - Specifies which time field to filter documents on. Defaults to TimeField.UPLOAD_TIME.

An Id contains the identifiers used to reference this topic (entity) in the Knowledge Graph. The Knowledge Graph supports several forms of identifiers: - "mids" (machine ids) that are assigned at creation time, and support a resolution mechanism that tracks topics after they are merged (for more about mids, see go/kg-mid), - "ids" are human-readable ids (HRIDs) that are derived from a namespace hierarchy stored in Knowledge Graph, and a set of rules, - "guids" are low-level ids historically used in Freebase (pre-Knowledge Graph, deprecated). Only the mid and id are supplied here. Note that mids can be converted to guids or uint64s (see //metaweb/util/mid/mid.h).
*   id (type: String.t, default: nil) - "id" may be a human readable ID (HRID) or a MID. Originally it was intended to always be a human readable ID, but that convention was not always followed so clients should be wary. Not every topic has an id.
*   mid (type: String.t, default: nil) - The "mid" should be used whenever a globally unique, primary key into the Knowledge Graph is needed. These keys are always prefixed with the "/m" and "/g", (and more rarely the "/x" and "/t") namespaces, and are alphanumeric strings consisting of lowercase letters excluding vowels, numbers and the underscore character. (Applications should not assume a constant length for these strings as Livegraph reserves the right to extend the number of characters to accommodate more topics.)


Contains the schedule for a single live-op event. Next ID: 4
*   endTimestampMillis (type: String.t, default: nil) - [REQUIRED] End time in UTC for the live-op event.
*   previewTimestampMillis (type: String.t, default: nil) - If specified, a live-op event must be shown only after this preview-time (in UTC). Otherwise, the event can be shown at any time as long as its before the end time.
*   startTimestampMillis (type: String.t, default: nil) - [REQUIRED] Start time in UTC for the live-op event.

Information provided within MutateDataRequest when setting a user into AgeDisableGracePeriod manually. When the grace period expires, this info will be forwarded to Gaia when disabling the user. cs//symbol:InitiateAgeDisableGracePeriodArguments
*   escalateTo (type: String.t, default: nil) - The Gaia ID of an email that ops can send inquiries to for appeals.
*   executedBy (type: String.t, default: nil) - The Gaia ID of a Googler who initiated this disable.
*   reason (type: String.t, default: nil) - When setting a user into age grace period manually, the requester can additionally supply a short human-readable reason of why the account is put into manual grace period. The description will be forwarded to Gaia when we disable the account when the grace period expires.

Valid fields in ACL are "mdb/groupname", or "user/username", e.g., "mdb/youtube-prod", or "user/alice".
*   owner (type: String.t, default: nil) - REQUIRED: the current owner of this video. Please note that owner does not get implicit reader/writer access. You must set them explicitly.

Restrictions that affect the delivery of the stanza. By default, Stanzas are publishable, which means that they are eligible for indexing, aggregation, and other delivery options (Goops, Moonshine, notifications). A stanza can be created in a "do not publish" state; the stanza will not be published anywhere. The restriction can subsequently be removed with an UpdateStanza call, at which point the post will be treated as if it were newly created. A few notes/limitations about this option: 1. Client should keep a stanza unpublishable for a small period of time (if possible to) so that our ranking system does not consider this as a stale post (thus downranking the post). 2. Client should keep the number of unpublishable stanzas to a minimum, to reduce under-serving. 3. Updating a stanza from publishable to unpublishable after creation is not supported 4. At this time, publishing options are only supported on root stanzas; let us know if you require this for child stanzas. 5. Similarly, this is only supported as a global restriction. It may not be set as a per-destination-stream restriction.




Routines team stores the core Structure Based Routine data as the payload. We will add specific metadata on a per-need basis. LINT. IfChange(proto_structure_based_routine) Next id: 12 These two forms of payload are equivalent data in different formats and both will be stored in Home Graph. 1. The internal format will fan out to the DynamicEntity Footprints for read in Settings flow and Execution. 2. The UI format will be stripped out upon replication to DynamicEntity Footprints due to its redundancy and the Footprints data size limit, i.e. DE Footprints will only contain the internal format.
*   enabled (type: boolean(), default: nil) - Whether this Routine is enabled or not. If false, then this Routine can't be triggered by Voice.
*   googlePreconfigWorkflowId (type: String.t, default: nil) - The unique identifier for a class of workflows. For example:  "sbr_001" => Away  "sbr_002" => Home * "category_template" => CUSTOM
*   securityLevel (type: String.t, default: nil) - The security level of the Structure Based Routine as determined by the most security-sensitive task.

This message is embedded within a FeatureProto. It has rank calculation details such as available rank signals and rank signal mixer used to compute final rank. For more details, see the Oyster Rank wiki page: http://wiki.corp.google.com/twiki/bin/view/Main/OysterRank
*   signal (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRankSignalProto.t), default: nil) - A list of signals. Each one is extracted separately by a SignalExtractor.
*   signalMixerType (type: String.t, default: nil) - The signal mixer that was used to calculate the rank.

Information about a single product. For ProductNet models, each product has one label with a detection score. The label is mapped to one or multiple category ids. For PRIMI generic feature models, each product can have multiple entities, and each entity has a score. The category_id and detection_score fields are not populated for PRIMI generic feature models.
*   categoryId (type: list(integer()), default: nil) - The possible Merlot ids for the item. There may be more than one if the product detector result corresponds to a collection of merlot ids, which can't be easily grouped up to a common ancestor, for which the detector would still make sense for all the children. E.g. a detected "chair" can be either an indoor chair or an outdoor one, however in Merlot the common ancestor of the two is furniture.
*   clusterIds (type: list(integer()), default: nil) - The k-d tree clusters for retrieval. Will be deprecated, use the token_groups instead. To add tokens/cluster_ids from new tokenization model in the future, add it to the token_groups.





One video can have multiple types of text anchors. For example, https://www.youtube.com/watch?v=Rtk0I5PVOIc has both list anchors and OCR anchors.




Wrapper to hold data related to a lane’s track, extendable for future data.

If this is a source document, the levels of discussion of the references this document cites.

This is the category that a user picked this job type from at the time of input. The field serves two purposes: 1) The name is used in consumer surface similar to the heading name today (i.e., grouping jobs under the category. 2) The gcid is needed mainly for free-formed entries, for which GMB needs to map them to corresponding categories in the frontend, if applicable. Notice that the name and the id are both not expected to be in sync with gcid deprecation or location category change per product decision. In other words, they are not guaranteed to stay in sync, only guaranteed true at time of creation.
*   name (type: String.t, default: nil) - Category name in the primary language of the feature. Generally intended to be used as a fallback when we are unable to fetch the name in the user's language.

Snippet candidate related information and signal scores. This message is used for both snippet scoring and ranklab features recording. Next ID: 12 ================== Features populated in production =======================
*   experimentalFeatures (type: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetExperimentalFeatures.t, default: nil) - For experimental usage, not populated yet.
*   finalScore (type: number(), default: nil) - The final score of this candidate.
*   isMuppetSelectedSnippet (type: boolean(), default: nil) - Is this the candidate chosen by Muppet scorer.

Leading text which may consist of multiple pieces.
*   type (type: integer(), default: nil) - Type of this leading text. Should be an enum of LeadingTextInfo.LeadingTextType







Attentional entities (AE) can be pulled from arguments of interpretations, entities annotated by Aqua or QRef annotators, and entities mentioned in Assistant's response and annotated by the fulfillment logic (see https://g3doc.corp.google.com/quality/dialog_manager/attentional_entities/g3doc/overview.md#overview). Sensitivity of AEs can be marked by (1) feature developers in a Monastery frame, (2) code to infer the sensitivity from Argument provenance, and (3) entity annotators, such as Aqua annotator and QRef annotator. See go/sensitive-ae.

Defines interactions that are allowed or disallowed with this person.

Redirect_chain is present for redirects, and absent for the final target. It contains the chain from the current hop's target to the final target.

Value represents a dynamically typed value which can be either be a float, a integer, a string, or a datetime value. A producer of value is expected to set one of these variants. Absence of any variant indicates an error.

This message denotes calories information with an upper bound and lower bound range.
*   unit (type: String.t, default: nil) - Unit of the given calories information.

This message contains unregistered user data identified by a UUID
*   count (type: integer(), default: nil) - Counts user data with the same uuid and payload If payload size is larger than limit, the payload will be 'Payload size is larger than limit: ' + limit size Count will be for user data with same uuid and payload exceeds limit in this case
*   payload (type: String.t, default: nil) - Payload may not be filled in Payload may contain user data




Stores the classification info of each field of study label.
*   classificationSource (type: String.t, default: nil) - The classification source that determines the field of study label.
*   isAboveThreshold (type: String.t, default: nil) - If set to true, it means that the probability is at least the threshold value specified from the corresponding saved model config. Thresholds for different fields may be different.
*   label (type: String.t, default: nil) - A label that represents the field of study.
*   probability (type: float(), default: nil) - A score between [0, 1] outputted from the classifier indicating the probability for being a YES instance.

A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset





A food menu item must have a name although it can have multiple names in different languages. Example: Thai Basil. Price for this item is specified in the item_option field. Since the price of an item may be unknown, e.g. seasonal price, there is nothing that requires an item_option to be present in the FoodMenuItemProto.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePriceListNameInfoProto.t), default: nil) - The repeated name_info field is for items listed in multiple languages.




The value was carried over from a SearchAnswerValue triggered by a previous query (go/search-answer-values). For example: U: Movies with Tom Cruise. [Movies(actor=/m/tom_cruise)] G: Tom Cruise's movies include Top Gun, The Mummy, and 52 others. U: Reviews for the second one. [Reviews(movie=/m/the_mummy)] The "movie" argument in the last query would have a provenance of SEARCH_ANSWER_VALUE.
*   eventId (type: GoogleApi.ContentWarehouse.V1.Model.EventIdMessage.t, default: nil) - This identifies the SearchAnswerValues where this value was pulled from.
*   metadataValueIndex (type: integer(), default: nil) - Each SearchAnswerValue can have a primary value and a list of metadata values. If this index is set, this value was pulled from the metadata value at this index, otherwise it was pulled from the primary value.
*   text (type: String.t, default: nil) - The display text of this answer value. It's taken from the search answer value display text if present, or the canonical name if it's an entity.
*   valueIndex (type: integer(), default: nil) - The index of the SearchAnswerValue where this value was pulled from.

Session Initiation Protocol (SIP) information for providers that use SIP to initiate multimedia communication sessions, like Google Voice and Fi. https://en.wikipedia.org/wiki/Session_Initiation_Protocol
*   providerId (type: String.t, default: nil) - The providers id (MID) which is the primary identifier for a call provider within the Assistant. A MID, or machine identifier, is a unique identifier issued by Knowledge Graph for all entities contained in it's graph.
*   realm (type: String.t, default: nil) - Calling realm to be use for each call. i.e. For anonymous, this would be set to anonymous.chirp.google.com
*   useBirdsongTacl (type: boolean(), default: nil) - If true, client should use the Birdsong TaCL API for this call. Uses the VoiceCallManager API by default. For more details: go/birdsong-migration-google-home

Info necessary for looking up a photo in storage.
*   mediaKey (type: String.t, default: nil) - For writes only, pass the media key that represents the image in photos backend. Note, this is not populated on reads.














Represents all information we have about a specific/localized name. Next available tag: 13. NOTE: If you add a field to the NameInfo proto and wish to retain it after the GlobalNameInfo merging steps in //r/w/enricher/pipeline:topic-enricher-flume-main then the appropriate combining logic for turning a flume stream of NameInfo protos into a single NameInfo must be updated with the new field in mind, in either or both of CombineContextNameInfosFn/CombineNameInfosFn. If not, the newly added field will be ignored during the merging steps (presumably because it is a transient field or a debug field that is not necessary to be retained).
*   aggregatedScores (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAggregatedEntityNameScores.t, default: nil) - The score aggregated from all sources.
*   annotatedCategory (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatedCategoryInfo.t), default: nil) - Information on categories annotated on the range.
*   debugDetails (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefNameDebugInfo.t), default: nil) - DEBUG ONLY: stores a list of queries with per-candidate scores about signals used for prior learning.
*   includeInModel (type: boolean(), default: nil) - Field which decides if this NameInfo should be included in model creation.
*   name (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLocalizedString.t, default: nil) - The specific name to which this information applies.
*   scores (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefNameScores.t, default: nil) - The name-specific scores. These scores only depend on the name and are independent of the entity.

This is a measure of how salient this country is for the document.
*   salience (type: number(), default: nil) - How salient this country is for the document. [0,1] range.


A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.
*   y (type: number(), default: nil) - Y coordinate (starts from the top of the image).

Event for the initial load of a frame, including main frame and subframes.

A subset of an Alias that is stored on kansas max. It is used in Search for alias resolution and in Maps to show icons quickly on basetiles.
*   aliasId (type: GoogleApi.ContentWarehouse.V1.Model.PersonalizationMapsAliasAliasId.t, default: nil) - The id of the alias associated with this point. This is used to query for details for the info window and to display different icons depending on the AliasType contained in this message.
*   droppedPinS2cellId (type: String.t, default: nil) - If this is a dropped pin alias, the leaf (level 30) S2 cell ID corresponding to the aliased lat/lng. Calculated once and stored here so that it can safely be used as an identifier across clients without risk of rounding differences leading to different values.
*   featureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The featureid that was associated with the alias when it was saved. If this is not set the lat/lng in 'point' is the aliased entity, i.e. this is a dropped pin alias.
*   featureName (type: String.t, default: nil) - For non-address feature aliases (e.g. businesses), the name of the feature (formatted from the FeatureProto) when it was saved.
*   featureType (type: String.t, default: nil) - The type of the feature associated with the alias.
*   formattedAddress (type: String.t, default: nil) - One-line geocoded address that this lat/lng represents at the time this alias was created by the user.
*   nickname (type: String.t, default: nil) - Free-text alias if alias type is NICKNAME. Otherwise unset. Limited to 40 characters.
*   point (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - lat/lng the icon is to be shown at.
*   ptoken (type: GoogleApi.ContentWarehouse.V1.Model.PtokenPToken.t, default: nil) - Encapsulates the privacy policy relevant signals for this event. See go/kansas-embedded-ptokens for additional details. Keep the type fully qualified in case (when) we decide to make proto compiler enforce '.ptoken.PToken' as the only allowed type for the field number 9099. Hence, don't remove the leading '.'. See go/protobuf-ptoken-field for details around the 9099 field number.
*   stickerId (type: integer(), default: nil) - The id of the sticker asset chosen by the user to replace the default asset for the alias.
*   syntheticFeature (type: boolean(), default: nil) - If the feature associated with the alias has synthetic_geometry.
*   timestamp (type: String.t, default: nil) - [INTERNAL ONLY] Last update of bigtable by kansas, in microseconds. Volatile only and not saved in kansas column. inmemory only because >= 16.

A locale is a meta-feature that describes the geographic extent of localization preferences such as the local language, and formatting conventions for numbers, dates and monetary values. Multilingual areas may be contained by multiple locales. We try to model locales fine-grained enough for deciding which languages are typically used within a city. For example, while French is an official language for all of Switzerland, we would prefer to have Zurich contained by a separate (more fine-grained) Swiss-German locale indicating that German, not French, is the predominantly spoken language in this city. Note that language borders are frequently considered a political question and often don't have clearly defined extents. For example, California has a significant Spanish-speaking population, but Spanish is not an official language of California.
*   language (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLocaleLanguageProto.t), default: nil) - This holds the list of languages spoken within a locale.
*   localizationPolicyId (type: String.t, default: nil) - The ID of the localization policy (from googledata/geostore/localization/localization_policies.textpb) to apply to features that have this locale as their best match locale. Localization policy IDs are arbitrary identifiers that uniquely distinguish a set of language-selection rules.


Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
*   endTime (type: DateTime.t, default: nil) - Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
*   startTime (type: DateTime.t, default: nil) - Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.











Represents a rule and outputs of associated actions.
*   actionOutputs (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ActionOutput.t), default: nil) - Outputs of executing the actions associated with the above rule.




Flattened version of possibly nested compound values. This means that the value in here is never a compound_value and all predicate MIDs on the nested path are collapsed into the repeated predicate_encoded_mid field. When predicate_encoded_mid contains only one predicate, this is equivalent to a CompactKgPropertyValue.
*   propertyName (type: String.t, default: nil) - The property corresponding to predicte_encoded_mid above. This is populated in some non-serving tables.

Annotation statistics for each token type. Next available tag: 8.
*   avgOpenWorld (type: number(), default: nil) - The average score for the open world for: - all ranges of this segment_type; - all capitalized ranges of this segment_type; - all uncapitalized ranges of this segment_type.
*   numRangesWithCandidates (type: String.t, default: nil) - The number of ranges with candidates that made it past primary pruning for: - all ranges of this segment_type; - all capitalized ranges of this segment_type; - all uncapitalized ranges of this segment_type.


SaftMentionAnnotation(s) are used to identify a sub-span of the input with some semantic relevance, for example PER (Person), LOC (Locations) or measure etc. Each SaftMentionAnnotation will have exactly one non-empty field.
*   coreference (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingSaftCoreference.t, default: nil) - Annotations for spans that are resolved coreference mentions.
*   title (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingSaftSpan.t, default: nil) - Annotations for spans like "the president of the United States".

Contain Multiverse client information, such as topic name. Can include other information such as crawl policy id in the future.








The serialized form of a SORI id. NOTE that this proto is stored in V4/O4 index and that new fields should not be added without getting an agreement from the serving team as well.

The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each Status message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the API Design Guide.
*   code (type: integer(), default: nil) - The status code, which should be an enum value of google.rpc.Code.
*   details (type: list(map()), default: nil) - A list of messages that carry the error details. There is a common set of message types for APIs to use.
*   message (type: String.t, default: nil) - A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.

Image-level deep tags: essentially equivalent to the proto above but containing tags that are computed at the image level. These image signals are maintained by the Visual Shopping team (visual-shopping@).  If you do use the signals, please add an entry in go/ShoppingImageAttributeClients to be notified for model upgrade.  We recommend our clients against using the raw confidence value directly. Instead, the clients should use the library, cs/ads/shopping/visual/deeptags/public/single_tag.h and cs/ads/shopping/visual/deeptags/public/single_scored_tag.h to specify an operating point in terms of precision or recall. See the following code example: http://google3/shopping/visual/explore_looks/looks_offline_pipeline.cc?l=268&rcl=304165166  model_outputs is a repeated field. Please check version to get the model you desire to use, instead of indexing the model_outputs directly e.g. model_outputs(0). We will remove the old versions in the future and this will lead to incorrect model.  Models: As of Q2 2020, we have two models running within Shopping: model one only has the overlay tag, which we are deprecating, and model two has the tags specified in go/VisualShoppingImageAttributes.
*   modelOutputs (type: list(GoogleApi.ContentWarehouse.V1.Model.CommerceDatastoreImageDeepTagsModelOutput.t), default: nil) - The set of outputs for a series of model versions. The size of this field should not extend beyond 4 at any time: two versions for slow-update track dependencies, and two versions for fast-update track dependencies.

Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P. O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
*   addressLines (type: list(String.t), default: nil) - Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
*   administrativeArea (type: String.t, default: nil) - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
*   languageCode (type: String.t, default: nil) - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
*   locality (type: String.t, default: nil) - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
*   organization (type: String.t, default: nil) - Optional. The name of the organization at the address.
*   postalCode (type: String.t, default: nil) - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
*   recipients (type: list(String.t), default: nil) - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
*   regionCode (type: String.t, default: nil) - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
*   revision (type: integer(), default: nil) - The schema revision of the PostalAddress. This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions.
*   sortingCode (type: String.t, default: nil) - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
*   sublocality (type: String.t, default: nil) - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.

Other attributes of the object.
*   idata (type: String.t, default: nil) - idata holds integer data under the attribute name, and could be interpreted differently according to the attribute name. Example: stores the ImadeData.docid used to generate thumbnails. idata will not be automatically converted into xml (the default behavior), but the behavior can be overwritten if necessary.
*   subobject (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A data object can have other data objects nested inside it. This is needed to represent Microformats and RDFa which have nestings e.g., a review with a business with an address, or a review with a rating object. See the Webmaster Central 2009/05 blog on "Introducing Rich Snippets".
*   tokenize (type: boolean(), default: nil) - Whether we should tokenize the value and cdata when generating restricts from this attribute.
*   value (type: String.t, default: nil) - Either of cdata or value should be present.

Information about the URLs being validated.
*   contentLanguage (type: String.t, default: nil) - The detected on-page content language of the document.
*   crawlTimestampSeconds (type: integer(), default: nil) - The timestamp of the last crawl attempt from crawl_timestamp column.
*   isCanonical (type: boolean(), default: nil) - Whether the URL being validated is canonical at the time of processing.
*   outgoingLinkData (type: list(GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkLink.t), default: nil) - Repeated field for data about the outgoing hreflang links that appear in the document that the currently processed URL refers to.




Goldmine annotation in the CDoc to store the hrid of the 5 entities with higher topicality in the document. Used by the Skin Tone Twiddler to determine if the result set shows mostly one specific KG entity. go/result-set-signal
*   mediaEntitiesId (type: list(String.t), default: nil) - Similar to above, but for media entities (movie name, fictional character, musical band)
*   peopleEntitiesId (type: list(String.t), default: nil) - hrid of the 5 people entities with higher topicality in the document

Flexible Recurrence proto to be used with People Prompts. Examples: Single recurrence that occurs on a specific date: single_recurrence { date { year: 2022 month: 11 day: 17 } } Yearly recurrence such as a birthday or anniversary: yearly_recurrence { monthly_pattern { monthly_day_recurrence { month_day: 17 } } months: JULY } Weekly reccurrence such as: every two weeks on Monday: every: 2 weekly_recurrence { week_day: MONDAY } Monthly recurrence such as: third Thursday of every month: monthly_recurrence { monthly_weekday_recurrence { week_day: THURSDAY week_day_number: 3 } } Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService) The canonical recurrence validation function is located here: http://google3/java/com/google/social/people/prompts/util/PromptValidators.java?q=func:%5CbvalidateRecurrence%5Cb
*   every (type: integer(), default: nil) - Multiplier on the frequency of the recurrence. Use this to specify patterns that recur every X days, months, years, etc. Must be a positive int. Example: [remind me to call mom every 2nd week]. If this field isn't set, it will default to 1 (every day,every week, etc). This field is ignored when recurrence_data is a SingleRecurrence. Optional.
*   recurrenceStart (type: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDateTime.t, default: nil) - The start of the recurrence can be represented as a DateTime. This field is ignored when recurrence_data is a SingleRecurrence.
*   repeatCount (type: integer(), default: nil) - Will repeat only a finite number of times. This is the original number of times the recurrence will repeat and not how many times are left for it to repeat. This end type is not currently supported.
*   repeatForever (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoRecurrenceRepeatForever.t, default: nil) - Will continue to repeat until prompt is deleted.


Contains versions of protocol buffer messages. This is the equivalence of a proto3 map, keyed by a protocol buffer message’s name, and the value is the version of this message. e.g. {"assistant.api.core_types. Timer": 2, "assistant.api.core_types.Alarm": 1} See go/assistant-protocol-versioning for more details.


Dining recognition capability. For example popular dishes on a given restaurant menu image.

CrapsDevice has the gws interface, gws tier and operating system for events from QSessions.
*   uxInterface (type: integer(), default: nil) - An enum taken from GWSLogEntryProto that indicates what type of device a request came from. This includes an entry for DESKTOP(1), MOBILE(2), and TABLET(3) devices. Reference: - gwslog(608): GWSLogEntryProto.ux_interface
*   uxTier (type: integer(), default: nil) - Indicates the device browser tier for the given request. 1 means modern browsers, 3 means very old browsers, and 2 is everything in the middle. See Reference: - gwslog(609): GWSLogEntryProto.ux_tier

Alternate OCR words for Ptolemy OCR Correction. This is the output of the Ptolemy error estimator. See http://go/Ptolemy.
*   ErrorProbability (type: integer(), default: nil) - The probability that the main OCR engine (Abbyy) string is incorrect; range is 0 (definitely correct) to 100 (definitely incorrect).

Defines a frequency for a terrestrial radio station. For instance, 99.1 FM, 730 AM, etc. Next ID: 4
*   band (type: String.t, default: nil) - The broadcast band used by the radio station.
*   value (type: float(), default: nil) - Frequency in MHz (for FM) and KHz (for AM).





Indicates a command, instructing someone to do something which might be explicit (e.g. [call me]) or implicit (e.g. [can you call me]).

Detected break at the end of a Token.

Label identifying a logical part of the page content. This applies mostly at Block level or Paragraph level (but can apply to Words or to arbitrary spans if needed).
*   AlternateText (type: String.t, default: nil) - Alternate text for a sequence of the Goodoc, just for the element containing this label, or for a sequence starting from this element to the EndOfSpanningLabel. Typically this is inserted by automatic or manual OCR correction. We use text instead of editing the Goodoc directly since we dont usually have accurate symbol level bboxes for the alternate text. Also the original values from OCR are preserved. It is upto the application to do anything more intelligent like mapping words and finding potential symbol/word bboxes.
*   Attribute (type: list(String.t), default: nil) - Page elements can be given Attributes refining meaning/role. We keep this flexible by using strings instead of pre-determined enum values. But it is useful to list all such Attributes in use in ocr/goodoc/goodoc-semantics-attributes.h
*   ChapterStart (type: boolean(), default: nil) - Blocks that are at the beginning of chapters have this set:
*   ContinuesFromPreviousPageHyphenated (type: boolean(), default: nil) - When ContinuesFromPreviousPage=true, this bit can be set to note that the word fragment on the previous page ends in a hyphen.
*   ContinuesOnNextPage (type: boolean(), default: nil) - Paragraphs that span across pages can be identified with the following flags. Note that flows just connect Blocks across pages. These continuation flags imply something more specific -- the case of a single logical paragraph split over pages. Only the last Paragraph in the last Block within a given FlowThread() on a page can have ContinuesOnNextPage set. Similarly, only the first Paragraph in the first Block with a given FlowThread() on a page may have ContinuesFromPreviousPage set.
*   EndOfSpanningLabel (type: GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntity.t, default: nil) - Normally, a SemanticLabel applies exactly to the goodoc element that it is contained in (usually Block or Paragraph, sometimes Word). Occasionally, we need a SemanticLabel to span across the boundary or end before the boundary. For example, a URL may just be a few words within a Paragraph. In such cases, the SemanticLabel is added to the first element of the span and contains this LogicalEntity pointing to the last element of the span:
*   ExperimentalData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - Message set for experimental algorithm data. Use case: We keep a set of features that was computed for the unsupervised caption extraction and store it here. Agora question producer will consume this message set to be embedded in a question. The experimental feature set can then be used later to pair up with ground truth labels for designing a supervised algorithm. Currently holding: o ocean/analysis/content/caption_data.proto's TextualElement
*   Flow (type: String.t, default: nil) - Flow identifies a single sequential unit of text (or other content). It is only set on Blocks -- a flow identifies a sequence of Blocks. The default, main flow is just the empty string. The "FlowThread" of a block is the flow (if non-empty), suffixed with the block appearance. This is computed by GoodocUtils::FlowThread(). Paragraphs may be split over blocks in the same FlowThread, across pages. The following table shows how FlowThread gets computed: ## Flow Appearance FlowThread (empty) UNSPECIFIED "UNSPECIFIED" foo BODY "foo:BODY" Please use lower-case strings for flows (such as article-33-box). One useful way to think of flows is this: A logical unit of interest in a a Document (for example, an article) would be identified by a starting block, an ending block, and a list of flows of interest within the [start, end) span. message Article { (page#, block#): article_start; (page#, block#): article_end; repeated string flows; } The reading order of blocks, paragraphs/etc within this article would be the same order as present in the goodoc itself. Some applications (such as rendering) may want to process the article by running over all the flows together, others (such as indexing) may want to deal with the FlowThreads one after the other.
*   ModificationRecord (type: String.t, default: nil) - This field can be used to record the steps by which AlternateText for a sequence of the Goodoc is generated.








Describes a single physical marker line. NOTE: PhysicalLineProto could be compared against one another by canonicalizing them via GetCanonicalPhysicalLine() in google3/geostore/base/internal/lane_marker.cc. Any fields that don't contribute to the definition of a physical line in the real world should be bundled with the annotative fields near the bottom and excluded in GetCanonicalPhysicalLine(). LINT. IfChange
*   gapColor (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePaintedElementLogicalColorProto.t, default: nil) - This should be rarely needed, but can represent patterns of alternating colors.
*   paintColor (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePaintedElementLogicalColorProto.t, default: nil) - Color for the painted elements. Applicable to all types.
*   physicalLineToken (type: String.t, default: nil) - A token that can be used to identify the version of the data about this marker line.

PointWithHeightProto encodes lat/lng through PointProto and contains altitude information.
*   altitudeMeters (type: number(), default: nil) - Altitude of this point is assumed to be relative to the ground level.

This is a protocol buffer to export into flatfiles in ranklab. All fields are converted into flatfiles with some specific prefix and a field name like 'snippet_features_snippet_data_source_type'.
*   candidates (type: list(GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetCandidate.t), default: nil) - Features for snippets candidates, generated by both old and new scorer. Currently only features for chosen candidate is generated.
*   displaySnippet (type: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.t, default: nil) - Snippet features for the final chosen snippet. This field is firstly populated by Muppet, and then overwriten by Superroot if SnippetBrain is triggered.
*   originalQueryTermCoverages (type: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t, default: nil) - Original query term coverage in titles and / or snippets.
*   snippets (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.t), default: nil) - Snippet features for Muppet snippet candidates. In production, only the data for chosen snippet will be recorded.
*   titles (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabTitle.t), default: nil) - Per-candidate title features for ranklab models, sorted from the best candidate to the worst candidate (i.e., the first element is the actually selected title).

Pattern for a WEEKLY recurrence. You must specify at least one week_day. Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
*   weekDay (type: list(String.t), default: nil) - Set of weekdays the recurrence applies to.


Capabilities related to Android intent support. These capabilities can apply to any device on the Android platform. Provides the list of Android package names that support a given Android intent.

Metadata about the join of description anchors and OCR data for a set of description anchors.
*   maxEditDistance (type: integer(), default: nil) - The max edit distance of any description anchor to its closest OCR text.
*   maxEditDistanceRatio (type: number(), default: nil) - The maximum of (edit distance of any description anchor to its closest OCR text over description anchor label length).
*   medianEditDistance (type: integer(), default: nil) - The median edit distance of any description anchor to its closest OCR text.





The information related to Media Focus. TODO(b/138952173) Deprecate MediaFocusState in logs/proto/majel_gws/media_action_triggering_info.proto and assistant/verticals/media/proto/target_device_info.proto
*   currentFocusDurationSec (type: integer(), default: nil) - How long the device is in focus so far
*   mediaFocusState (type: String.t, default: nil) - The media focus state at the time of the request.


Client-specific data pertaining to app reachability. No PII data or user content should be stored in this blob.
*   app (type: String.t, default: nil) - The app to which this client data applies.


Internal state of the West & Chan running variance algorithm. Fields of this proto should not be accessed directly; instead, please use RunningMeanAndVarianceUtil. The fields of this message only have meaning in the context of the West & Chan algorithm, which is documented (or Wikipedia-linked) in the doc comments of RunningMeanAndVarianceUtil. We do however give some explanation of the meanings of these fields in the context of the algorithm (i.e. if you have the Wikipedia page open and are ready to do some math). Also see the file doc of RunningMeanAndVarianceUtil for a specification and more info about the algorithm. Notation: The data set is X = {(x_1, w_1), ..., (x_n, w_n)}. It consists of n weighted data points. The ith data point has value x_i and weight w_i. REQUIRES: x_i is finite for each i. w_i is finite for each i. w_i >= 0 for each i.
*   m2 (type: float(), default: nil) - The variable which in the Wikipedia page is referred to as M_2: m2 = w_1  (x_1 - mean)^2 + ... + w_n  (x_n - mean)^2. The algorithm implemented in RunningMeanAndVarianceUtil provides a way to update m2 in a numerically stable way when the data set grows. If total_weight = 0, then m2 is meaningless, and its value is unspecified, except that it must be finite and >= 0.
*   mean (type: float(), default: nil) - Mean of the data set, mean = (w_1  x_1 + ... + w_n  x_n) / total_weight. The algorithm implemented in RunningMeanAndVarianceUtil provides a way to update this mean in a numerically stable way when the data set grows. If total_weight = 0, then mean is meaningless, and its value is unspecified, except that it must be finite.

This protocol buffer holds attributes for features of TYPE_SKI_BOUNDARY.

Signals about an anaphor in the query: for example an occurrence of the pronoun "it".
*   evalData (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t), default: nil) - If populated, the spans in the current query where this value was annotated. This is a repeated field because some values can be annotated from a set of discontiguous spans (e.g. some intent phrases), but in most cases this field will contain only one item or it will be empty (for values inferred from context without the use of anaphora).

The composite descriptor of the contributors that should be known to search and front end. Both fields are required. Replaces authors and editors strings.
*   type (type: integer(), default: nil) - ContributionType enum from ocean/metadata/metadata_enums.proto Note that we pick only the "highest-ranking" contribution (i.e. writer and editor would collapse to "writer".


A redirect event represents a change in the resource URL for a document. This includes HTTP redirects, as well things which trigger client navigations such as script changing window.location, tags, HTTP Refresh headers, etc.
*   httpMethod (type: String.t, default: nil) - The HTTP method of the request for the redirect target.
*   httpStatusCode (type: integer(), default: nil) - For HTTP redirects, the HTTP status code returned in the initial HTTP response.
*   targetContentDownloaded (type: boolean(), default: nil) - True if the redirect led to a download instead of loading a new page. Note that such redirects can appear anywhere in the list of redirect events.


A single byte, such as that from a utf8-encoded character sequence.
*   document (type: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t, default: nil) - The document that contains this character.

Signals coming from the Annotation Layer of TUIG. See more details at http://go/unified-intent-generation-apis.

Group with protocol specific response (determined by the protocol of the url that generated the content we return).
*   Code (type: integer(), default: nil) - Response code. We emulate the HTTP response codes for all protocols that we know. -- HTTP: response code for the downloaded page. -- FTP: similar with HTTP: 200 - OK, 40X - errors (not found, etc), 500 - server unavailable
*   ContentType (type: String.t, default: nil) - Content type as inferred by the fetcher (webutil/http/content-type.proto)
*   CutoffSize (type: String.t, default: nil) - Where did we cut off? Includes headers plus truncated but uncompressed content. Present if and only if we truncated the document.
*   HttpVersion (type: String.t, default: nil) - DEPRECATED, see field 113. Stores the HTTP version we used in the final hop.
*   ProtocolVersionFallback (type: boolean(), default: nil) - DEPRECATED, see field 114. Whether we fallback from HTTP/2 to HTTP/1.1 during fetch. The fallback could happen in any hops and there can be at most one fallback because once fallback happens, we will not try HTTP/2 anymore.
*   UnTruncatedSize (type: String.t, default: nil) - The amount of data we got from the webserver before any truncation, but after undoing any HTTP gzip/deflate encoding. For HTTP, this includes headers and uncompressed content. Content size is excluded if content was not successfully fetched. See description above TotalFetchedSize for comparison.





Information about the outlinks for one specific target URL, from a given annotated document. Next available tag: 7
*   byteLength (type: list(String.t), default: nil) - The length in bytes of such a link (including internal spaces); e.g. if the link text is "click here" then the length is 10.
*   byteOffset (type: list(String.t), default: nil) - The byte offset of the start of a link with this target URL, in the content of the annotated document.
*   isNofollow (type: boolean(), default: nil) - Whether this is a nofollow link (https://en.wikipedia.org/wiki/Nofollow). If the page has multiple links to the same url, all of them must be nofollow to set this field.
*   topicalityWeight (type: list(number()), default: nil) - The topicality_weight for each link with this target URL.
*   url (type: String.t, default: nil) - The target URL of the link.

The properties of the provider. OPEN ClientOp. This proto is stored in the SupportedClientOp proto with the key provider.OPEN.
*   keepsConversationAliveAfterOpeningApp (type: boolean(), default: nil) - Whether conversation is kept alive after opening the app. See go/keep-opa-conversation-alive for details.

These are the addresses, phone numbers, and opening hours related to this document, or the local businesses mentioned on this document. We currently populate these fields from web extractions, i.e, from the data present explicitly on the document, but in future, they can also be filled with data coming from the local index. We populate addresses and phone numbers only if there are

This message holds person attributes from the Person Interpreter model (go/person-interpreter) and the Style AI Iconic Person Scorer (go/styleai-indexing-g3doc#iconic-person-scorer) for the most iconic person in a style image. Discretization of float values is recommended by CDS for cheaper and more efficient storage. Next ID: 11
*   discretizedFaceVisibilityScore (type: integer(), default: nil) - The visibility of the face of the most iconic person in the image discretized into range [0, 100].
*   discretizedMaleConfidence (type: integer(), default: nil) - Male and female confidence scores are discretized into the [0, 100] range.
*   discretizedPredictedAge (type: integer(), default: nil) - Age prediction is rounded to the first decimal place and multiplied by 10 (e.g. 12.3 -> 123).  Not populated in Amarna for legal reasons.
*   discretizedVisualSaliencyScore (type: integer(), default: nil) - The area ratio of the most iconic person to the whole image discretized into range [0, 100].
*   personBoundingBox (type: GoogleApi.ContentWarehouse.V1.Model.LensDiscoveryStyleBoundingBox.t, default: nil) - Bounding box of the most iconic person in the image.

Contains information about comment that is posted through a Super Thanks purchase. Next ID: 7
*   currencyCode (type: String.t, default: nil) - Currency code the user uses to purchase this Super Thanks item.
*   entitlementId (type: String.t, default: nil) - The ID of the Super Thanks entitlement. It uniquely identifies a Super Thanks purchase. This field is deprecated in favor of transaction_id, see go/st-deprecate-ent-id.
*   priceInMicros (type: String.t, default: nil) - Price of Super Thanks item the user purchases in micros.
*   superVodItemId (type: String.t, default: nil) - The Super Thanks item the user purchases, it represents price tier.
*   transactionId (type: String.t, default: nil) - The ID of the Super Thanks transaction. It uniquely identifies a Super Thanks purchase.
*   version (type: String.t, default: nil) - Which version of experiment this Super Thanks comment is posted in.

Top level proto for enricher specific debug data that is only displayed in the Webref demo and should not be used for anything production-related. Next id: 4.
*   nonMidProperties (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCompactFlatPropertyValue.t), default: nil) - Contains selected properties (from KG) whose values are not other entities (in which case they would be represented in link_info) but scalar values, possibly reachable through (multiple) CVTs.
*   referencePage (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSimplifiedCompositeDoc.t), default: nil) - This field contains reference pages for this entity. A reference page is a page that is highly topical for this entity, which can be used to mine additional information about this entity. Example reference pages for Apple Inc. would be the composite docs for "http://en.wikipedia.org/wiki/Apple_Inc." and http://www.apple.com. For actors or movies, you can also have the imdb page. Also see: http://go/refx-pages.
*   relatedPage (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSimplifiedCompositeDoc.t), default: nil) - This field contains mined related pages for the entity. A related page is a page that is moderately topical for this entity (More details: http://shortn/_KCE0GfQlpJ). This is mainly used to mine additional information for entities which do not have reference pages Unlike reference pages, a single doc can be a related page for multiple mids.

A message containing per doc signals that are compressed and included in Mustang and TeraGoogle. For TeraGoogle, this message is included in perdocdata which means it can be used in preliminary scoring. CAREFUL: For TeraGoogle, this data resides in very limited serving memory (Flash storage) for a huge number of documents. Next id: 42
*   crapsAbsoluteHostSignals (type: integer(), default: nil) - Impressions, unsquashed, host level, not to be used with compressed ratios. Not to be used in Pattern Data.
*   nsrOverrideBid (type: number(), default: nil) - NSR override bid, used in Q* for emergency overrides.
*   crapsNewUrlSignals (type: String.t, default: nil) - For craps[url|pattern]_signals, please avoid accessing these fields directly, even in minor ways like checking has_craps*. Instead, please use methods from quality/navboost/craps/craps-lossy-compression.h or talk to dice-team.
*   productReviewPReviewPage (type: integer(), default: nil) - Fields product_review_p_review_page and product_review_p_uhq_page are for promoting/demoting HQ/LQ review pages in NGS. See go/pr-boosts for details. The possibility of a page being a review page.
*   unauthoritativeScore (type: integer(), default: nil) - Unauthoritative score. Used as one of the web page quality qstar signals.
*   scamness (type: integer(), default: nil) - Scam model score. Used as one of the web page quality qstar signals. Value range from 0 to 1023.
*   pairwiseqScoringData (type: GoogleApi.ContentWarehouse.V1.Model.PairwiseQScoringData.t, default: nil) - PairwiseQ data for QTJ. This field is not propagated to shards, but is populated at serving time by go/web-signal-joins. See b/175762140
*   experimentalQstarSignal (type: number(), default: nil) - This field is not propagated to shards. It is meant to be populated at serving time using one of the versions present in the experimental_nsr_team_wsj_data field above (using the ExperimentalNsrTeamDataOverridesParams opti to populate it; see http://source/search?q=ExperimentalNsrTeamDataOverridesParams%20file:ascorer.proto). The purpose of this field is to be read by an experimental Q* component, in order to quickly run LEs with new components. See go/0DayLEs for details.
*   lowQuality (type: integer(), default: nil) - S2V low quality score: converted from quality_nsr.NsrData, applied in Qstar. See quality_nsr::util::ConvertNsrDataToLowQuality.
*   babyPandaV2Demotion (type: integer(), default: nil) - New BabyPanda demotion, applied on top of Panda. This is meant to replace |baby_panda_demotion|.
*   experimentalQstarSiteSignal (type: number(), default: nil) - This field is not propagated to shards. It is meant to be populated at serving time using one of the versions present in the experimental_nsr_team_wsj_data field above (using the ExperimentalNsrTeamDataOverridesParams opti to populate it; see http://source/search?q=ExperimentalNsrTeamDataOverridesParams%20file:ascorer.proto). The purpose of this field is to be read by an experimental Q* component, in order to quickly run LEs with new site components. See go/0DayLEs for details.
*   productReviewPUhqPage (type: integer(), default: nil) - The possibility of a page being a high quality review page.
*   nsrVersionedData (type: list(GoogleApi.ContentWarehouse.V1.Model.NSRVersionedItem.t), default: nil) - Versioned NSR score to be used in continuous evaluation of the upcoming NSR version and assess quality impact on various slices.
*   experimentalNsrTeamData (type: GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamData.t, default: nil) - This field is not propagated to shards, but it's populated at serving time by go/web-signal-joins (see b/207344056). See go/0DayLEs for details. This is only meant to be used during LEs, it should not be used for launches.
*   pairwiseqVersionedData (type: list(GoogleApi.ContentWarehouse.V1.Model.PairwiseQVersionedItem.t), default: nil) - Versioned PairwiseQ score to be used in continuous evaluation of the upcoming PairwiseQ versions and assess quality impact on various slices.
*   pqDataProto (type: GoogleApi.ContentWarehouse.V1.Model.QualityNsrPQData.t, default: nil) - Stripped page-level signals, not present in the encoded field 'pq_data'.
*   exactMatchDomainDemotion (type: integer(), default: nil) - Page quality signals converted from fields in proto QualityBoost in quality/q2/proto/quality-boost.proto. To save indexing space, we convert the float values in [0, 1] to integers in range [0, 1023] (use 10 bits). exact_match_domain_demotion: converted from QualityBoost.emd.boost.
*   experimentalNsrTeamWsjData (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamWSJData.t), default: nil) - This field is not propagated to shards, but it's populated at serving time by go/web-signal-joins (see b/207344056). See go/0DayLEs for details. This is only meant to be used during LEs, it should not be used for launches.
*   experimentalQstarDeltaSignal (type: number(), default: nil) - This field is not propagated to shards. It is meant to be populated at serving time using one of the versions present in the experimental_nsr_team_wsj_data field above (using the ExperimentalNsrTeamDataOverridesParams opti to populate it; see http://source/search?q=ExperimentalNsrTeamDataOverridesParams%20file:ascorer.proto). The purpose of this field is to be read by an experimental Q* component, in order to quickly run LEs with new delta components. See go/0DayLEs for details.
*   pandaDemotion (type: integer(), default: nil) - This is the encoding of Panda fields in the proto SiteQualityFeatures in quality/q2/proto/site_quality_features.proto. The encoding/decoding is performed using functions from quality_coati::coati_util.
*   topicEmbeddingsVersionedData (type: list(GoogleApi.ContentWarehouse.V1.Model.QualityAuthorityTopicEmbeddingsVersionedItem.t), default: nil) - Versioned TopicEmbeddings data to be populated later into superroot / used directly in scorers.

The relationship information from QRef. Only included if the QRefAnnotator is initialised with include_annotated_relationships.
*   entityIndex (type: integer(), default: nil) - The index of the other entity in the relationship.


Metadata in the GDepth XMP block. Note that GDepth::Data is not copied into this message.

These are user configurable permissions representing what the device is allowed to output. Next ID: 11
*   googlePhotoContent (type: String.t, default: nil) - The type of Google Photo content which the device can output.
*   personalData (type: String.t, default: nil) - The level of personal data which the device can output. See go/personal-readout for detail.
*   proactiveNotificationOutput (type: String.t, default: nil) - This controls if the server can proactively send notification to users, and it does not affect scenarios that users ask for information. The notification may include TTS and lights. It could be only lights for chirp.
*   proactiveOutput (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiProactiveOutput.t, default: nil) - Restrictions on displaying and interacting with content on proactive surfaces (e.g. Dragonglass home screen). Note: NEVER access this field of OutputRestrictions directly, use the code in assistant/assistant_server/settings/device/device_settings_util.h instead.
*   youtubeAutoplayRestriction (type: String.t, default: nil) - Whether YouTube autoplay is allowed for queries from the user to this device. See go/assistant-youtube-settings for details.
*   youtubeContent (type: String.t, default: nil) - The type of YouTube content which the device can output.
*   youtubeTvContent (type: String.t, default: nil) - The type of YouTube TV content which the device can output.

The logging-version of DeviceId proto, which identifies a device. This mirrors cs/google3/assistant/api/core_types/device_type.proto?q=symbol:DeviceId Next ID: 6
*   agsaClientInstanceId (type: String.t, default: nil) - The client_instance_id on devices with GSA. See 'client_instance_field' in go/androidids.
*   canonicalDeviceId (type: String.t, default: nil) - A unique device ID for Assistant devices as proposed by go/ocelot-team.
*   castDeviceId (type: String.t, default: nil) - If set, indicates that the device is a cast device, and contains the UUID of the cast device. Corresponds to the device_id field of the CastDevice proto.
*   clientInstanceId (type: String.t, default: nil) - DUSI (go/dusi) is used as the identifier here. This identifier is unique to the user and device. This will help identify which device or application the user's request originated from. This is not to be confused with the client_instance_id that android devices provide. This is currently used by surfaces that use the assistant-legacy-nexus and assistant-legacy-clockwork pipelines. DUSI is created and set in S3. This field is only filled for GAIA requests.
*   homeGraphDeviceId (type: String.t, default: nil) - The unique device ID for HomeGraph devices. This is the HomeGraph ID, created when the device is registered into HomeGraph. It is immutable for the same device unless it is completely deleted and recreated. See go/home-graph for details. }

Grounding-related signals to be propagated down stream. Next ID: 14
*   groundabilityScore (type: float(), default: nil) - Score indicating how grounded the intent is, populated by the Grounding Box, used by the pre-fulfillment ranker, see http://go/prefulfillment-ranker.
*   numConstraints (type: float(), default: nil) - Sum of the number of constraints used by the Grounding Box to ground each variable.
*   numConstraintsSatisfied (type: float(), default: nil) - Sum of the number of constraints satisfied for each variable. Depending on the match score for a constraint, this number can be fractional and is in the range [0, num_constraints].
*   numGroundableArgs (type: float(), default: nil) - Number of groundable arguments in the parsed intent.
*   numGroundedArgs (type: float(), default: nil) - Number of arguments that got actually grounded.
*   numVariables (type: float(), default: nil) - Number of arguments, possibly nested, that the Grounding Box tried to ground.
*   numVariablesGrounded (type: float(), default: nil) - Number of arguments, possibly nested, that the Grounding Box was able to ground. This includes ambiguously grounded arguments.
*   pgrpOutputFormat (type: String.t, default: nil) - PGRP outputs PROD_INTENT_FACTORY intent format by default. See go/intent-conversion-locations-in-sage. Experimental flags can change or make PGRP output additional intents formatted for PORTMON_FULFILLMENT (e.g. with RDs). This is used by the PortMon/ARM dark launch (go/arm-dark-launch-infra). Longer term, this will be replaced by DGS system-internal transformations (go/if-dgs).
*   usesGroundingBox (type: boolean(), default: nil) - If true, then GroundingBox and PGRP are used in AnswersRewriter to process the intent. Other post-processing steps, including IGDP, are adjusted accordingly. Note this will be removed once GroundingBox is fully launched and all prod traffic goes through it. Before that happens, each IG that needs to go through GB and PGRP (post GB ranking pruning) will need to explicitly set this field to true. See http://go/gb-impl and http://go/gb-post-ranker-pruner for details.

Extension data for use in Play Games Product Profile. See go/jam-games-profile.
*   achievements (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement.t), default: nil) - User's top achievements that are sorted for example by rarity.
*   avatarImageUrl (type: String.t, default: nil) - The avatar image to display for the user.
*   failure (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure.t, default: nil) - Failure type if there is an error when fetching product profile data.
*   gamerTag (type: String.t, default: nil) - The gamer tag set by the user. Not set if the user hasn't set a gamer tag yet.
*   profileVisibility (type: String.t, default: nil) - Specifies the visibility of the player's profile.
*   totalUnlockedAchievements (type: String.t, default: nil) - How many achievements this player has unlocked.

This protocol buffer holds school district specific attributes for features of TYPE_SCHOOL_DISTRICT.

copybara:strip_begin RestrictTokens - used to perform "restricted searches" where boolean rules are used to filter the subset of the database eligible for matching. We currently support V1 and V3 restrict systems. V3 restrict is a superset of V1 restrict. New users are encouraged to use V3 directly for its rich features and cleaner semantics. See the document go/scam-v3-restricts, or read the comments in //research/scam/proto/restricts.proto for details. Nevertheless, V1 restrict is still supported by ScaM team. There's some minor tradeoff of performance between V1 and V3. User may prefer V1 over V3 if performance is the first priority. However, the CPU cost between V1 and V3 should be very minor. --------------------------------------------------------------------------- The semantics of V1 restrict is described below: V1 "forward" restricts: The dataset defines a many:many mapping between the database points and a token space. Each token names a set of tokens and each database point is a member of zero-to-many tokens. Queries specify zero-to-many whitelist and blacklist tokens that activate database points according to the following rules:  If whitelist_token is populated, the search will be restricted to points named by at least one whitelist token. If whitelist_token is empty, all points are whitelisted by default.  If blacklist_token is populated, it overrides the whitelist. Points named by a blacklisted token are not searched.  Note that, if neither whitelist_token nor blacklist_token is populated, the search remains unrestricted. --------------------------------------------------------------------------- V1 "reverse" restricts: Each database point is whitelisted and/or blacklisted for zero or more tokens, specified by whitelist_token and blacklist_token fields. Each query specifies zero or more tokens, and the same rules apply:  If a point's whitelist_token is populated, the point will only be searched if the query has at least one matching whitelist token. If whitelist_token is empty, the point is always whitelisted by default.  If a point's blacklist_token is populated, it overrides the whitelist. The point will be ignored for any query with a matching blacklist token.  Note that, if neither whitelist_token nor blacklist_token is populated, the point will always be searched. NEXT ID TO USE: 9
*   tokenMembership (type: list(String.t), default: nil) - B) Token Definitions (V1 Restricts) In "forward" mode: defined on database points In "reverse" mode: defined on queries
*   v3 (type: GoogleApi.ContentWarehouse.V1.Model.ResearchScamV3Restrict.t, default: nil) - Only ONE of the following sections should be used: A) V3 restricts. Defined in //research/scam/proto/restricts.proto
*   v3CompatibleNamespace (type: String.t, default: nil) - If this field is not empty, when query is in V1 restricts while database is in V3 restricts, SCaM will update V1 query to V3 automatically instead of sending error messages. When updating query from V1 to V3, SCaM server will use this field to fillin the 'namespace' field.
*   whitelistToken (type: list(String.t), default: nil) - C) Whitelist / Blacklist Definitions (V1 Restricts) In "forward" mode: defined on queries In "reverse" mode: defined on database points




If LocationType is CATEGORICAL, this is info about the category. For example, the category "Grocery Stores" includes chains such as Safeway and Whole Foods.
*   displayName (type: String.t, default: nil) - A (localized) display string describing the category. This is s generic string describing the category, and may be different than the term the user actually said, e.g. name: "supermarket", display_name: "Grocery Stores"

The current and future availabilities of a user. The response contains a timeline, which starts before or at the request time, and the timeline is split into a set of disjoint intervals (without gaps), where the first range always contains the request time. Each range represents what should be displayed in the UI during this time range. The time range might be different from the actual time range of the underlying status. For example, if the user is OOO from 09:00 to 10:00, and a request is made at 8:00, the response might contain two intervals: [08:00, 09:00) - "User is INACTIVE, but leaving the office soon" [09:00, 10:00) - "User is OOO till 10:00" For intervals that don't have a clear availability signal coming from Calendar (e.g. OOO), we return INACTIVE. For more details, please see https://docs.google.com/presentation/d/1ADCTxGawjF9UqMnfuVrVNxGvdyjeiV8h4D7p0a9zYgw/edit#slide=id.g3e2824ac6c_12_94 The service returns availabilities for some short period of time - likely one day, but the client should stick to the "next_poll_time" to decide when to query the server again at the latest. Below there is an example response from the server. Let's assume the client calls the service at 17:59:45. The client receives the message and, assuming its current time is between [17:59:45, 18:00:00), it displays "inactive". When the current time becomes 18:00:00 it displays "outside working hours". At 18:00:40 the client issues another rpc which will return the availabilities for the next minute. The original response looks like availabilities { time_range { start_time: 17:59:45 end_time: 18:00:00 } status { inactive {} } } availabilities { time_range { start_time: 18:00:00 end_time: 18:00:45 } status { outside_working_hours { } } } next_poll_time: 18:00:40
*   availabilities (type: list(GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserAvailability.t), default: nil) - A list of user availabilities having contiguous time ranges which are ordered chronologically. The first one starts at the time of the request or before, and is guaranteed to contain the request time. That means the first element always indicates the current status of a user. A client that wants to display a user's availability in real time should display the availability whose time range contains the current time.
*   nextPollTime (type: DateTime.t, default: nil) - The time at which the client should issue the next availability query for this user. This field should only be used to control the polling frequency. This time is always before the end of the time range of the last availability so that the client always knows the current availability.
*   workingHours (type: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaWorkingHours.t, default: nil) - Information about the user's working hours. This will only be set in case working hours are enabled in their calendar settings.

Represents the invitees or other users associated with a Google+ Event (see http://goto/events-backend-design).
*   eventId (type: String.t, default: nil) - Event IDs consist of alphanumeric characters and colons. Currently required.
*   memberType (type: integer(), default: nil) - The type of Event members to consider, e.g. "all members" vs. "owners" vs. "admins". These are defined by legacy_relation_id values in social.graph.storage.EdgeTypeEnum.EdgeType enum options in social/graph/storage/proto/id.proto. See event.pb (defined in production/config/cdd/socialgraph/mixer_config/prod/node_type_config) for all valid edge types associated with event. Currently required.





Additional signals when the source is ATV's allow list.
*   preReleaseMode (type: boolean(), default: nil) - Whether the app is in the pre-release stage and only available for testing.
*   unknownAppDeviceCompatibility (type: boolean(), default: nil) - Whether app compatibility is unknown. This field is needed for apps like apple tv that have different package names on different devices. Play Gateway Service (PGS) lookup is needed to validate that the app is available on the user's device. go/app-fulfillment-quality

Information related to delegated group that this contact belongs to.

Decoder configuration for Dolby Vision encoded by any codec. Dolby Vision defines a separate profile & level hierarchy regardless of the base codec. See Dolby Vision profiles, levels and compatibility: https://dolby.my.salesforce.com/sfc/p/#700000009YuG/a/4u000000l6G4/4R18riPaaW3gxpVx7XwyQLdEITLFjB.w. Si0LoQR5j8 Dolby Vision DASH streaming: https://professional.dolby.com/siteassets/content-creation/dolby-vision-for-content-creators/dolbyvisioninmpegdashspecification_v2_0_public_20190107.pdf HTTP Live Streaming: https://professional.dolby.com/siteassets/content-creation/dolby-vision-for-content-creators/dolby-vision-streams-within-the-http-live-streaming-format-v2.0-13-november-2018.pdf Dolby Vision bitstreams: https://professional.dolby.com/siteassets/pdfs/dolbyvisionstreamsinisobmffspecification-v2.1.2.pdf
*   blPresentFlag (type: boolean(), default: nil) - If a track contains the base layer substream.
*   dvBlSignalCompatibilityId (type: integer(), default: nil) - Whether the stream is compatible with other sets of standard.
*   dvVersionMajor (type: integer(), default: nil) - Specifies the major version number of the Dolby Vision specification that the stream complies with.
*   dvVersionMinor (type: integer(), default: nil) - Specifies the minor version number of the Dolby Vision specification that the stream complies with.
*   elPresentFlag (type: boolean(), default: nil) - If a track contains the enhancement layer substream.
*   rpuPresentFlag (type: boolean(), default: nil) - If a track contains the reference picture unit substream.

Data size information, consists of a numeric value and a unit. Next ID: 3
*   size (type: float(), default: nil) - Data size value, in the provided size unit







Stores coordinates corresponding to the dimensions of the box surrounding the region of interest. Coordinates may be normalized or absolute depending on the implementation and signal corresponding to this field.
*   areaFraction (type: number(), default: nil) - The area of the region as a fraction of the image. The value is in the range (0, 1).




Only one of timestamp_msec or frame_identifier should be set. timestamp_msec is the old identifier for frames, and is still used on thumbnail frames. frame_identifier should be used on other kinds of frames (e.g. preview frame zero).
*   timestampMsec (type: integer(), default: nil) - Timestamp (in msec) of the frame from the original video DEPRECATED: Use the timestamp_ms field in frame_identifier instead.

Metadata that may be populated if this GFV was transformed into fixed-point from a floating-point GFV.
*   squaredL2Norm (type: number(), default: nil) - The squared L2 norm of the original (pre-fixed-point transformation) GFV. Used for computing squared L2 distance.

Necessary information of lightweight token pattern with entity retrieval to pass to downstream clients. For example: FpTokenRange: normalized_text: "zurichben" language: Hungarian retrieved_entity: /m/08966 (with name "zurich") will get: MatchedLightweightToken: LightweightTokenType: "LOCATIVE" begin_offset: 6 end_offset: 9 pattern_id: 8141703461898598811 source_entity_index: 0 FpTokenRange: normalized_text: "egyesult allamokott" language: Hungarian retrieved_entity: /m/09c7w0 (with name "egyesult allamok") will get: MatchedLightweightToken: LightweightTokenType: "LOCATIVE" begin_offset: 16 end_offset: 19 pattern_id: 10449962977910715124 source_entity_index: 0 Note that begin_offset and end_offset marks the input byte range of the matched input text. For example, if the input text is [tannlegas] in Norwegian, this matches with the rewrite rule "e:as" to transform "tannlegas" to "tannlege". The matched byte range is [7, 9) on "as", therefore begin_offset = 7 and end_offset = 9. This must not be confused with the rewritten range [7, 8) on "e". Also, keep in mind these are byte offsets, not codepoints.
*   additionalBeginOffset (type: integer(), default: nil) - The byte offset of the beging of the additional lightweight token match. e.g. the prefix pattern of the circumfix.
*   additionalEndOffset (type: integer(), default: nil) - The byte offset of the end of the additional lightweight token match. e.g. the suffix pattern of the circumfix.
*   beginOffset (type: integer(), default: nil) - The byte offset of the begin of the lightweight token match within each range. The default value of -1 (std::string::npos) means that there's no affix or adposition detected.
*   endOffset (type: integer(), default: nil) - The byte offset of the end of the lightweight token match within each range. The default value of 0 means that there's no affix or adposition detected.
*   patternId (type: String.t, default: nil) - Matched pattern Id which will be used to retrieve back pattern features. Pattern id is only populated for Enricher model.
*   sourceEntityIndex (type: integer(), default: nil) - The index of the source entity in the resulting WebrefEntities or WebrefEntitiesWrapper, to which the lightweight token rule is applied. This field is only populated at the end of Qref scorer when we are sure which source entity should output.
*   type (type: String.t, default: nil) - The type of the lightweight token match, which provides the semantic information.


Represents a subpart of the anchor data of the docjoins, but is much smaller. When we build this SimplifiedAnchor from the anchor data of the docjoins, by specifying the option separate_onsite_anchors to SimplifiedAnchorsBuilder, we can also separate the onsite anchors from the other (offdomain) anchors. So onsite anchors and offdomain anchors will have their own count, score, normalized score, and total volume (.._offdomain and .._onsite fields). For example, if there are 10 onsite anchors and 20 offdomain anchors for the anchor text "mountain view", then the count_from_onsite is 10, and the count_from_offdomain is 20 when we separate onsite anchors out. Otherwise (if we don't separate onsite anchors), the count is 30 (10 + 20) and we don't have values in the .._offdomain and .._onsite fields.
*   anchorIndices (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnchorIndices.t, default: nil) - The set of (equivalent from WebRef point of view) anchors used to produce this segment.
*   anchorText (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLocalizedString.t, default: nil) - The anchor text. Note that the normalized text is not populated.
*   count (type: String.t, default: nil) - The number of times we see this anchor text.
*   normalizedScore (type: number(), default: nil) - The normalized score, which is computed from the score and the total_volume.
*   score (type: number(), default: nil) - The sum/aggregate of the anchor scores that have the same text.
*   scoreFromFragment (type: number(), default: nil) - The sum/aggregate of the anchor scores that direct to a fragment and have the same text.
*   scoreFromRedirect (type: number(), default: nil) - The sum/aggregate of the anchor scores that direct to a different wiki title and have the same text. NOTE: url direct to a fragment score is not included in this value.
*   totalVolume (type: number(), default: nil) - The total score volume used for normalization.

A metro feature, keyed by NavBoost feature id V2. This can be a metro id, a boost, or extended in the future to add probabilities or weights.
*   enclosingProvinceGeotoken (type: integer(), default: nil) - The enclosing_province_geotoken is a 32 bit fingerprint of the state encosing the (metro) id. MetroId's can span multiple states. Enclosing geotoken is filled in with the state name for disambiguation. ProvinceGeotoken field is different as it indicates an "interest". Format: 32 bit fingerprint(statecountry).
*   id (type: integer(), default: nil) - A 32 bit navboost v2 feature id encoding (country, language, metro). NavBoosterUtils class (google3/quality/navboost/nav_booster_utils.h) provides functions to decode this feature.
*   navboost (type: number(), default: nil) - This is the multiplier to apply to the result for this locale & query. NOTE: This is for serving purposes only and should not be populated in the index.

A document contains the raw text contents of the document as well as an analysis. The document can be split into tokens which can contain information about POS tags and dependency relations. The document can also contain entities and mentions of these entities in the document. Next available id: 36
*   constituencyRoot (type: list(integer()), default: nil) - The root node of the constituency tree for each sentence. If non-empty, the list of roots will be aligned with the sentences in the document. Note that some sentences may not have been parsed for various reasons; these sentences will be annotated with placeholder "stub parses". For details, see //nlp/saft/components/constituents/util/stub-parse.h.
*   constituencyNode (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftConstituencyNode.t), default: nil) - Constituency parse tree nodes for the sentences in this document.
*   annotatedPhrase (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftAnnotatedPhrase.t), default: nil) - Annotated phrases in the document that are not semantically well-defined mentions of entities.
*   entityLabel (type: list(String.t), default: nil) - Entity labels used in this document. This field is used to define labels for the Entity::entity_type_probability field, which contains corresponding probabilities. WARNING: This field is deprecated. go/saft-replace-deprecated-entity-type
*   subsection (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftDocument.t), default: nil) - Sub-sections for document for dividing a document into volumes, parts, chapters, sections, etc.
*   language (type: integer(), default: nil) - Document language (default is English). This field's value maps cleanly to the i18n.languages.Language proto enum (i18n::languages::Language in C++).
*   golden (type: boolean(), default: nil) - Flag for indicating that the document is a gold-standard document. This can be used for putting additional weight on human-labeled documents in contrast to automatically labeled annotations.
*   lastSignificantUpdate (type: String.t, default: nil) - Last significant update of the page content, in the same format as the contentage field, and also derived from ContentAge.last_significant_update in quality/historical/shingle/signals/contentage.proto.
*   contentage (type: String.t, default: nil) - Age of the content of the document. For details, see: quality/historical/shingle/signals/contentage.proto The format has been translated to a canonical timestamp (seconds since epoch).
*   labeledSpans (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.NlpSaftLabeledSpans.t}, default: nil) - Generic labeled spans (produced by the span labeling framework, go/saft-span-labeling). The map key identifies spans of the same type. By convention, it should be of the form "team_name/span_type_name".
*   trace (type: boolean(), default: nil) - Whether to enable component tracing during analysis of this document. See http://go/saft-tracing for details.
*   contentType (type: integer(), default: nil) - Optional document content_type (from webutil/http/content-type.proto). Used for setting the content_type when converting the SAFT Document to a CompositeDoc. Will be inferred if not given here.
*   text (type: String.t, default: nil) - Raw text contents of document. (In docjoin attachments from the SAFT goldmine annotator this field will be empty.)
*   privacySensitive (type: boolean(), default: nil) - True if this document contains privacy sensitive data. When the document is transferred in RPC calls the RPC should use SSL_PRIVACY_AND_INTEGRITY security level.
*   rpcError (type: boolean(), default: nil) - True if some RPC which touched this document had an error.
*   syntacticDate (type: String.t, default: nil) - Document's syntactic date (e.g. date explicitly mentioned in the URL of the document or in the document title). It is stored as the number of seconds since epoch. See quality/timebased/syntacticdate/proto/syntactic-date.proto
*   relation (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelation.t), default: nil) - Relations between entities in the document.
*   focusEntity (type: integer(), default: nil) - Focus entity. For lexicon articles, like Wikipedia pages, a document is often about a certain entity. This is the local entity id of the focus entity for the document.
*   semanticNode (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftSemanticNode.t), default: nil) - The semantic nodes for the document represent arbitrary types of higher-level abstractions beyond entity mention coreference and binary relations between entities. These may include: n-ary relations, semantic frames or events. The semantic nodes for a document are the nodes in a directed acyclic graph, with an adjacency list representation.
*   measure (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftMeasure.t), default: nil) - Measures in the documents. This covers both time expressions as well as physical quantities.
*   hyperlink (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftHyperlink.t), default: nil) - The hyperlinks in the document. Multiple hyperlinks are sorted in left-to-right order.
*   bylineDate (type: String.t, default: nil) - Document's byline date, if available: this is the date that will be shown in the snippets in web search results. It is stored as the number of seconds since epoch. See segindexer/compositedoc.proto
*   contentFirstseen (type: String.t, default: nil) - Stores minimum of first time google successfully crawled a document, or indexed the document with contents (i.e, not roboted). It is stored as the number of seconds since epoch. See quality/historical/signals/firstseen/firstseen.proto
*   httpHeaders (type: String.t, default: nil) - HTTP header for document. If the HTTP headers field is set it should be the complete header including the HTTP status line and the trailing cr/nl. HTTP headers are not required to be valid UTF-8. Per the HTTP/1.1 Syntax (RFC7230) standard, non-ASCII octets should be treated as opaque data.

Holds information about a detected person in the image.

See go/wrs-render-quality for how to evaluate the results. Next id: 24
*   chromiumTrace (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoChromiumTrace.t, default: nil) - Contains chromium trace generated during page rendering. This is present if a chromium_trace_config was provided in the request.
*   cookie (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie.t), default: nil) - Contents of the browser's cookie jar. (if cookies_enabled was set to true in the RenderRequest).
*   document (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t, default: nil) - Contains the DOM tree, render tree and more. For details consult document.proto.
*   exceptionDetail (type: String.t, default: nil) - Provides extra debugging details when certain exception bits are set.
*   exceptions (type: String.t, default: nil) - Exceptions (possibly serious conditions) that occurred during this rendering. 0 means none. Bitfield encoding. See the RenderingException enum above for an explanation.
*   extensionResult (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderExtensionResult.t, default: nil) - Render extension results (if devtools_script was provided with the request.)
*   finalClientUrl (type: String.t, default: nil) - This field contains the final url as would appear in the web browser's address bar. Note that JavaScript can modify the contents of the location bar so this URL may not appear on the list of referenced resources. If we fail to follow a redirect this field will contain the URL that we failed to redirect to, not the last one we successfully loaded.
*   image (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.t), default: nil) - Contains the viewport images rendered by webkit (if generate_image was set to true in the RenderRequest). Will also contain the print-mode images (if generate_print_mode_images was set to true).
*   pdf (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPdf.t, default: nil) - Contains the PDF document (if generate_pdf was set to true in the RenderRequest)
*   referencedResourceContent (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoResource.t), default: nil) - Contents for all the urls fetched by the render server. This field is present only if generate_referenced_resource_content was set to true in the RenderRequest.
*   renderStats (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderStats.t, default: nil) - Time to render the url, total size of a document, number of referenced images, etc will be part of RenderStats.
*   title (type: String.t, default: nil) - Contains the page title produced by webkit, in the UTF-8 encoding.

This message is used to store information about Inline Playback in the VideoWebAttachment portion of the websearch index. LINT. IfChange
*   expirationTimestampSec (type: String.t, default: nil) - Timestamp (measured in seconds since epoch) when a video may not be used for inline playback in the interest feed.
*   googleAnalyticsId (type: String.t, default: nil) - Publisher's Google Analytics Id to which we can report view metrics.
*   playbackCountryBlacklist (type: list(String.t), default: nil) - All two-letter codes for countries where this video may NOT be played.
*   playbackCountryWhitelist (type: list(String.t), default: nil) - All two-letter codes for countries where this video may be played. If empty, then all countries not on the blacklist are allowed for playback.
*   transcodeItags (type: list(integer()), default: nil) - Set of transcodes which are available for the video.
*   vastTag (type: String.t, default: nil) - VAST tag for ads to be played along with this video. Currently, we only support VAST tags from Doubleclick and FreeWheel.
*   videoId (type: String.t, default: nil) - Identifier video is known by in the video infrastructure. The format given here is the YoutubeId format (base-64) used in Venom; for Viper/Bandaid/ StreamingURLService, convert to ContentIdHex.
*   videoUrlOnExternalCdn (type: String.t, default: nil) - Set if the video is hosted on an external CDN, in which case it is not to be transcoded and hosted at Google for the Interest Feed.




Collects signals from one query and one candidate. Next available tag: 9
*   isMatchlessResultContext (type: boolean(), default: nil) - Whether the entity is purely from strong result entities, and is matchless in query annotation.
*   mid (type: String.t, default: nil) - Mid of the candidate entity or empty string for the full world.
*   name (type: String.t, default: nil) - Debug name of the entity (not usually populated).

Used when a field is accessible to a person. NOTE: ACLs to a circle or to a non-self person are no longer supported, so this can only be applied to the requester self.
*   displayName (type: String.t, default: nil) - DEPRECATED. This is not different than reading from person.name for a self-read; ACLs to a circle or to a non-self person are no longer supported. Equivalent to Name.display_name for the person_id profile. Included when the profile Name is ACLed to the requester and FieldAclOption.FULL_ACL_WITH_DETAILS is requested. This field is read-only and ignored on update.
*   photoUrl (type: String.t, default: nil) - DEPRECATED. This is not different than reading from person.photo for a self-read; ACLs to a circle or to a non-self person are no longer supported. Equivalent to Photo.url for the person_id profile. Included when the profile Photo is ACLed to the requester and FieldAclOption.FULL_ACL_WITH_DETAILS is requested. This field is read-only and ignored on update.

An expression parsed from a user query that describes a product or set of products.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field should not be used by clients of the grammar. It is intended to be used internally in Aqua for metric and regression tests.
*   phrases (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantPhrase.t), default: nil) - Ordered list of phrases that the user used to describe a product.
*   shoppingListItemInfo (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantShoppingListItemInfo.t, default: nil) - Associated shopping list item info. Only set when the product is come from a shopping list item.

PartialRenders can be created using the extension API to store the document state and/or create an image at points before the final render.
*   cookie (type: list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie.t), default: nil) - Cookies at the time of snapshot creation.
*   currentClientUrl (type: String.t, default: nil) - Current url as would appear in the web browser's address bar at the time of snapshot creation.
*   document (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t, default: nil) - Snapshot of the document DOM + Render trees, if requested
*   image (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.t, default: nil) - Image of the render, if requested


An EntityType configures a value whose type is intended to be an entity. Entities may be specified using either the collection(s) to which they belong, or explicitly via a list of KG-ids. Both collections and ids can be specified, in which case the type will be the union of the id(s) and all mids within the collection(s). Next available tag: 10
*   collection (type: list(String.t), default: nil) - This field specifies that containing entity must be: - in any 'collection' if 'in_all_collections' is false (default) - in every 'collection' if 'in_all_collections' is true. The collection field contains strings of the form '/collection/'. If no collections are specified, this value can be filled with any entity. A collection specified as an empty string has a special meaning for Aqua induction, which is that the type includes all entities.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   excludedCollection (type: list(String.t), default: nil) - The entity that this value is filled with must not be any of these collections (denoted by a /collection/* id). This restriction does not affect parsing; it is used only to filter attributes in the extraction flow.
*   id (type: list(String.t), default: nil) - The entity that this value is filled with must be one of the following explicitly specified KG-ids.
*   identifier (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryIdentifier.t), default: nil) - The entity that this value is filled with must be of the explicit type and/or contain the explicitly specified id. This field can not be used for kg mids, which should directly use the id field above.
*   includeGeolocationData (type: boolean(), default: nil) - If this is set to true for a slot and the entity is a location, the latitude and longitude will be available in variables $SlotName_Latitude and $SlotName_Longitude, respectively. The latitude and longitude data comes from KG.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

This message is embedded within a FeatureProto, and represents a geographic or logical relationship of that feature to some other feature. Note that some relation types are there purely for the purpose of grouping together other relation types. They are noted as ABSTRACT in comments. Other relation types are no longer supported / in use. They are noted as DEPRECATED in comments (and marked with the standard deprecated option, too). Other relation types are reserved for future use or just not intended for use at all, for various internal reasons. They are noted as RESERVED in comments. WARNING: Updates to this proto within a FeatureProto's related_feature field handled by standalone pipelines and are NOT atomic with regard to updates to the features being referenced; we do not guarantee that a given MapFacts snapshot will be consistent between this field and the related features.
*   otherFeatureCountryCode (type: String.t, default: nil) - If and only if the other feature is of TYPE_COUNTRY, the 2-letter country code. This is the FLAG_COUNTRY_CODE_2 name of the country component.
*   otherFeatureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The feature ID of the feature to which we're relating. WARNING: the related feature does not necessarily have a bound that encloses this feature, so in a bucketing MapReduce, you may not be able to follow all relationships. Relations that use strong references are annotated above but you can also refer to IsRelationStrong() in geostore/base/public/relation.h.
*   otherFeatureTerritorialAdministrator (type: String.t, default: nil) - If and only if the other feature is of TYPE_DISPUTED_AREA, the territorial administrator found in its GeopoliticalAttachmentProto.administered_by field, if any. Since this string is copied exactly, it may be a 2-letter country code or another type of descriptive string.
*   otherFeatureType (type: integer(), default: nil) - The type of the feature to which we're relating.
*   overlapFraction (type: number(), default: nil) -  DEPRECATED  If relation is exactly RELATION_OVERLAPS but not any of its subcategories, overlap_fraction contains an estimate of the fraction of the geometry of this feature that intersects with the other feature, ranging from 0.0 to 1.0. Note that this is a rough estimate based on cell coverings, and may not be very accurate. In particular, values of 0.0 and 1.0 are possible, even though in principle they should not be.
*   relation (type: String.t, default: nil) - The relationship of the feature that contains this RelationProto to the feature other_feature_id. Note the relation_is_reversed field below. Some relations imply weak references, other strong ones. Strong references are annotated above but you can also refer to IsRelationStrong() in geostore/base/public/relation.h.
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a relation. Never set in MapFacts.


The following positions are the byte offset in doc body, which is consistent with the date annotations. (See google3/repository/annotations/proto/annotations.proto) These are given when we want to use the date as a byline date, so the snippet generating code will know the positions.

A general non-self-intersecting spherical polygon, consisting of one or more loops defining multiple disconnected regions possibly with holes. All loops should be oriented CCW around the region they define. This applies to the exterior loop(s) as well as any holes. Within MapFacts (and underlying infrastructure) the data fields may be replaced by a single shape_id stored in internal_feature. Any such PolygonProtos shouldn't be expected to work with public functions in //geostore/base/public/polygon.h.
*   baseMeters (type: number(), default: nil) - The polygon loops above are basically flat: each point has a latitude and a longitude but no altitude. We don't want to build real 3D models here, but we do want to be able to generate 2.5D models. A 2.5D model is built by translating the flat polygon upward some distance (base) then extruding it upward some additional distance (height). The elevation of the bottom of the extruded polygon (above ground level).
*   cellId (type: String.t, default: nil) -  DEPRECATED  This is part of a splitting strategy for large polygons, which was never fully launched and we decided not to pursue. For features with very complex polygonal geometry, we break up the polygon into pieces that align with S2 cells at various levels. We do this for performance reasons as some geometry operations have quadratic complexity with regards to the total number of vertices. In these cases, we store the S2 cell ID corresponding to the piece of the overall polygon that is described by this specific PolygonProto message. Each polygon piece is expected to be fully contained by the S2 cell corresponding to this cell ID. However, note that the S2 cell ID is not required to correspond to the smallest S2 cell that fully contains the polygon (and often won't be). In addition, polygon pieces are required to not have any overlap (which translates to having entirely disjoint S2 cell IDs, i.e. one can not be parent (or grand parent, etc.) of another).
*   encoded (type: String.t, default: nil) - Encoding of the polygon using S2Polygon::Encode()'s compressed representation.
*   heightMeters (type: number(), default: nil) - The distance from the bottom of the extruded polygon to the top.
*   loop (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostorePolyLineProto.t), default: nil) -  DEPRECATED  We have switched to using exclusively the encoded form in the wire format to and from MapFacts, so this field should never be populated there. See go/encoded-polygons for more info. "Classic" polygon representation, defined by one or more loops. The last vertex of each polyline is implicitly connected to the first vertex. All loops should be specified in CCW order.
*   temporaryData (type: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t, default: nil) - A place for clients to attach arbitrary data to a polygon. Never set in MapFacts.
*   unsuitableForDisplay (type: boolean(), default: nil) - Some polygons are known to be rough proxies for a feature's "real" polygonal representation. Such polygons are generally unsuitable for display. Rendering clients should not show these in most cases. Polygons unsuitable for display do have other uses, such as user location or containment analysis, or as an input to learning algorithms. This is an orthogonal concept to FeatureProto.synthetic_geometry, which only pertains to the method by which a polygon was created, rather than its fidelity to ground truth. For features that have multiple polygons, this bit should be consistently set to the same value on all polygons.

Proto-representation of the Crawler-ID in Web-Search (Alexandria-Scope). The string-representation (covered in //indexing/crawler_id/scope/alexandria/crawler_id.h) and the proto-representation are identical in meaning. For more information in regard to the crawler_id, please look at //depot/google3/indexing/crawler_id Used within the following components: - WebMirror: To understand the parsed crawler-ID and apply attributes within their own tables. - Serving : to identify the crawler-ID within the GenericSearchResponse, which implies being stored in the MDU and returned by ascorer to Superroot. - QSessions: To store the crawler-ID in all logged events for analysis. The default values represent the 'empty string' crawler-ID for the Alexandria-scope.
*   country (type: String.t, default: nil) - The country to crawl the country from, defaults to the default non-specified crawling node (which is interpreted by most web-servers as USA). When specified, the crawling will fetch the document from a node in that country instead.
*   deviceType (type: String.t, default: nil) - The device type, which maps into the useragent to be set when initiating the fetch-request, e.g. desktop-googlebot vs. smartphone-googlebot.
*   indexGrowthExptType (type: String.t, default: nil) - Specifies whether the document is a duplicated document from the index growth experiment, detailed at go/indexsize_exp, defaults to not in any experiment.
*   language (type: String.t, default: nil) - The language being set by the crawler. Defaults to UNKNOWN_LANGUAGE which indicates to not apply an accept-language header on the FetchRequest. When a language is specified, on crawling this language is converted into an accept-language header (e.g. GERMAN -> "Accept-language: de"). Script variations, e.g. ZH-HANS vs. ZH-HANT, are handled as different enum values (e.g. CHINESE vs. CHINESE_T).
*   languageCode (type: String.t, default: nil) - Language-code used for identifying the locale of the document. 'language' and 'country' above are used for web-based documents, representing the detected language of the document and the country it was crawled from. The language code here, however, rather represents an artifical language_code applied to manually translated webpages (e.g. feeds), for instance for the pidgin-usecase. They are limited to the set of III-codes being supported by the client, yet are beyond the enum in 'language', e.g. to support variants of English across different countries.


For CAPTION or FOOTNOTE_POINTER or TOC_ENTRY or INDEX_ENTRY or CONTINUATION labels:
*   LogicalEntity (type: GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntity.t, default: nil) - The CAPTION label typically targets the previous or the next Block. The FOOTNOTE_POINTER label typically targets a paragraph in a FOOTNOTE Block. TOC_ENTRY and INDEX_ENTRY labels are links that point to a different page within the volume. CONTINUATION labels also are links that point to a different page within the volume, or maybe even a particular block or paragraph.

Scale relative to the user's avatar. x and y range from 0 (exclusive) to 1 (inclusive).


This class holds information about a single access point. An access point establishes a relationship between a feature (like a POI or building) and some other feature. For example, consider a TYPE_LOCALITY feature like Seattle. An access point might be the TYPE_AIRPORT feature for Seattle-Tacoma International Airport. The airport feature defines the access point to gain airplane-based access to Seattle. A feature like Seattle will typically have multiple access points. You can get to Seattle using airplanes, various forms of public transit, or by driving a car. Thus Seattle would have multiple access points. You may be able to get to Seattle by flying into SeaTac, or you might be able to fly into Boeing Field, or Paine Field in Everett. You could drive in from the North/South using I-5, or you could drive in from the East using I-90. Many access points are from the road network. Thus the access point for some building at 123 Main Street would likely be a segment that defines the 100-200 block of "Main Street". A feature at the corner of "Hollywood" and "Vine" streets might have access points from both named streets. Access points are an optional field. Data editors may ignore them when creating features or editing other fields. In these cases, other quality teams will synthesize and update them. Several fields are also optional, as they are derivable from other fields. Access points to non-TYPE_SEGMENT features should always have the following fields set: - feature_type - feature_id - point Location and reference fields: BASIC vs DERIVABLE Access points to TYPE_SEGMENT features must have all the following BASIC fields: - feature_type (of the segment, e.g. TYPE_ROAD or TYPE_VIRTUAL_SEGMENT) - point_off_segment (or point; see "fuzzy point" note below) - unsuitable_travel_mode (may be empty) - level (indoor access points only) The following are DERIVABLE fields, which should only be added if the supplier is confident about their accuracy: - feature_id - point_on_segment - segment_position Editing clients are encouraged to set all fields, but they may set only the BASIC fields, in which case quality teams may use the BASIC fields to snap to an appropriate segment and derive the remaining fields. Example: The segment is split, so that the portion that the access point is on has a new feature ID. Quality teams notice that the point_on_segment is no longer on the segment with feature_id, finds the new nearest segment based on feature_type and existing point_on_segment, and re-derives a new feature_id, point_on_segment, and segment_position, keeping other fields consistent. Fuzzy point special case If the editor does not have side-of-road information for access points or is otherwise unsure of the precise placement of the access point, it may supply the point field (and not point_off_segment) as basic data instead, in which case quality teams may generate the point_off_segment. Identity Access points are considered semantically equivalent if they have the same geometry, including derived fields, and the same references to other features (feature_id, level_feature_id). For the exact definition, see cs/symbol:geostore::AreAccessPointsEquivalent. Field definitions
*   featureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The ID of the feature that defines the access point. The bounding box of the feature is expanded to include the bounding box of the feature with the access point in accordance with the standard practice for bucketing map/reduce operations. See the wiki page at http://wiki/Main/OysterBucketingMapReduce for more information. For access points to TYPE_SEGMENT features, this may be re-derived if necessary by looking up the nearest segment to existing geometry.
*   featureType (type: integer(), default: nil) - The type of the feature. Required, to allow handling the access point differently based on feature type. For access points to non-TYPE_SEGMENT features, this cached type also makes things easier for clients that aren't running a bucketing map-reduce. For access points to TYPE_SEGMENT features, this is used to find to find the nearest segment of the given type.
*   levelFeatureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - For indoor access points, this should be set to the level that the access point is on. The feature_id should point to the indoor segment, but when it is missing or invalid, and we need to derive it from geometry, only segments on this level will be considered. For non-indoor access points, level should remain unset, and when we derive feature_id from geometry, only segments not on any level (non-indoor segments) will be considered. The bounding box of the level feature is expanded to include the bounding box of the feature with the access point in accordance with the standard practice for bucketing map/reduce operations. See the wiki page at http://wiki/Main/OysterBucketingMapReduce for more information. (Though in general the feature should reside on the level already anyway..)
*   point (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - For access points to non-TYPE_SEGMENT features, the location of the access point. For access points to TYPE_SEGMENT features, this can be supplied as a fuzzy access point that is not guaranteed to be on the correct side of road. It should not be used by end clients in case of TYPE_SEGMENT access points.
*   pointOffSegment (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - If the access point is defined by a TYPE_SEGMENT feature, this is the location of the access point displaced slightly to the correct side of the segment. This offset is in a direction perpendicular to the direction of travel along the segment. The actual offset distance is unspecified. It would typically be relatively small (approximately 1 meter). You can subtract the "off segment" point from the "on segment" point to get a vector of unknown length pointing from "on segment" point to the "off segment" point. You can then scale that vector to whatever length you want. Note that extending this displacement vector a large distance (10s of meters) may result in a new point that is in the middle of some other feature (park, street, intersection). This is the preferred basic geometry field for incoming data from editing clients and importers, if side-of-road is well-established.
*   pointOnSegment (type: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t, default: nil) - If the access point is defined by a TYPE_SEGMENT feature, this is the point on the centerline of the segment that is closest to the actual access point. May be re-derived if necessary to maintain precise placement on segment.
*   segmentPosition (type: number(), default: nil) - If the access point is defined by a TYPE_SEGMENT feature, this is the location of the access point expressed as a fractional distance along the segment. The value runs from 0 to 1 inclusive. May be re-derived if necessary to maintain precise placement on segment.
*   unsuitableTravelMode (type: list(String.t), default: nil) - This list represents the travel modes for which this access-point should be avoided. If this list is empty, the access-point is suitable for any travel mode. If all access points are unsuitable for the current travel mode, client should revert to other heuristics (e.g. feature center). This is only used for access points to TYPE_SEGMENT features; access points to non-TYPE_SEGMENT features, e.g. TYPE_ESTABLISHMENT_POI features with gcid:transit_station GConcepts are just identified by feature_type and feature_id.

Data about the behavior of the video across the pages it is embedded in.

Pattern for a YEARLY recurrence. A YEARLY recurrence is specified using a monthly pattern and a set of months the pattern applies to. Some examples: "Every January 16" : monthly_pattern { month_day = 16; } year_month = JANUARY; "Last day of every April and August" : monthly_pattern { last_day = true; } year_month = APRIL, AUGUST
*   yearMonth (type: list(String.t), default: nil) - The months of the year to apply the pattern.

This message describes display attributes. The attributes which are applicable to OFE not indexing (mustang), should be added in this proto.
*   ccLicense (type: integer(), default: nil) - The creative commons license specified, Please refer ocean.CreativeCommonsLicenseType.Type for enum values Not exposed in Partner Frontend anymore.


DOMTreeNode Defines a DOM Node. An instance can contain references to one or more children (of type DOMTreeNode) and one or more attributes. The DOMTreeNode also encapsulates rendering information (if applicable) in the form of references to one or more RenderTreeNodes. Next tag available: 16
*   childDomTreeNodeIndex (type: list(integer()), default: nil) - An index per child. Indexes can be used to fetch the DOMTreeNodes from the list maintained by the Document.
*   currentSourceUrl (type: String.t, default: nil) - For elements, the actual url that was used to fetch the image. Note that this field is set only if it is different from the 'src' attribute value.
*   document (type: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t, default: nil) - If the node represents an iframe or a frame then document will be set.
*   htmlTagType (type: integer(), default: nil) - Identifies the HTML tag type (IMG, P, DIV, etc). Applicable only for DOM nodes that are representative of html elements. For a list of possible types refer HtmlTagEnum defined in webutil/html/htmltagenum.h.
*   isClickable (type: boolean(), default: nil) - Whether this DOM node responds to mouse clicks. This includes e.g. nodes that have had click event listeners attached via JavaScript as well as e.g. anchor tags that naturally navigate when clicked.
*   name (type: String.t, default: nil) - Name of the node (document, text, comment, div, etc).
*   originUrl (type: String.t, default: nil) - URL of the script, if any, which created or populated this node.
*   referencedResourceIndex (type: list(integer()), default: nil) - List of referenced resource indexes for any resources that this DOM tree node references.
*   renderTreeNodeIndex (type: list(integer()), default: nil) - RenderTreeNode can be looked up from the list of RenderTreeNodes stored in the Document using render_tree_node_index. RenderTreeNode gives rendering information (bounding box, style that was applied, etc). Note: 1. If a DOMTreeNode does not have a RenderTreeNode then it is safe to assume that the DOMTreeNode has no effect on the rendering. DOMTreeNodes for a ,
*   value (type: String.t, default: nil) - The node value is applicable for TEXT_NODEs, DOCUMENT_TYPE_NODEs, COMMENT_NODEs, and user input elements such as , and <option>. For DOCUMENT_TYPE_NODEs, the value contains the publicId and SystemId. For input elements, the value reflects the current value in the element at the time the snapshot was taken.


In simple cases, each NLU slot will contain one or multiple possible values. But in the case of a composite entity - slots can have a complex tree structure. Each slot can represent a List parameter. List parameters are only allowed at the top level, i.e. lists can't ne nested in maps. Next Id: 9 LINT. IfChange
*   entityId (type: String.t, default: nil) - ID of the entity of this slot.
*   numBytes (type: integer(), default: nil) - Number of bytes of this slot in resolved query.
*   original (type: String.t, default: nil) - Part of input text, matched by that slot. In the case of composite slots, each slot should have its own original.
*   parameterName (type: String.t, default: nil) - Name of parameter of this slot.
*   slotList (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingProtoActionsOnGoogleSlotList.t, default: nil) - Represents a "list parameter". Each parameter may be declared as a list and have multiple slot values, referenced by a single alias. Each slot value in a list may contain multiple possible values. For example: aqua return 3 dates if the year is not specified in a query - one for the current year, one for the past year, and one for the following year. If user defines a list parameter with type @sys.date, and the query contains multiple dates - we should return a list of possible values for each date from the query, i.e. it will be a list of list of dates.
*   slotMap (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingProtoActionsOnGoogleSlotMap.t, default: nil) - Represents a structured value. Used in composite entities. Composite entities can have arbitrary structure.
*   startByte (type: integer(), default: nil) - Start byte position of this slot in resolved query.
*   value (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingProtoActionsOnGoogleSlotValue.t, default: nil) - One or more possible values. This field does not represent a list parameter.

Meta data useful to annotation Label and Feature with extra information.

PuntInfoLog is used to log why devices get filtered out during media content playability check. It contains media excuse, provider mid and also index of devices filtered by them.
*   deviceIndex (type: list(integer()), default: nil) - Index of devices that have the same punt info during playability check, i.e. same media_excuse and provider_mid.
*   providerMid (type: String.t, default: nil) - Provider id that the excuse belongs to. This is the KG MID of the provider, e.g., "/m/09jcvs" for Youtube.

The room in which an alarm or timer resides

Contains transcript-level data about a video whether it comes from ASR or closed captions.

Logs version of the repository_webref. LinkKindInfo proto Used to represent QRef implications
*   kcLinkName (type: String.t, default: nil) - Not set for a while.





List of individual video frames, each saved as an image file

The top forwarding dups of the canonical url. (note: it may actually include some dups that are NOT used for forwarding data but for making "info:" complete)
*   ecn (type: String.t, default: nil) - The name of the url's webmirror equivalence class.
*   purposes (type: integer(), default: nil) - The purpose(s) of the forwarding dup indicating if it is used for forwarding signal/anchors generally, or only for forwarding some specific signal (e.g. navboost), or for some other purposes (e.g., not for forwarding any data but for making "info:" complete). See indexing/dups/public/dups.h for more details.
*   repid (type: String.t, default: nil) - The webmirror repid of the forwarding dup.
*   url (type: String.t, default: nil) - The url of the forwarding dup.
*   urlencoding (type: integer(), default: nil) - The encoding of the url (see webutil/urlencoding for details).

Filter for the specific types of documents returned.
*   fileType (type: String.t, default: nil) - The type of files to return.


If there is more than one edit correction candidate, store all the candidates here. This helps a manual correction utility fire the right kind of question with the relevant options.

layout (type: integer(), default: nil) - Values 0 to 255 are reserved for current and future layouts. Value of 0 corresponds to a grid with 3 columns and 2 rows as follows: | right face | left face | up face | | down face | front face | back face |


A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.
*   y (type: integer(), default: nil) - Y coordinate (starts from the top of the image).

The protocol buffer stored in the legacyperdocdata muppet attachment for VOLT (go/volt). The data is used for ranking changes. Only CWV signals and secure signal are stored. MobileFriendliness is stored separately in the legacyperdocdata. Safe browsing and BAS/AER conditions are not used for ranking.
*   desktopCwv (type: GoogleApi.ContentWarehouse.V1.Model.IndexingMobileVoltCoreWebVitals.t, default: nil) - Desktop Core Wev Vital metrics. NOTE(yunchengz): This field will not be populated in Muppet.
*   mobileCwv (type: GoogleApi.ContentWarehouse.V1.Model.IndexingMobileVoltCoreWebVitals.t, default: nil) - Mobile Core Web Vital metrics. NOTE(yunchengz): This field will not be populated in Muppet.

PerDocData for fringe-query-prior (built into the shards for eventual consumption at Fringe classification time). Not stored in DocJoins. NEXT ID: 13
*   encodedChardXlqHoaxPrediction (type: integer(), default: nil) - An encoding of the Chard XLQ-hoax prediction in [0,1].
*   encodedChardXlqTranslatedPrediction (type: integer(), default: nil) - An encoding of the Chard XLQ prediction on translated content in [0,1].
*   encodedChardXlqYmylPrediction (type: integer(), default: nil) - An encoding of the Chard XLQ-YMYL prediction in [0,1].
*   encodedDocumentFringeVulnerability (type: integer(), default: nil) - An estimate of the vulnerability of this doc to show fringe content, based on the context around the document. Can be interpreted as a 'safe' QScore threshold to use (see go/doc-fringe-vulnerability for more info). Encoded for compactness and to restrict visibility. Please contact fringe-ranking@ to get access to quality_fringe::DocumentFringeVulnerabilityEncoding to decode this field.
*   encodedEntityPriorScore (type: integer(), default: nil) - Highest entity prior seen for document's Headline and SingleTopic entities (see go/topicality-score for definitions of entity topicalities). Represents probability that a query is fringe, given that the entity is in the result set with topicality >= Headline. Scores scaled to integers between 0 and 1000 for compactness. Scores must be interpreted through FringeQueryPriorEncoding::Decode API.
*   encodedFringePriorScore (type: integer(), default: nil) - Probability that a query is fringe, given this document is in the result set. Scores scaled to integers between 0 and 1000 for compactness. Scores must be interpreted through FringeQueryPriorEncoding::Decode API.
*   encodedFringeSitePriorScore (type: integer(), default: nil) - Probability that a query is fringe, given this document's site is in the result set. Scores scaled to integers between 0 and 1000 for compactness. Scores must be interpreted through FringeQueryPriorEncoding::Decode API.
*   encodedFringeSitePriorScoreForQfsTraining (type: integer(), default: nil) - Probability that a query is fringe, given this document's site is in the result set. Does not use signals with a dependency on the QueryFringeScore of a document. Scores scaled to integers between 0 and 1000 for compactness. Scores must be interpreted through FringeQueryPriorEncoding::Decode API. Will NOT be present if the fringe_site_prior_score_for_qfs_training is not significantly different from the site_prior_score.
*   encodedPredictedXlqScoreAndConfidence (type: integer(), default: nil) - A combined encoding of the pXLQ score in [0,1] and the confidence with which that score should be interpreted in [0,1].
*   encodedProximityScore (type: integer(), default: nil) - A score in [0, 1] representing the similarity of this doc to known fringe-vulnerable 'seeds'. See go/fringe-proximity for more information. Encoded for compactness and to restrict visibility.
*   sensitiveEntitiesIndices (type: list(integer()), default: nil) - Indices on the repository_webref::WebrefEntities::entity field of entities that represent a person or a group of people (aka sensitive entities).

Represents the case where the library successfully selects the target device. It could be one or multiple devices. Next ID: 4


Represents the properties of a mention. Next ID: 13
*   deviceId (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t, default: nil) - The unique device on which the mention occurred. For example, if the user has two Google Home devices, this indicates which of the two was used.
*   eventId (type: GoogleApi.ContentWarehouse.V1.Model.EventIdMessage.t, default: nil) - ID of the event that resulted in this entity mention. For user and system turn AEs, this is taken from the ConversationSnapshotId of the snapshot containing this mention. For client AEs, this is empty. This can be used to join back this particular mention to the specific "turn" in which this mention took place.
*   factoidScore (type: number(), default: nil) - If this mention corresponds to a WebAnswer, then this defines the score associated with that answer.
*   listEntryInfo (type: GoogleApi.ContentWarehouse.V1.Model.AttentionalEntitiesMentionPropertiesListEntryInfo.t, default: nil) - If present, this entity was mentioned as part of a larger list.
*   recency (type: String.t, default: nil) - Estimates the recency of the mention. This is internally computed at runtime on a turn-by-turn basis.
*   role (type: GoogleApi.ContentWarehouse.V1.Model.AttentionalEntitiesSemanticRoleId.t, default: nil) - The semantic role that the entity was used in.
*   salience (type: String.t, default: nil) - How salient this mention is. This field will only be set if the mention is derived from a SearchAnswerValue. See go/webresultsdata-as-aes for more details.
*   source (type: GoogleApi.ContentWarehouse.V1.Model.AttentionalEntitiesMentionPropertiesSource.t, default: nil) - Contains metadata about the source of the mention.
*   spatialProperties (type: GoogleApi.ContentWarehouse.V1.Model.AttentionalEntitiesSpatialProperties.t, default: nil) - If present, properties of visual mentions (e.g., how they are displayed to the user, visibility, etc.).
*   surfaceForm (type: GoogleApi.ContentWarehouse.V1.Model.AttentionalEntitiesSurfaceForm.t, default: nil) - Details about how this mention was presented.
*   timestamp (type: DateTime.t, default: nil) - Unix timestamp noting (approximately) when this mention occurred. We do not guarantee that the time will correspond precisely to when the user uttered/heard a response. If mentions within a single turn have different timestamps, they should accurately reflect the order in which the mentions occurred. If that order is unknown, they should all have the same timestamp.

See go/people-api-howto:names for an overview of name usage in PeopleAPI. The unstructured_name field contains a free form name value. The given_name, middle_name, family_name, etc, fields contain the structured name. For CONTACT mutates, (i.e. when Name.metadata.container is CONTACT), it is recommended for clients to set either the unstructured_name or the set of structured name fields, not both.  When only the unstructured_name is set, it is parsed to produce a best-guess set of structured name values for the given_name, family_name, etc.  When only the structured name fields are set, the various values are combined to produce an unstructured_name. * When both are set, the unstructured_name is saved as-is and the structured name fields are saved as-is. This may be confusing as they might not "match". For PROFILE mutates, (i.e. when Name.metadata.container is PROFILE), it is required for clients to use the structured name fields as the unstructured field value is ignored on write. The unstructured name fields are generated for convenience on read. For DEVICE_CONTACTS, see b/156020778.
*   displayName (type: String.t, default: nil) - Read-only. A name synthesized based on unstructured_name and the structured name fields. Example: "John Smith" If a language code is passed in the side channel using http://cs/symbol:framework.rpc.DeprecatedPropagatedLanguageCode.value or http://cs/symbol:google.rpc.context.OriginContext.accept_language and the name does not have honorific_prefix, middle_name, or honorific_suffix set, the language code will be used to format display_name. If include_account_locale is set on the MergePersonSourceOptions and a language code is not passed in the side channel. The language code from go/uls will be used as the language code for formatting display_name.
*   displayNameLastFirst (type: String.t, default: nil) - Read-only. A name synthesized based on unstructured_name and the structured name fields with the last name first. Example: "Smith, John"
*   displayNameSource (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoDisplayNameSource.t, default: nil) - Read-only. The source of the display name.
*   pronunciations (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPronunciations.t, default: nil) - This field is stored in contact annotations and merged at read-time. It is available with CONTACT_ANNOTATION container type at read time.
*   shortDisplayName (type: String.t, default: nil) - NOTE: this is currently NOT IMPLEMENTED due to changed priorities. Clients usually rely on "first name" instead, when a short name is needed. Read-only. A possibly shorter version of the user's name. - The purpose of this field is to address the needs of UIs where a full display name might be too large to fit. Instead of relying on first_name, which might not be present, short_display_name is preferred. - This is only available for PROFILE and DOMAIN_PROFILE container types. - About the actual content in this field: will be the first name when it's visible to the requester, or the same as display_name, otherwise. A sample scenario where the first name may not be visible is when the limited profile is returned. For more info, see: http://shortn/_9iV7TJ33la
*   unstructuredName (type: String.t, default: nil) - The free form name value. For contact mutates it is recommended for clients to set either the unstructured_name or the set of structured name fields, not both.

Metadata about the span when the anchor source is description span.
*   contextTokenCount (type: integer(), default: nil) - The number of tokens in the context (sentence) where the description span is extracted from.
*   dolphinScores (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinScores.t, default: nil) - The inference result from the Dolphin span model if the anchor's source is description span.
*   spanDolphinScoreStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - A summary of the Dolphin span token scores for the selected candidate. Currently, dolphin_scores in DescriptionSpanInfo would only contain a single span candidate so this field is essentially the copy of the score_stats for that span candidate.
*   spanTokenCount (type: integer(), default: nil) - The number of tokens in the description span. The description span is formed from non-contiguous segment spans of a sentence (context), where each segment span's score satifsies the min span thresholds.




Id of a single source from the merged person.
*   container (type: String.t, default: nil) - The type of source. To be deprecated infavor of container_type
*   containerType (type: String.t, default: nil) - The type of the source.
*   deleted (type: boolean(), default: nil) - In sync responses, indicates whether the identity source has been deleted. Not applicable to GOOGLE_GROUP.
*   id (type: String.t, default: nil) - The encoded id of the data source. This field correlates to PersonFieldMetadata.encoded_container_id. The possible values of this id field are as follows based on the value of the container_type field: CONTACT: Hex-encoded contact id. PROFILE: DOMAIN_PROFILE: GOOGLE_GROUP: NAMED_CHAT_ROOM: Focus-obfuscated Gaia ID. DOMAIN_CONTACT: Synthetic-contact id representing the domain shared contact. PLACE: Encoded PlaceId (go/javagoog/maps/api/places/util/PlaceIdEncoder.java) RAW_DEVICE_CONTACT: Pair of device_id and raw_contact_id, encoded as base64 serialized social.graph.peopleapi.proto.internal.RawDeviceContactId proto. CONTACT_ANNOTATION: Pair of annotation_id and event_timestamp, encoded as base64 serialized social.graph.peopleapi.proto.internal.ContactAnnotationId proto. -- DEPRECATED container types -- If the container is CIRCLE, then the id is going to be the synthetic- contact id representing the email-only circle member or gaia circle member for which the requester does not have a contact for.
*   lastUpdated (type: DateTime.t, default: nil) - Last update timestamp of this source. NOTE: Only populated for CONTACT container type in Java PeopleAPI. Populated for CONTACT, PROFILE, DOMAIN_PROFILE in Sharpen implementation. NOTE: Not populated for GOOGLE_GROUP.
*   lastUpdatedMicros (type: String.t, default: nil) - DEPRECATED Please use last_updated field instead. Last update timestamp of this source in microseconds. NOTE: Only populated for CONTACT container type.

LINT. IfChange Some document segments may consist of multiple sub-segments (e.g. a document might have multiple anchors or navboost queries). SubSegmentIndex contains all information needed to identify the sub-segment (e.g. specific query, query feature or or anchor) where the mention is located.
*   anchorIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnchorIndices.t, default: nil) - Pointer to the exact set of anchors in the cdoc.
*   genericIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefGenericIndices.t, default: nil) - Pointer to the Webref-internal Segment indices. Can't be mapped back to the CDoc.
*   imageQueryIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageQueryIndices.t, default: nil) - Pointer to the exact set of image navboost queries in the cdoc.
*   jgnIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefJuggernautIndices.t, default: nil) - Pointer to the proto in the cdoc and index within the proto for Spore.
*   metaTagIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMetaTagIndices.t, default: nil) - Informs about the 'name' attribute of the referenced tag.
*   queryIndex (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefQueryIndices.t, default: nil) - Pointer to the exact set of queries in the cdoc.

A collection of arbitrary surfaces that have no prescribed topological relationship.
*   surfaces (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySurface.t), default: nil) - All surfaces are standalone entities with no relationship to each other.

This message is the generic mutation message which will encapsulate the fields which are shared between the create, update, and delete actions, including source of change, timestamp, and metadata messages passed in from the source for any source specific data (such as phone name/model from FSA).
*   androidDeviceInfo (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoAndroidDeviceInfo.t, default: nil) - Android device info should always be set when using either ANDROID_FSA1 or ANDROID_FSA2 as the source of the delete.
*   hostAppInfo (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoHostAppInfo.t, default: nil) - Host app info should always be set when using CONTACTS_COMPANION as the source.
*   source (type: String.t, default: nil) - The source of a mutate should provide all needed information a user should know, and should be enough information for the front end to generate a proper human readable string to describe the mutate to the user.
*   thirdPartyInfo (type: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoThirdPartyInfo.t, default: nil) - Third party info should always be set when using THIRD_PARTY as the source.
*   timestamp (type: DateTime.t, default: nil) - Timestamp representing when the contact was mutated. This should not be set on write, as it is the job of focus backend to determine this timestamp. This field will be populated on read with the data written by FBS.

Recording the output of the snippet filter. We run through a series of snippet filters and store all the conditions that this article passed. A condition is denoted by the "badword_fraction_allowed" in a running window of size - "window_size". If ARTICLE_SNIPPET_NOT_CLEAN annotation is set, this group has 0 items. It can be a part of article logicalentity, but keeping it here for consistency and coherence as SemanticLabel holds all other article metadata.

Marks that this sensitivity is from a synthetic intent.


The following message contains info of sub image docs, it is populated in query_state and consumed in web image boost twiddler: (go/WebImageBoostTwiddler). NextID: 26
*   bestThumbnailType (type: String.t, default: nil) - The best thumbnail type is either 300K or 50K.
*   eqStar (type: number(), default: nil) - EQ* is a unified signal to capture the emotional quality (e.g. inspiration, lifestyle, context, etc.) of an image. For more information, please refer to go/image-inspiration-ranking-framework.
*   estRelevance (type: number(), default: nil) - Estimated Image Relevance ranging between 0.0 (Off-Topic) to 1.0 (Very Useful).
*   pornSignals (type: integer(), default: nil) - Encoded Safe Search annotations of the image. See image/safesearch/overall/public/image_porn_attachments.h for decoding functions.
*   safeForUniversal (type: boolean(), default: nil) - Result is not on the Images Universal blacklist. For more comprehensive filtering of IU images, including this bit, see superroot/impls/images/quality/safesearch/iu_inappropriate_filter_lib.h
*   salience (type: number(), default: nil) - Salient score, indicating how important an image is to the page it's on. Check go/salient-images-design-doc for details.
*   salientColorInfo (type: integer(), default: nil) - 4-bytes: (low order on the left) RRRRRRRR GGGGGGGG BBBBBBBB SS where R: 8-bits encoding color 'r' G: 8-bits encoding color 'g' B: 8-bits encoding color 'b' S: 2-bits encoding the color source - 00 = from color detection result - 01 = from cairo This field has the salient color information.
*   tqStar (type: number(), default: nil) - TQ* is a signal to capture the technical quality (e.g. exposure, sharpness, composition, etc.) of an image. For more information, please refer to go/tqstar.
*   width50k (type: integer(), default: nil) - Width and height of the AREA_50K thumbnail for this image.




Information about a feature's operations, e.g. when the feature is temporarily closed.
*   temporaryClosure (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTemporaryClosureProto.t), default: nil) - Records temporary status change of the feature, such as remodel, vacation, etc.: the feature is temporarily (but not permanently) unavailable. This prevents users from going to the feature. Supports an arbitrary number of past, present, and future temporary closures, with the feature's data owner choosing which range of past and future closures to permit or guarantee to keep. All start and end dates must be unique from each other. If two consecutive dates are a start and an end of a TemporaryClosureProto, then the two dates must be from the same TemporaryClosureProto. Otherwise, exact dates may be missing so long as there exist a possible sequence of temporary closures with both exact start_date and end_date that keeps any known exact start_date and end_date. The earliest temporary closure must begin after whenever initial operations begin. Likewise, the latest temporary closure must end before whenever the permanent closure begins. NOTE: does not guarantee chronological order.




Number of matches in the page when using text alone, prefix + text, text + suffix, and prefix + text + suffix. The match is case-insensitive to align with go/scroll-to behavior.


Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways:  When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC.  When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the time_offset oneof is set. Consider using Timestamp message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
*   day (type: integer(), default: nil) - Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
*   hours (type: integer(), default: nil) - Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time.
*   minutes (type: integer(), default: nil) - Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
*   month (type: integer(), default: nil) - Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
*   nanos (type: integer(), default: nil) - Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
*   seconds (type: integer(), default: nil) - Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
*   utcOffset (type: String.t, default: nil) - UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
*   year (type: integer(), default: nil) - Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.




Provider deeplink and associated metadata, in particular restrictions on platform and user's subscription. Next ID: 18
*   actionType (type: String.t, default: nil) - The type of the deeplink. Sometimes the deeplink is not only used for playing media, but also used for other actions. For example, the deeplink could be for playing a movie trailer from YouTube or recording a movie from YouTube TV.
*   blacklistedCountry (type: list(String.t), default: nil) - The upper-case, III country code, e.g., "US", in which the deeplink cannot play. For possible values, see: google3/i18n/identifiers/regioncode.h google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
*   country (type: list(String.t), default: nil) - The upper-case, III country code, e.g., "US", in which the deeplink can play. If unset or has "earth" (b/72566951), means the deeplink can be used world-wide except in |blacklisted_country| list. For possible values, see: google3/i18n/identifiers/regioncode.h google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
*   deeplink (type: String.t, default: nil) - Deeplink to the media. This deeplink is meant to be send to the provider app on available platforms without any modifications. Required.
*   deeplinkForExecution (type: String.t, default: nil) - Some providers give us an opaque, unstable deeplink to use at execution-time. E.g. see http://go/collab-ranking-nl-uri#heading=h.ndmdfw388tk3 Such a deeplink is not useful for logging, caching, comparing to other candidate deeplinks, etc. So most fulfillment code will want the traditional, stable deeplink that can be interpreted, parsed, cached, etc (found in the "deeplink" field, above). But this opaque, unstable deeplink (if non-empty) must be included in the music initiation clientop.
*   incompatibleWithCredentials (type: boolean(), default: nil) - Indicate whether the deeplink is compatible with credentials. If true, CCS will not send the credentials to cast app. Currently this field is only used for voice-follow on cases on smart displays.
*   offer (type: list(String.t), default: nil) - List of offers that allow user to access the deeplink, that is if the list contains PREMIUM_SUBSCRIPTION and BASIC_SUBSCRIPTION users that have either premium or basic subscription can use the deeplink. If the list is empty it means that there are no subscription restrictions.
*   paidOfferDetail (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPaidOfferDetail.t), default: nil) - This field is only used when "offer" includes a PAY_PER_USE. When "offer" includes a PAY_PER_USE, paid_offer_detail will contain offers for BUY and RENT offer_types with associated cost info.
*   platform (type: list(String.t), default: nil) - List of platforms that support the deeplink. If the list is empty it means that there are no platform restrictions.
*   score (type: float(), default: nil) - Document scores which are used for ranking action links. Document scores might come from CDOC in Raffia or other indexing systems. For example, for web pages, the score shows how likely the web page (composite doc) which generated this link refers to the given entity or how close a particular entity is with the given composite doc. For the larger design, please see go/ma_dedup. For PACIFIC_COLLAB_RANKING deeplink, the score is the normalized confidence score returned by partner for fulfillment candidate. For pivot candidates, the score is calculated with the index of the alternative results.
*   subscriptionPackageName (type: list(String.t), default: nil) - Name of subscription packages which are granted access to this deeplink. This is to match exactly the end users authentication system. This is to be used if the offer is BASIC_SUBSCRIPTION or PREMIUM_SUBSCRIPTION. There can be multiple packages -- the user needs only to authenticate with a single package. For more information please see: go/subscription-package
*   tag (type: list(String.t), default: nil) - Tags associated with the content played by this deeplink. In the common case, the deeplink is supposed to specify a music entity within the provider's inventory, and the provider app should decide the actual content based on the user's account profile (e.g., for a deeplink to an artist, playing tracks from the artist or similar artists, and for a song, playing the official album recording of the song). But in some cases, the deeplink belong to special content. For example, for an artist a seed radio based on the artist, and a live or karaoke version of a song. We use this field to mark such special content types.
*   validTimeWindow (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaDeeplinkInfoTimeWindow.t, default: nil) - A time window in which the deeplink is valid. If not set, the deeplink is considered valid.
*   vuiId (type: String.t, default: nil) - DEPRECATED: This field is ignored by understanding and fulfillment.


A QualifierSet represents a grouping of qualifiers that together with an SPO make up a logical assertion or fact. One triple can contain multiple qualifier sets and thus represent several different assertions about the same SPO.

DateTimeProperty contains various metadata about the DateTime interpretation. Next field: 13
*   metadata (type: String.t, default: nil) - Note: this may be changed to a repeated field in the future.
*   personalReferenceMetadata (type: GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReferenceMetadata.t, default: nil) - Metadata about the personal reference if the date was generated from a personal reference.
*   relative (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeRelativeDateTime.t, default: nil) - Expresses the relative DateTime query that gave rise to these grounded semantics.
*   sourceTypeList (type: GoogleApi.ContentWarehouse.V1.Model.CopleySourceTypeList.t, default: nil) - If the annotation was created by using personal data, we record the provenance for that data here.
*   timezoneIsExplicit (type: boolean(), default: nil) - True iff the timezone value in AbsoluteDateTime is explicit in the annotated text or not. In the following examples the timezone is explicit: Query Timezone -------------------------- -------- 10pst Pacific Standard Time 10 utc UTC 10 sydney time Australia Eastern Time


Person metadata, for USER_MENTION segments. Should always contain at least one of user_gaia_id, user_id, email or user. The exact set of populated fields may differ depending on the context and the level in the serving stack; for example, emails will be elided on the viewing path. But as a general rule, a proto having any one of the four is valid, subject to the standard constraints of the applied annotations -- that is, communication between servers and clients will ignore jspb.ignore fields, and communication between servers and other servers (or between servers and storage) will ignore client_only fields. For more on the annotations, see the comments in social/common/segment_annotations.proto
*   user (type: GoogleApi.ContentWarehouse.V1.Model.SecurityCredentialsPrincipalProto.t, default: nil) - If the principal is backed by a gaia id, DO NOT use this field. Use user_gaia_id/user_id fields instead.

Describes restrictions on where the verdict applies.
*   context (type: list(GoogleApi.ContentWarehouse.V1.Model.AbuseiamVerdictRestrictionContext.t), default: nil) - For a restriction to apply, all contexts must be satisfied. For example, if context[0] is COUNTRY/'GERMANY' and context[1] is DESTINATION_STREAM/'gplus:SQUARE:knitting_discussion', then the verdict applies only when the 'knitting discussion' square is viewed from inside Germany. Please note that this is present for legacy reasons and users of this field would be migrated to use the user_restriction field defined below.
*   userRestriction (type: GoogleApi.ContentWarehouse.V1.Model.AbuseiamUserRestriction.t, default: nil) - A boolean expression tree used to define the restrictions where the verdict applies. Please use java/com/google/ccc/abuse/abuseiam/client/TakedownManager.java to evaluate this proto.




The value is carried over from a field_candidate in a DialogIntentState. For example: U: Send a message to John. G: Which John do you want to message? U: John A. [ListPresentationIntent(contact_disambiguation.person=0)] On the second user query, the "contact_disambiguation.person" argument would have a provenance of PREVIOUS_TASK_STATE_LIST_CANDIDATE.
*   candidateIndex (type: integer(), default: nil) - The presented_index of the field_candidate in the DialogIntentState field_signals that the argument corresponds to.


Represents the aggregated score of the entities for a given name, aggregated over all sources. Next available tag: 3.

The configuration of processing documents in Document Warehouse with DocAi processors pipeline.
*   documents (type: list(String.t), default: nil) - The list of all the resource names of the documents to be processed. Format: projects/{project_number}/locations/{location}/documents/{document_id}.
*   exportFolderPath (type: String.t, default: nil) - The Cloud Storage folder path used to store the exported documents before being sent to CDW. Format: gs:///.
*   processorResultsFolderPath (type: String.t, default: nil) - The Cloud Storage folder path used to store the raw results from processors. Format: gs:///.


Developers register a client in Google API Console to get the deep-linking feature on Google+ posts or frames about their apps. The client data is stored in this proto.
*   androidPackageName (type: String.t, default: nil) - Android app's package name to generate the deep-link URI.
*   iosAppStoreId (type: String.t, default: nil) - iOS app's App Store ID to generate the App Store URL when app is not installed on device.

Gender in PeopleApi has some odd semantics about writing and reading that are not obvious from the proto definition. First, the type string, when read, always maps to the constrained domain of "male", "female", and "other", aside from a pathological case that PeopleApi would like to fix. There are two typical patterns: 1. type is either "male" or "female" and custom_type and address_me_as are exactly as specified by an update to PeopleApi, although they are most often absent for "male" and "female" writes. 2. type is "other" and custom_type is set to a freeform string from the request. address_me_as is equal to whatever was provided at write time. When writing, the free-form string for custom_type can come from either custom_type if the field is present on the request, or if custom_type is absent, the string value of type will be copied into it. Any value in type will be coerced to "other" and the free-form value will be copied into custom_type, even if type is exactly "other". Prefer to explicitly set custom_type and set type to "other" instead of setting type to a free-form value. There are weird edge cases when the value is "unknown". Consider the behavior for type == "unknown" unspecified. Clients reading the gender should use the value from formatted_type if type is "male" or "female". If type is "other", formatted_type will be "Other" (or some translation) and clients should read custom_type for more specificity.
*   addressMeAs (type: String.t, default: nil) - Preferred pronoun choice. It's unclear whether this value is constrained to a finite domain by UIs. address_me_as may be populated regardless of whether type is "male", "female", or "other", although most writers only set it if type is "other".
*   customType (type: String.t, default: nil) - A free-form string indicating what the user entered as their gender. custom_type may exist even if the type is "male" or "female", although most writers do not set it unless type is "other".
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   type (type: String.t, default: nil) - The gender. "male", "female", or "other". If "other", typically, additional fields will have additional information.




Per-provider attachment of a LiveResult. Used to identify pages for which result-based triggering of Live Results should appear. Theoretically there can be more than one attachment per web document, so we keep them as a repeated field of the LiveResultsDocAttachment. Next ID: 4
*   tag (type: String.t, default: nil) - Tag that specifies the use-case within provider's data. It appears as a string in Alexandria signal and in the DocJoins. During the indexing stage this field will be converted to a 64-bit fingerprint to save space. See the "tag_fp" field, below.
*   tagFp (type: String.t, default: nil) - A fingerprint of the "tag" field, automatically calculated during the indexing stage. Will be used as a key for fetching the data.

Corresponds to a call to window.open(). Note that a WindowOpenEvent will be present whether or not the call was successful.
*   allowed (type: boolean(), default: nil) - Whether or not the window was allowed to be opened by the popup blocker. Unless user events are created with a render extension this should be false.
*   url (type: String.t, default: nil) - The URL for the new window. Note that this is the URL after it has been processed by WebKit, so, for example, relative links passed to window.create() will have been made absolute.
*   windowName (type: String.t, default: nil) - Window name passed to window.open(). If no name is provided this defaults to "_blank".







Custom fields associated with a person, from the custom schema defined on the domain. See go/custompeopleapi and go/customfocus. NOTE: these are only updatable via Cloud Directory (go/cd).
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   type (type: String.t, default: nil) - The type of the custom schema field. The type can be free form or one of these predefined values:  home  other * work
*   value (type: String.t, default: nil) - String representation of the value, based on FieldType

Parsed version of a Content-Range field, which in http might look like: Content-Range: bytes 500-999/3156
*   StartPos (type: String.t, default: nil) - In ContentRange, the first byte is 0 (rather than 1), and the positions are inclusive. Thus, length is EndPos+1-StartPos


Data associate with the ReferencesBlock. Next available ID: 5
*   caption (type: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitTokenizedText.t, default: nil) - Caption tokens - all text in the caption other than the block.
*   reference (type: String.t, default: nil) - Reference used from the text to point to this figure.
*   title (type: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitTokenizedText.t, default: nil) - Title tokens - these come from a block within a caption.

Records the output of Rule Engine including rule evaluation and actions result.
*   actionExecutorOutput (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ActionExecutorOutput.t, default: nil) - Output from Action Executor containing rule and corresponding actions execution result.
*   documentName (type: String.t, default: nil) - Name of the document against which the rules and actions were evaluated.
*   ruleEvaluatorOutput (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1RuleEvaluatorOutput.t, default: nil) - Output from Rule Evaluator containing matched, unmatched and invalid rules.


The 3P account the annotated personal data belongs to.
*   thirdPartyProviderId (type: String.t, default: nil) - Unique identifier for the third party provider. Defined by Google via AoG.

A membership that the person has. The person can be a member of multiple circles and multiple contact-groups. A circle membership is created by adding a person to a circle by person-id or by email. A contact-group membership is created by adding a contact to a contact-group.
*   circleId (type: String.t, default: nil) - A circle that the person belongs to.
*   contactGroupId (type: String.t, default: nil) - A contact-group that the person belong to. The id can be either a hex-formatted id or a camel-cased SystemContactGroup predefined group name. The id will be predefined group name iff the system_contact_group_id has a value.
*   metadata (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata.t, default: nil) - The metadata field can be used to determine which container generated the membership. For example, when the membership has a contact_group_id, the metadata.container will be CONTACT and the container_id will be the contact Id.
*   systemContactGroupId (type: String.t, default: nil) - The membership has a contact_group_id, this field will be populated when the membership is in a system-reserved contact-group.

Represents some name-specific scores. (Unlike EntityNameScore, these scores are independent of the entities the name is associated with). These scores are available for each name as well as for each name/source. Next available tag: 31.
*   completeWorldVolume (type: number(), default: nil) - Approximates volume of this name including entities we don't have in our set. This is useful to estimate the size of the "open world". For example, this field can be equal to the total number of clicks for the query. Note that for now, we ignore the number of clicks but just use the idf if available.
*   contextFringeScore (type: number(), default: nil) - The fringe score in [0, 1] for this context name. This is only populated for full-query context names.
*   contextWeight (type: number(), default: nil) - The amount of evidence available for this context name.
*   idfScore (type: number(), default: nil) - The idf of this name.
*   openWorldVolumeModifier (type: number(), default: nil) - 'Raw' open world is computed based on ngram count data. For some names however, we modify the open world based on entities associated with them. This field contains the additive open world modifier. open_world_volume = raw open world + open_world_volume_modifier
*   totalScore (type: number(), default: nil) - The total score of that name/source. It describes how much data we have for that name/source. It can for example be the sum of all the entity scores for this name.


Oneof doesn't allow maps, this message is used to inject map as a possible value into Slot.

The reference to an entity in the KnowledgeGraph. For details on the KnowledgeGraph see http://goto/kg.

LINT. IfChange Represents a color in the RGBA color space. This message mirrors google.type.Color. IMPORTANT: The definition of Color proto is being moved to //assistant/api/core_types/color_type.proto. All existing references will be updated to point to the new location. If you are adding a reference, use the new one instead.
*   alpha (type: number(), default: nil) - The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: pixel color = alpha  (this color) + (1.0 - alpha)  (background color) This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. If omitted, this color object is to be rendered as a solid color (as if the alpha value had been explicitly given with a value of 1.0).
*   blue (type: number(), default: nil) - The amount of blue in the color as a value in the interval [0, 1].
*   green (type: number(), default: nil) - The amount of green in the color as a value in the interval [0, 1].
*   red (type: number(), default: nil) - The amount of red in the color as a value in the interval [0, 1].


State of the apps currently installed on the device.
*   apps (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t), default: nil) - List of apps currently installed on the device.

OrientationLabel groups the details about orientation and reading order.
*   deskewAngle (type: number(), default: nil) - After rotating so that the text orientation is upright, how many radians does one have to rotate the block anti-clockwise for it to be level? We guarantee: -Pi/4 <= deskew_angle <= Pi/4
*   mirrored (type: boolean(), default: nil) - Whether a text line is mirrored (e.g. reflected in a shiny surface or seen through the opposite side of a storefront window). The intent is that this is a quality of the text line image. It needs to be reflected according to a vertical axis along the direction of upright characters to make it readable. This does not affect the shape of the bounding box. A mirrored line with top to bottom writing remains top to bottom. A mirrored horizontal line will flip left to right. However any child entities (symbols) will remain in the same order, and the writing direction imposed by the language (ltr or rtl) will remain the same.

An entity, which may occur multiple times in the text.
*   gender (type: String.t, default: nil) - Entity gender. Default label set is 'masculine', 'feminine', or 'neuter'. (Perhaps in the future we can split 'neuter' into 'inanimate', 'unknown', and 'non-binary'.)
*   mid (type: String.t, default: nil) - Machine identifier, such as those from the Freebase database (or similar entity database).
*   type (type: list(String.t), default: nil) - Entity type, typically something like person/location/organization. The schema for types is not specified. If this entity has a MID, use the mid field instead or in conjunction with the type.


Records stats about state changes on the client side if there're any. For example, there's a state of cache lookup when using private-cache client library.

This message denotes nutrition information with an upper bound and lower bound range and can be represented by mass unit.
*   unit (type: String.t, default: nil) - Unit of the given nutrition information.

Sitelink candidates that is generated from breadcrumbs.


Status indicating whether the user has finished expressing their intended semantics during a streaming interaction. Semantics are partially expressed when later, unprompted user input is expected to modify the semantics. Future inputs are typically additional speech or continued modification of argument text in form field. These inputs can trigger modifications including adding arguments, changing the intent, or modifying existing arguments. Sensing this status can be done both directly and indirectly. Fluid Actions directly detects this status as the user moves between, or enters and leaves, argument form fields. Understanding indirectly detects this status by the pace of the user's speech, the semantics of the language, and the user's intonation. See go/streaming-nlu-fulfilment-protocol-v1 for details about how it is used in the Streaming NLU Fulfillment protocol.
*   textCompletenessProbability (type: number(), default: nil) - Completeness probability as calculated by the parser's completeness layer.

Citation contains the information needed to correctly attribute the source of data.
*   isAttributionRequired (type: boolean(), default: nil) - If set to true, the citation is required to be displayed when the data is used.
*   project (type: String.t, default: nil) - Name of the project of the data's origin.
*   provider (type: String.t, default: nil) - The name of the provider of this information.
*   uri (type: String.t, default: nil) - Uri link associated with this data.

Signals indicating whether this entity received or transferred support (and from which entities).
*   supportTransferSource (type: list(String.t), default: nil) - Entities that transferred support to this entity (mids).
*   supportTransferTarget (type: list(String.t), default: nil) - Entities that received support from this entity (mids).





An instance of a "mid list" rule. Each "mid list" rule defines exactly one cluster.
*   rule (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoMidListRule.t, default: nil) - The rule that this is an instance of. Required.





Mentions of relations in the document. A relation mention is between a mention of the source entity and a mention of the target entity.
*   phrase (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t, default: nil) - Phrase in the document that indicates the relation mention.
*   source (type: integer(), default: nil) - Source and target mention indices. These are indices into the mention arrays for their respective entities. The target is not used for attributes.
*   sourceInfo (type: list(String.t), default: nil) - The info of the source models or systems of the relation mention.




Specification of which podcast features can be used.

All annotations for a given concept (in one document collection). Available tags: [10-15], [19-]
*   confidenceScore (type: number(), default: nil) - The overall confidence that the entity is annotated somewhere in the document or query. For WebRef it is computed as a function of the mention confidences weighted by the importance of each mention, where for documents a mention is of greater importance if it occurs in the title, h1 or anchors. For QRef it is just the maximum of the confidence over all mentions. NOTE: You probably want to use the mention-level segment_mentions.mention.confidence_score field instead of this one.
*   detailedEntityScores (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores.t, default: nil) - Additional information about how the entity relates to the page, for example whether it is a business entity which published the page.
*   explainedRangeInfo (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExplainedRangeInfo.t, default: nil) - All ranges explained by the entity or any other entity it implies. Used in the context of partial query interpretation (go/partial-understanding).
*   isImplicit (type: boolean(), default: nil) - An entity is marked as implicit if there is no explicit mention of the entity in the content of the page. For instance, all mentions of the entity are in query, url and/or anchors; or the entity has only implicit content mentions.
*   isResolution (type: boolean(), default: nil) - True if the entity is an MDVC summary entity, i.e. it might not be mentioned directly on the query, but it is the product of resolving a set of explicit annotations. E.g. "2014 FIFA World Cup" can be the summary for the query: [soccer world cup in brazil] even though none of the names of the entity is mentioned on the query. Summary nodes can also be synthetic, i.e. have a /t/ mid, as they represent the intersection between a set of regular annotations. For more information, see http://go/mdvc-output.
*   segmentMentions (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMentions.t), default: nil) - All mentions of a given concept grouped by segments. For Webref, there are many different kinds of segment, such as content, title and anchors; while for QRef, there is only one segment called CONTENT. For QRef this field contains the primary output of the annotator, and for WebRef it together with topicality_score does.
*   topicalityRank (type: integer(), default: nil) - Rank of the entity when sorted by topicality score.
*   topicalityScore (type: number(), default: nil) - The WebRef topicality score of the entity for this document. This score indicates how related is the entity to the overall topic of the document. See https://goto.google.com/topicality-score for details. This field is not present in QRef output. Note that the topicality and the confidence score are orthogonal measures. It is possible that the annotator is absolutely sure that an entity is mentioned in a given range in the document, but this entity may be unrelated to the overall topic of the page (e.g. the entity "RSS" is mentioned in the footer of appleinsider.com). In this case the mention has a very high confidence score, but very low topicality score.


SalientTerm can be two things depending on where this message is. When right under a SalientTermSet, it is a normalized term and weight pair, along with other term-level data. When under another SalientTerm message, it is a non-normalized original term (see original_term field).
*   idf (type: number(), default: nil) - idf of the original_term. Used by Accumulator2. This field is only available in debug mode.
*   label (type: String.t, default: nil) - label can be two things depending on where this message is. When right under a SalientTermSet, it is the normalized term returned by quality_salient_terms::utils::NormalizeTerm() from salient_terms_utils.h. When under another SalientTerm message, it is the original term as found in a signal (see original_term field).
*   originalTerm (type: list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm.t), default: nil) - original_term are the different ways we found this normalized term in the signals. They are in increasing idf order (the most common version first). An empty string means that this original term is the same as the label field in the parent SalientTerm message. NOTE: Please do not access this field directly. Use quality_salient_terms::utils::OriginalTermsIterator from salient_terms_utils.h instead.
*   salience (type: number(), default: nil) - salience is the importance of the term as a descriptor in [0, 1] (the higher the more important). This field takes precedence over weight field below. NOTE: Please do not access this field directly. Use quality_salient_terms::utils::GetSalience() from salient_terms_utils.h instead.
*   signalTerm (type: list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalTermData.t), default: nil) - signal_term contains extra signal-specific (e.g., body, anchors, clicks) data for this term.
*   virtualTf (type: number(), default: nil) - virtual_tf is the accumulated corrected term frequency from all the signals. This field is only available in debug mode.
*   weight (type: integer(), default: nil) - weight is the importance of the term as a descriptor in [0, 100] (the higher the more important). NOTE: Please do not access this field directly. Use quality_salient_terms::utils::GetSalience() from salient_terms_utils.h instead. DEPRECATED: prefer salience field above.

The on-device storage capabilities found on the device.
*   isSupported (type: boolean(), default: nil) - Determines if an on-device storage is supported.

Representation of fields that contain dates. The formattes version, if present, contains ISO 8601 formatted date or range. Otherwise, it is an unformatted string. Next ID: 3

Represents a collection of entities returned by the WebRef service. Next available tag: 14.
*   annotationStats (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefAnnotationStats.t, default: nil) - Detailed annotation statistics that can, e.g., be used to tune the WebRef scoring logic based on existing (Model-0) annotations.
*   annotatorCheckpointFingerprints (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatorCheckpointFprint.t), default: nil) - Fingerprints checkpointing annotator stages, can be used to track the source of diffs.
*   category (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotation.t), default: nil) - Categories of the document or query. This replaces the category_score found under EntityAnnotations.
*   dateRange (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSemanticDateRange.t), default: nil) - Dates ranges that are most relevant to the document. E.g. on a document about Dune the 2021 movie, this might hold the release date of that movie.
*   documentInfo (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefDocumentInfo.t, default: nil) - Information that applies globally to the document. The exclude_field option is for Goldmine AnnotationsFinder to exclude document_info from retrieving annotation entities
*   entity (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntity.t), default: nil) - The annotated entities, with associated confidence scores and metadata. This is the primary output of WebRef/QRef. In case of Webref output, entities are sorted by decreasing topicality score.
*   rangeAnnotations (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRangeAnnotations.t), default: nil) - These messages contain non-entity annotations of ranges in the document. This might be used to hold part-of-speech annotations, stopword annotations, and other range based information. The exclude_field option is for Goldmine AnnotationsFinder to exclude ranged_annotations from retrieving annotation entities
*   status (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefStatus.t, default: nil) - The status message returned by the annotator. Might not be populated on success.
*   tripleAnnotations (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefTripleAnnotations.t, default: nil) - Triples inferred from the document When the annotator recognizes phrases, lists or tables associated with a property or relationship for an entity it generates triples that encode that information. This generated data is only substantiated by the document vs KG data which has been verified from multiple sources and/or human curators.





Stores cluster scoring information for an entity Next Id: 6
*   clusterId (type: String.t, default: nil) - The cluster_id represents the id of the set entity that WebRef provides.
*   clusterSiblingMid (type: list(String.t), default: nil) - The mids of cluster members that are part of the same cluster. Note that cluster members may end up having their own interpretation (EntityInfo which includes a ClusterInfo) or not (eg because they do not explain the full query, and so aqua does not output an interpretation for them). The latter case (a cluster member is output only as part of this field), is equivalent to its score being 0.
*   score (type: number(), default: nil) - The score represents the score of the entity within the cluster.




There is an implicit AND relation if multiple EVCS constraint types are specified.







Protos representing device or structure attributes. See go/hgs-attributes-protos. Only protos approved and formalized by assistant/HG team should be added here.

We divide up a week into individual open intervals. If any are present then they must be arranged in strictly increasing order, with non-empty spaces between successive intervals, and all times between 0 and 604800, the number of seconds in a week.


Collects all lightweight token patterns for each NameToConceptEntry.





Contains customer data for profile owner proxied from D3.
*   customerId (type: String.t, default: nil) - DEPRECATED. Use obfuscated_customer_id instead. If result has a GSuite Customer ID, this field will continue to be populated with -1 to indicate the presence of a value for backwards compatibility with clients in the wild. See b/144596193.

Products-specific information about the entity. Only available in QrefMetadata output. Next available tag: 16.
*   productLineId (type: list(String.t), default: nil) - Shopping product line ids (typically moka product line tag) of this entity. Represents shopping product lines, such as iPhone or Canon EOS. Typically, we expect only one id. But keeping repeated, in case we want to merge or aggregate product lines. Using int64, as tag_id in commerce/datastore/processors/moka/proto/moka_annotations.proto.
*   shoppingIds (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t, default: nil) - All ShoppingIds for this MID that need to be copied to IntentQuery (FunctionCall) if this MID is used in intent generation. See go/iql-shopping-ids for details.
*   variantClusterId (type: list(String.t), default: nil) - All unique variant cluster ids (shopping's GPCs) of this entity.

Marks that this sensitivity is from fulfillment.


Info for targeting a feature provided directly by the Assistant surface itself. i.e Could be pointing to AGSA audio player for AUDIO_PLAYER on AGSA.
*   type (type: String.t, default: nil) - Specifying which type of internal provider.

A query term, phrase, or synonym. An original query term or phrase is called an "item". Each item may have more than one "subitem" if there are synonyms. In rare cases a subitem may correspond to multiple items, such as the subitem "cia" in the query [central intelligence agency].
*   isOriginal (type: boolean(), default: nil) - true iff this subitem was an original query term or phrase. Can only be false if want_all_query_subitems == true in the request.
*   items (type: integer(), default: nil) - a bitvector of the query items corresponding to this subitem. Typically only one bit is set, but see comment above.
*   text (type: String.t, default: nil) - text associated with this query item
*   weight (type: integer(), default: nil) - the weight of this query item, as calculated by SubitemWeight(): https://qwiki.corp.google.com/display/Q/SnippetWeights

Intended to be simpler to work with than the ExportedStanza it's derived from See documentation: https://g3doc.corp.google.com/company/teams/youtube/community_intelligence/eng_resources/data_sources.md#ministanza Next available: 80
commentType (type: String.t, default: nil) - Whether the comment is on a video, post, or other product.  subject (type: GoogleApi. ContentWarehouse.V1.Model.SecurityCredentialsPrincipalProto.t, default: nil) - The author of the comment  numRepliers (type: integer(), default: nil) - Number of different repliers the comment has.  ytAuthorChannelId (type: String.t, default: nil) - The youtube channel id of the comment author.  subscriptionTimestamp (type: String.t, default: nil) - The timestamp (in seconds) when the author subscribed to the channel.  stanzaRestrictions (type: list(GoogleApi.ContentWarehouse.V1.Model.SocialStanzaStanzaRestriction.t), default: nil) - Contains various restriction information about a stanza.  lowQualityDecisions (type: map(), default: nil) - Low quality decisions. Keyed by decision types corresponding to secondary keys.  rankingPostLanguage (type: String.t, default: nil) - The language code stored in the KV pair ranking:post_language. This should usually be the same as language_code but is not guaranteed to be identical. The KV pair is needed because SBE ranking can't consume user_content. Still populated, but deprecated.  eligibleQualifiedTeaserFilters (type: list(String.t), default: nil) - The qualified comment teaser filters that this comment is eligible for. Refer to go/comment-teaser-design for more information.  stanzaId (type: String.t, default: nil) - Refers to the stanza this data is derived from.  isSubscriber (type: boolean(), default: nil) - If the comment author is publicly subscribed to the channel.  numDislikes (type: integer(), default: nil) - Number of dislikes the comment has.  commentClassificationRanking (type: map(), default: nil) - Comment classification for ranking mapping all secondary keys to values. E.g. {"joke_v1":0.8, "joke_v2":0.7, "question_v1":0.3}.  isAuthorSponsor (type: boolean(), default: nil) - If the author is a channel member (sponsor).  commentClassificationBuckets (type: list(String.t), default: nil) - List of pre-defined classification score buckets to which the comment belongs. E.g. satisfaction_v1_percentile_80.  lowQualityScores (type: map(), default: nil) - Comment low quality scores. Keyed by various model names. Rename from the old automod_scores.  lastReplyTimestampUsec (type: String.t, default: nil) - The time when last reply is created.  textQualityScores (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsRankingYouTubeCommentTextQualityAnnotation.t, default: nil) - Predicted probability of the comment being flagged based on the text.  numLikes (type: integer(), default: nil) - Number of likes the comment has.  sentiment (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsSentimentSentiment.t, default: nil) - Sentiment. This omits entity_sentiment and keeps only the polarity, magnitude, and score. Sentiment as currently implemented is not debiased and has limited language coverage. Please read go/comments-sentiment-access before using.  coverageSamplingEligible (type: boolean(), default: nil) - Whether or not this comment is eligible for comment classifier coverage sampling (in Kapla). Refer to go/coverage-monitoring-for-kapla-comment-classifiers for more information.  sensitivityScores (type: map(), default: nil) - Sensitivity scores map for smart reply sensitivity scores. Keyed by model names. See (g3doc/company/teams/expander/research/conversation/sensitive.md) for more information on sensitivity scores.  channelId (type: String.t, default: nil) - The channel of the video this comment belongs to.  fds (type: float(), default: nil) - Fountain Discovery Score, which represents the reputation of the author.  distillerEngagements (type: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleActivityStreamqualityDistillerEngagements.t, default: nil) - All distiller engagements like reports and downvotes.  smartReplies (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.VideoYoutubeCommentsClassificationProtoYouTubeCommentSmartReply.t}, default: nil) - Smart replies for this comment. Keyed by model names.  isDeleted (type: boolean(), default: nil) - Whether a comment is from deleted shares. See stanza_restrictions for more specific information and is_publicly_visible for comments which are allowed to be seen by everyone.  postId (type: String.t, default: nil) - The post this comment belongs to.  isPubliclyVisible (type: boolean(), default: nil) - If the post is publicly visible.  isPinned (type: boolean(), default: nil) - Whether the comment is pinned. This is derived from the DestinationStreamDump.  ytReplyToItemId (type: String.t, default: nil) - For replies to replies, this contains the parent reply's id. The parent_id field is actually the root stanza_id (not guaranteed AFAIK).  contentUpdateTimestamp (type: DateTime.t, default: nil) - The stanza content last update timestamp, as observed by the server. Note that for many comments older than Nov. 2014 this is unset in the original stanza. MiniStanza tries to be consistent with the original so for such comments it remains unset in MiniStanza. If you use this field you should check has_content_update_timestamp().  content (type: String.t, default: nil) - The text content of the comment.  creationTimeInSeconds (type: String.t, default: nil) - The time when the comment is created.  videoId (type: String.t, default: nil) - The video this comment belongs to.  shortReplyVideoId (type: String.t, default: nil) - Associated Short Reply video ID if the comment represents a Short Reply. See go/yt-comment-sticker-m2.  parentId (type: String.t, default: nil) - The parent stanza's stanza_id, empty for top-level posts (non-replies). Prefer is_reply field for checking if a comment is a reply since that is unaffected by surrogatization. For replies to replies, this is the root stanza_id (not guaranteed AFAIK).  commentModeratedRestrictions (type: list(GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsApiCommentModeratedRestriction.t), default: nil) - Contains various comment moderated restrictions. Only available in the Atlas version. Extracted from http://shortn/_2LzgPEF5K3  textQualityScores2 (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsRankingYouTubeCommentTextQualityAnnotation.t, default: nil) - Predicted probability of the comment being flagged based on the text. For testing the new annotation process only.  hasCreatorReply (type: boolean(), default: nil) - If the comment has a creator reply.  detailedLanguageCode (type: String.t, default: nil) - The language code with extra script details. This is derived from detailed_language_code if it's populated, otherwise the same as language_code. E.g. mr-Latn  languageCode (type: String.t, default: nil) - Unicode CLDR language code of the segments, as implemented by //depot/google3/java/com/google/i18n/identifiers/LanguageCode.java This is derived from user_content and should be considered the canonical language code of the comment.  numReplies (type: integer(), default: nil) - Number of non-abusive replies the comment has.  hasCreatorHeart (type: boolean(), default: nil) - Indicator for whether there is creator heart on this comment.  subjectIsVideoOwner (type: boolean(), default: nil) - Whether the comment is authored by the creator.  isReply (type: boolean(), default: nil) - Whether the comment is a reply.  videoTimestamps (type: list(integer()), default: nil) - Unique video timestamps in seconds sorted by timestamp. This is derived from text Segments, not from a KV. These may exceed the length of the video since that isn't checked at segmentation time. The segmentation rules have changed over time e.g. in the past "10:00 PM" was treated as a timestamp.  superThanksInfo (type: GoogleApi.ContentWarehouse.V1.Model.YoutubeBackstageSuperVodCommentInfo.t, default: nil) - Super Thanks related info if a comment is posted through a Super Thanks purchase.  channelDiscussionId (type: String.t, default: nil) - The channel this channel discussion comment belongs to. Note that this will match channel_id for such comments.

A single processor counter stored as a pair of the counter name and the value.


Contains video level features that apply to all anchor types.
*   anchorCount (type: integer(), default: nil) - The total number of anchors in all video anchor sets.
*   captionInfo (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionInfo.t, default: nil) - The caption data for the video transcript. The models used for unified scorer. Should be a filepath that contains saved_model.pb and a variables/ folder
*   labelPhraseEmbeddingModel (type: String.t, default: nil) - The model used for generating label_phrase_embedding.





Timed text streams refer to the streams that are separated from audio and video streams. Closed caption streams embedded in video streams (e.g. MPEG-2 - Line 21) do not belong here.
*   streamIndex (type: String.t, default: nil) - Index of the stream in the file. it is 0 based.


This protocol buffer holds the doodle-specific attributes for features of type TYPE_DOODLE.
*   type (type: String.t, default: nil) - The type of this feature -- see comments above.

The following are only populated if Params. WantStateStats is true.
*   StartTrackingTimeUsec (type: String.t, default: nil) - Start and end timestamp tracking the delays for this request.


Contains lexical metadata for a given reference. For example, this proto will be used to store locale-specific Lexical mids for contact relationships (e.g. /g/11gv0vypg4 is the mid for mother in english and /g/11gmy_gv87 is for mother in french) as an extension to QRefAnnotation::other_metadata, when available.
*   canonicalLexicalMid (type: String.t, default: nil) - Mid for an entity that has lexical data (a LexiconEntry). See https://g3doc.corp.google.com/nlp/generation/g3doc/lexical_data.md for for more information about lexical data. This is the canonical mid for this entity (eg. it would be for "mother" in EN even if user referred to "mom").





A client is be a Google product, or subproduct that provides content for AbuseIAm to classify.
*   subservice (type: String.t, default: nil) - The name of the subservice within a client. This subservice can be used to affect the flow of decision script, or selection of backend classifiers. For example, StreetView may want to specify a panel is insufficiently blurred (maybe there is a lisense plate or public sex, etc), which requires manual review then the subservice might be "blurring".

A single WrapptorItem, with a business name, an address and a phone number. We keep only the fingerprints of address and phone number. The full address and phone protos will be elsewhere within LocalWWWInfo.

Encapsulates the action capabilities of the OEM device. This data is merged from Device Model lookup, per-device registration, and per-request context. This data is sent to NLU layer for query understanding.
*   cloudCapability (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudCapability.t, default: nil) - The OEM Cloud execution capability of this device, containing routing details for cloud fulfillment.
*   cloudDeviceCapabilities (type: map(), default: nil) - If fulfillment is done via 3P cloud and 3P supports device capabilities, this field will be set.
*   deviceSpecificData (type: String.t, default: nil) - Opaque supported action data related to a specific domain of devices, for example for car. go/car-talk-registration-model
*   internalCapability (type: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInternalCapability.t, default: nil) - Internal-only config containing metadata about the Device Model, for example to control the ranking behavior.
*   thirdPartyActionConfig (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiThirdPartyActionConfig.t, default: nil) - 3P Action Metadata, populated from the Device Model lookup and the client request parameters. For example, an Assistant SDK request would have the billed project id of the Assistant request added here in order to enable any Device Actions developed using the same Google Cloud project. This data is sent to Service Engine to mask triggering for Device Actions.

A protocol buffer to store the url, referer and porn flag for a url. and an optional image score. Next available tag id: 51.
*   debugInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.ImagePornDebugInfo.t), default: nil) - DebugInfo stores debug information from the overall classifier. This allows for instance to update counters related to blacklisting without running the full classifier again.
*   finalOffensiveScore (type: number(), default: nil) - Final offensive score based on image salient terms and image OCR vulgar and offensive scores.
*   finalViolenceScore (type: number(), default: nil) - Final violence score based on some image signals (brain pixel score, co-clicked images violence score, navboost queries score, etc.).
*   finalViolenceScoreVersion (type: String.t, default: nil) - A string that indicates the version of SafeSearch classifier used to compute final_violence_score.
*   internalSignals (type: GoogleApi.ContentWarehouse.V1.Model.SafesearchInternalImageSignals.t, default: nil) - A proto that stores SafeSearch internal signals that are not exported to clients. SafeSearch team does not provide any guarantees about the presence or the semantics of these signals in the future.
*   ocrAnnotation (type: GoogleApi.ContentWarehouse.V1.Model.ImageSafesearchContentOCRAnnotation.t, default: nil) - Information about image OCR text. For details see image/safesearch/content/public/ocr_annotation.proto.
*   ocrVulgarScore (type: number(), default: nil) - Vulgar score of the text found by OCR in the image.
*   offensiveSymbolDetection (type: GoogleApi.ContentWarehouse.V1.Model.ImageSafesearchContentOffensiveSymbolDetection.t, default: nil) - QuimbyCongas-based detection of offensive symbols in the image (currently swastika and Nazi yellow badge).
*   photodnaHash (type: String.t, default: nil) - Binary version of the PhotoDNA hash (144 bytes long). If not set (has_photodna_hash() == false) it means that it was not computed, if empty (has_photodna_hash() == true && photodna_hash() == "") it means that the computation failed (cannot be computed for images smaller than 50 x 50).
*   pornWithHighConfidence (type: boolean(), default: nil) - This field is set to true when we are pretty confident that the image is porn (with higher precision than the img_porn_moderate restrict). In particular, it means that the image might be demoted for non-porn queries when SafeSearch is Off.
*   qbstSpoofScore (type: number(), default: nil) - QBST-based image spoof score, Navboost based, unrelated to the pixel-based score in PornAnnotation.
*   queryStats (type: GoogleApi.ContentWarehouse.V1.Model.ClassifierPornQueryStats.t, default: nil) - Query statistics from Navboost logs. For more details see classifier/porn/proto/image_porn_classifier_signals.proto.
*   referrerCounts (type: GoogleApi.ContentWarehouse.V1.Model.ClassifierPornReferrerCounts.t, default: nil) - Information about referrers and their porn classification. For details see classifier/porn/proto/image_porn_classifier_signals.proto.

A token represents an ngram with relevant information about it. If the token is a context phrase, it will have a prior score associated with it. The prior is computed via knowledge/answers/query_generalization/ word_prior/word_prior_from_examples_lib.cc, and ranges between 0 and 1. Stopwords and intent tokens (primary and component) have a score of 1.0.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - This field is used inside Aqua and outside Aqua for identifying the token indices and/or byte offsets of this Token.
*   ngram (type: String.t, default: nil) - |ngram| should be populated with a string from the raw query, not the normalized tokens. E.g. The ngram in the ignored token for the Height intent on the query [Height of barack obama], will be "Height". The ngram in the ignored token for the Videos intent on the query [vidéos] will be "vidéos".
*   parsedDueToExperiment (type: list(String.t), default: nil) - Experiments that caused this Token to parse, without which this would not have parsed.
*   provenanceId (type: list(String.t), default: nil) - Unique identifiers for the provenance of this token, for example, NLP Repository Example IDs.




Additional contact ids that are not actively used to match contact pointers to contacts. There may be overlap with primary or secondary contact ids.
*   deviceContactId (type: list(GoogleApi.ContentWarehouse.V1.Model.FocusBackendDeviceContactId.t), default: nil) - Device contact ID, when available: - The annotation points to a device contact, and the device contact id was correctly populated when the annotation was created. Note that the device contact id is populated once per device contact on a device. It is distinct from RawContactId - a single device contact may have multiple raw contact ids. - The annotation points to a Focus contact that was merged with device contact information in Starlight. When the annotation was created, a device contact id was available on the merged person object. - The contact annotation was created from April 2021 onwards. All prior annotations do not populate this field. ContactPointer creation relies on the client caller to correctly populate the device contact id, and does not enforce any assumptions on availability of this field. This field is repeated because in rare cases Starlight may merge device contact information across different devices into a single merged person object. WARNING: Use with extreme caution! This ID is not stable. For more details see go/fbs-support-for-device-contacts.

The type of contact (mobile, home, work, etc). NOTE: Unfortunately the name of this message is a misnomer. Contact type would be a better name.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!
*   isAnnotatedFromText (type: boolean(), default: nil) - Whether the annotation is from $Text.


A TimeZoneType configures a value whose type is a timezone.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.








The states of the device. They are dynamic and may change based on the current context. Next ID: 15
*   distance (type: String.t, default: nil) - The distance of the device relative to others that hear the user's OKG.
*   hasBufferingMediaSession (type: boolean(), default: nil) - Indicates that the device is running a media session that is currently buffering.
*   hasPausedMediaSession (type: boolean(), default: nil) - Indicates that the device is running a media session that is currently paused.
*   hasPlayingMediaSession (type: boolean(), default: nil) - Indicates that the device is running a media session that is currently playing.
*   inSameRoomAsHearingDevice (type: boolean(), default: nil) - Indicates whether or not the device is in the same room as any hearing devices. Does not consider the device itself or the local device as a hearing device. If no valid hearing devices, this field is not set.
*   inSameRoomAsLocalDevice (type: boolean(), default: nil) - Indicates whether or not the device is in the same room as the local device. If the device is the local device, this field is not set.
*   inSameStructureAsHearingDevice (type: boolean(), default: nil) - Indicates whether or not the device is in the same structure as any hearing devices. Does not consider the device itself or the local device as a hearing device. If no valid hearing devices, this field is not set.
*   inSameStructureAsLocalDevice (type: boolean(), default: nil) - Indicates whether or not the device is in the same structure as the local device. If the device is the local device, this field is not set.
*   isDocked (type: boolean(), default: nil) - Indicate whether the device is docked on a base.
*   isLocal (type: boolean(), default: nil) - Whether the device is a local device, i.e. the device that heard OKG from a user and is processed by an assistant pipeline. If multiple devices heard OKG (MDA case), each hearing device would be considered a local device in its own assistant pipeline. Example: A user says "OKG, play music on TV" to Google Home, and music is played on the TV. Google home is considered a local device, while TV is considered a remote device. Timestamp of when the device was last used. Should correspond to when the AssistantRequestParams (in ASSISTANT_SNAPSHOT corpus) were last written for this device.
*   isLocked (type: boolean(), default: nil) - Indicate whether the device is locked.
*   isTethered (type: boolean(), default: nil) - Indicate whether the device is tethered to another device.
*   mediaFocusStateFromHearingDevice (type: String.t, default: nil) - Indicates the state of media focus from a separate non-local hearing device.
*   mediaFocusStateFromLocalDevice (type: String.t, default: nil) - Indicates the state of media focus from a separate local device.

Gentle wake actions like slowly brightening the room/device screen leading up to the alarm firing (go/cube-gentle-wake-up).
*   effectDurationMs (type: String.t, default: nil) - Specifies how long the effect lasts. Allowed for effect to last after the alarm has started ringing. If unset or negative or 0, effect is assumed to last until alarm trigger time.
*   isEnabled (type: boolean(), default: nil) - Indicates if gentle wake action is to be performed before this alarm fires. This is enabled only if the device supports sunrise alarm capability. http://cs/symbol:assistant.api.SunriseFeaturesSupport
*   startTimedeltaMs (type: String.t, default: nil) - Specifies how long before the alarm fire time, the wakeup effect will start. ALWAYS POSITIVE.

Defines execution routing information for Traits, which will be used to be mapped for each Trait as following: map traits_to_routing_table_map = X; We'll use this for CHIP first. And expect to migrate the existing routing logic to this gradually.

This protocol buffer holds S2 cell covering for the feature. See util/geometry/s2cell_union.h for more information on S2 cells. See geostore/base/public/cellcovering.h for utility functions.
*   cellId (type: list(String.t), default: nil) - Array of S2 cell ids that represent the covering. There is no preset limit on how many cells can be used.

Example: "the episode with all of the comedians". A free-form text description of a media.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!





Example: "Remind me to go to the store on (Friday) (9am)" would output two non-overlapping and unrelated annotations. One would have a start_date = Friday and the other would have start_time = 9am. It's possible for Friday to be one of several upcoming Friday's, so start_date is a repeated field. Next ID: 10
*   startDate (type: list(String.t), default: nil) - NOTE: None of these are co-indexed. If the query is 'morning', there could be multiple start_time's, start_date's, end_date's, and end_time's, and they do not correspond to one another in any structured way.




Images from the product-level representation (i.e. GPC). These images are currently only annotated 1) when no offers are available 2) on the product level

These capabilities are used to determine the jwn libraries and their versions that are present on the client.
*   librariesVersionMap (type: map(), default: nil) - The name and version of the jwn libraries currently stored on the client. These are the same that the server communicated when the library was first sent down.
*   supportedCompressionMode (type: list(String.t), default: nil) - Compression algorithms supported on the client. Server can choose one of these to compress WhatsNext Javascript programs and libraries.


It can be a contact (person name), a business name, an email address or a phone number. NOTE: Unfortunately the name of this message is not generic enough. Contact would be a better name.
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!
*   rawText (type: String.t, default: nil) - NOTE: for CONTACT recipient, this is NOT the real raw text of the recipient span of historical reasons. Major differences includes: - stripping possessive suffix, e.g. "John's" -> "John" - stripping prefix/suffix/title, e.g. "Mr. John" -> "John" - uninflect name for languages like Russian, e.g. "Андрею" -> "Андрей" Currently this is the same as .contact.name, and is used as the string shown to the user on clientside UI. If you're looking for real raw text, use .contact.raw_text
*   relationship (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsCommunicationRelationshipArgument.t, default: nil) - A reference to a person by relationship name. eg. my father.
*   sensitiveStartByte (type: integer(), default: nil) - The beginning and end of the recipient name that should be removed before logging.




List of MediaAnnotation. Media annotators should use the MediaAnnotationList to annotate spans instead of MediaAnnotation. This prevents exponential explosion of interpretations (consider [play $song by $artist on $device]) and allows us to have simpler tests for grammar.

Indicates a reference to a particular state of affairs denoted by the expression encompassed by the FunctionCall this appears on. The state may be actual e.g. [new york is a city] : IsA.state(/m/new_york, /m/city) or not e.g. [1+1=3] : Addition.state(Sum=3, Addend=1, Addend=1) The state can also represent an proposition of an action, e.g. [cinar gave jason a cookie] : Give.state(Giver=cinar, Receiver=jason, Object=cookie) See go/mrf-polar-questions for details.

Contact creation timestamps and related metadata. See go/contact-edit-history. This message is a pure wrapper of the shared ContactCreactionContext message so that it can be a top-level person field. No other fields should be added to the message.


Represents the user’s role such as assistant only or manager for a device. Design doc: https://docs.google.com/document/d/1c1hnauEbBfDkywO3GZkI8ejHP765l2tLspmPgckEe2Y/
*   iamCheckRequired (type: boolean(), default: nil) - When true, role_type will be ignored, Nest IAM RPC will called to check authority.


Properties of visual mentions (e.g., how they are displayed to the user, visibility, etc.).


Segments (go/social-segments) represent structured social content, e.g. the contents of a G+ stream post or chat message. A single post or message may consist of a sequence of segments, each representing a type of content, e.g. plain text, hash tag, mention, etc. Segments correspond approximately to units of content delimited by HTML tags, so that a piece of bolded text would be a distinct Segment, a link would be a distinct Segment, and so forth. A single Segment may have multiple such qualifiers; e.g. it may be a bold link; in this case, information about all such qualifiers will be encoded in the Segment proto.

Represents a principal which possesses a particular, presumably secret, string. Useful for things like "auth keys," used for anonymous sharing. Since representing this principal with the actual secret included reveals the secret, it's best if the requisite condition is enforced in some other way, for example via Keystore wrapping attributes (Keystore will unwrap only if the specified secret, aka "attribute", is presented). All that's stored here is an identifying label.
*   label (type: GoogleApi.ContentWarehouse.V1.Model.SecurityCredentialsSimpleSecretLabelProto.t, default: nil) - A descriptive label to help identify a relevant ACL entry or otherwise disambiguate this instance.







Core Web Vitals (https://web.dev/vitals/) carried in VoltSignal: the field data metrics extracted from UKM aggregated 75-percentile data.

Represents the most compound resolved entities and most nested unresolved references for a span. Useful for punting.
*   mostCompoundResolvedEntities (type: list(GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceResolution.t), default: nil) - Resolved entities are sorted from highest resolution score to lowest.
*   mostNestedUnresolvedReference (type: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceReference.t, default: nil) - This is a merged representation of the compound reference having the most_compound_resolved_entities as an argument.

A StringType configures a value whose type is intended to be arbitrary text.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.
*   singleToken (type: boolean(), default: nil) - If true, this value will match a single token. If false, this value will match any nonzero number of tokens.


Describes the billing configuration for a new tenant project.
*   billingAccount (type: String.t, default: nil) - Name of the billing account. For example billingAccounts/012345-567890-ABCDEF.

Information associated with a docket. Note that multiple dockets can be combined and argued as one and produce a single opinion
*   DocketID (type: String.t, default: nil) - An alpha-numeric (usually, mostly numeric) string used to identify the case by the court
*   Petitioner (type: list(GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t), default: nil) - Who is bringing the action? (X in X vs. Y)
*   Respondent (type: list(GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t), default: nil) - Who is responding to the action? (Y in X vs. Y)
*   Topic (type: String.t, default: nil) - The "in re" or "matter of" field.




Commercial information for a volume (data from the Imprint PublishersVolumeInfo table in the db). An imprint is a subdivision of a publisher (for example, Bantam Books is an imprint of Randon House), or can even be just a grouping of volumes with common commercial attributes.
*   accessRights (type: GoogleApi.ContentWarehouse.V1.Model.OceanVolumeAccessRights.t, default: nil) - These capture "commercial" contract related access rights provided by partners for a volume.
*   adsId (type: String.t, default: nil) - Id used in the google ads system
*   allowAddingFrontmatterToPreview (type: boolean(), default: nil) - Are we allowed to add all the front matter to the preview in addition to the preview amount that is from percent_book_shown?
*   allowContinuousBrowse (type: boolean(), default: nil) - By default, we allow continuous browse. PFE provides a means for partners to opt out entirely or just specific books. This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   allowRetailSyndication (type: boolean(), default: nil) - By default, we allow retailer syndication. PFE provides a means for partner to opt out. This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   author (type: String.t, default: nil) - Beware: the author strings are not in fixed format..these can be comma separated or 'and' separated or have extra terms like 'et al' and sometimes have weird ones like 'no author' as these are fed in via a somewhat flexible free text tool.
*   bibkey (type: String.t, default: nil) - Commercial info comes with book identifiers like ISBN(or some bibkey), Title, Author. Passing these along as well with the commercials for better book identification/link up with rights.
*   buyTheBookText (type: String.t, default: nil) - Text to display in the buy-the-book blurb
*   buyTheBookUrl (type: String.t, default: nil) - ISBN/ISSN-parameterized URL to the imprint's site for buying a book. For ISBN-parameterized links, the ISBN value will be substituted in the cannonical 13-digit form.
*   canDownloadEpub (type: boolean(), default: nil) - iff true volume is available as Google Edition. This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   canDownloadPdf (type: boolean(), default: nil) - iff true and VIEW_TYPE=FULL_VIEW, then we will allow PDF download This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   canShowLibraryLinks (type: boolean(), default: nil) - Whether to show library links for the books in this imprint. This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   canUseMetadataCover (type: boolean(), default: nil) - It should be OK to use metadata covers normally, but we allow publishers to explicitly disallow them. This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   disableOtherBuyTheBookLinks (type: boolean(), default: nil) - Whether to disable other btb links for the books in this imprint. Show only btb link from this partner and remove everything else.
*   displayDetails (type: GoogleApi.ContentWarehouse.V1.Model.OceanVolumeDisplayDetails.t, default: nil) - Volume display specific attributes are kept in display_details This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   geBibkey (type: String.t, default: nil) - The ISBN supplied by publisher (or Google) for the Google Edition e-book. One day it should be an attribute of the tome cluster.
*   imprintId (type: String.t, default: nil) - The imprint id from the ocean devel db for this imprint.
*   imprintUrl (type: String.t, default: nil) - URL to the imprint's website, to go to upon a click on the logo
*   logoLocation (type: String.t, default: nil) - URL/location for the imprint's logo to display
*   percentBookShown (type: integer(), default: nil) - Percentage of book we are allowed to display This will be deprecated once UpdateVolumesReqHandler returns VolumeViewability.
*   promotionalUrl (type: String.t, default: nil) - We may allow imprints to run promotional campaigns. The following fields capture the blurb to display and the URL (ISBN-parameterized) link to provide.
*   publishedImprintName (type: String.t, default: nil) - Sometimes the Publisher/Imprint Name the book is published under is different from the current name and we may have this information.
*   pviRowid (type: String.t, default: nil) - Need a unique identifier for PFE records, using PVI ID
*   useBibdata (type: boolean(), default: nil) - Some records are deactivated, suppressed or excluded; we still want to hear about them, but we aren't going to be using their bibdata

A GConceptInstanceProto contains a GConceptID (which is the unique identifier of a GConcept, a category in the Geo Ontology).
*   prominence (type: String.t, default: nil) - The relative prominence of this category to this feature according to the data provider, as one of the values from the enum above. Prominence is a measure of how well the given GConcept describes the feature. An example is a gas station with convenience store and ATM. All three GConcepts are very relevant, but the gas_station GConcept is the most prominent. If the prominence of this GConcept is unknown, this field should not be set.


Relations between entities in the document. A relation is between two different entities in the document. A relation can have a number of mentions in the document. Next available id: 11
*   mention (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelationMention.t), default: nil) - Mentions of the relation in the document.
*   source (type: integer(), default: nil) - Source and target entity indices. These are indices into the entity array in the document. If this is an attribute relation the target is the index of a measure in the document.


Contains OCR text, its start time and additional details about position/fonts
*   ocrFeature (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOnScreenTextFeature.t, default: nil) - Additional details about position/font/color etc. for the OCR text
*   timeMs (type: String.t, default: nil) - The time in ms at which the OCR text appears on the frame




Example: "latest" would constrain the episode to a certain ordinal.
*   absoluteIndex (type: integer(), default: nil) - The absolute index of the episode. 1 is the first element and -1 is the last element in the sequence, -2 is the second-to-last element, and so on. Examples: "first episode" => 1 "3rd episode" => 3 "last episode" => -1
*   dateTime (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - Date/time of the message. This could be an absolute date/time (e.g. find my message from monday) or a date/time range (e.g. find my message in the past four hours). This constrains when the episode came out.
*   description (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaDescription.t, default: nil) - A description of the episode. Example: For the query: [listen to this american life about cars] the description would be "cars"
*   evalData (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t, default: nil) - Required, but should only be used inside Aqua and must not be used by outside clients!!
*   relativeIndex (type: integer(), default: nil) - The relative index of the episode. Examples: "previous episode" => -1 "current episode" => 0 "next episode" => 1

Wraps information about a user's location, if they have chosen to share it on their SearchCard.

Debug info about the concept annotations. Note that it might not be present in the output.
*   description (type: String.t, default: nil) - Only use for debugging, this should not be displayed to user or used for any kind of logic/processing.




A NormalizedStringType configures a value that is one of the listed normalized_values. An arbitrary mapping from input strings to normalized_values can be specified in the local intent config. Only alphabetical strings can be used as normalized_values. This type should NOT be used for: - Mids, ids, dates, or other structured data. Use an annotator instead, and address any quality issues at the annotator level. - Simplifying grammar rules. If you are not using the normalized_values in your question semantics, you should remove the slot. Use additional query_examples instead.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.




How and where to send notifications to this person in other apps, and why the requester can do so. See go/reachability for more info. "How" and "where" identify the recipient in a P2P Bridge (glossary/p2p bridge), and "why" may be helpful in a UI to disambiguate which of several ways may be used to contact the recipient. How: Via a Google profile or a reachable-only phone number that the requester has access to. Specified in the target "type" and "value". Where: Apps in which the profile/phone number owner may receive notifications. Specified in the repeated "app". Why: Which fields in, e.g., a contact associated with this person make the notification target info visible to the requester. Specified in the repeated originating_field param. Example: Alice has a contact Bob, with: Email 0 = bob@gmail.com Phone 0 = +12223334444 Phone 1 = +15556667777 Email 0 and Phone 0 let Alice see Bob's public profile (obfuscated gaia ID = 123). Public profiles are visible by email by default, and Bob has explicitly made it visible via Phone 0. Bob says people can send notifications to his public profile in YouTube. Phone 2 is associated with another Google profile that Bob owns, but he doesn't want others to see it. He is okay with people sending notifications to him in Who's Down if they have this phone number, however. There will be separate InAppNotificationTargets: one for Bob's public Google profile, and one for the second phone number, which is in his private profile. IANT #1 - targeting Bob's public profile (visible via Email 0 and Phone 0): app = [YOUTUBE] type = OBFUSCATED_GAIA_ID value = 123 originating_field: [ { field_type = EMAIL, field_index = 0 } // For Email 0 { field_type = PHONE, field_index = 0 } // For Phone 0 ] IANT #2 - targeting Bob's private profile phone number Phone 1: app = [WHOS_DOWN] type = PHONE value = +15556667777 originating_field: [ { field_type = PHONE, field_index = 1 } // For Phone 1 ]
*   originatingField (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiInAppNotificationTargetOriginatingField.t), default: nil) - There may be more than one field from which this IANT originates, as in the case of Bob's public profile.
*   value (type: String.t, default: nil) - The value of the target, used for delivery. E.g., the obfuscated gaia ID for a visible profile.


A speed limit whose value can change based on road, traffic, and weather conditions.





Metadata fields for Real World Journey. See go/rwj-kg-dg for details.
*   eligibleSurfaces (type: list(String.t), default: nil) - Int values correspond to the usecases used in CDS. See: google3/googlebase/verticals/model/usecase_id.proto.


A speech recognition result corresponding to a portion of the audio. This field is copied from cloud/speech/v1p1beta1/cloud_speech.proto. Amarna needs to have a standalone version as v1p1beta1/cloud_speech.proto is in the for of versioned proto and it breaks other prod code depending on Amarna's video schema.
*   alternatives (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageRepositorySpeechRecognitionAlternative.t), default: nil) - May contain one or more recognition hypotheses (up to the maximum specified in max_alternatives). These alternatives are ordered in terms of accuracy, with the top (first) alternative being the most probable, as ranked by the recognizer.
*   channelTag (type: integer(), default: nil) - For multi-channel audio, this is the channel number corresponding to the recognized result for the audio from that channel. For audio_channel_count = N, its output values can range from '1' to 'N'.
*   languageCode (type: String.t, default: nil) - The BCP-47 language tag of the language in this result. This language code was detected to have the most likelihood of being spoken in the audio.
*   resultEndTime (type: String.t, default: nil) - Time offset of the end of this result relative to the beginning of the audio. This field is internal-only and is used to order results based on their timestamps.







This holds SpamBrain values which will be populated to docjoins & muppet. Proto is copied from spam_brain::SpamBrainData and populated at sitechunked site level (as opposed to the spambrain page classifier score).

Link metadata, for LINK segments. Anchor text should be stored in the "text" field of the Segment, which can also serve as a fallback.
*   attachment (type: GoogleApi.ContentWarehouse.V1.Model.SocialCommonAttachmentAttachment.t, default: nil) - An Attachment represents the structured entity to which we are linking. It contains an Embed (apps/tacotown/proto/embeds/embed_client.proto) with fields specific to the appropriate type of linked entity. For example, if we are linking to a photo album, the Embed may include the album ID and gaia ID of the creator. Clients that understand the Embed type within the Attachment may construct and/or decorate their link appropriately e.g. to make use of type-specific functionality or first-party integrations. The link_target and (if appropriate) display_url fields must still be set even when an Attachment is present, so that clients who do not know how to interpret the Attachment can fall back to those fields, and render the Segment as an ordinary web link. N.B. Even when an Attachment is present, the intention of a "LINK" Segment is for the Segment to be presented inline with the rest of the text of a post or comment, with a clickable link or other UI suitable for inlining (though the client may modify the UI based on Attachment data, e.g. to add appropriate hovers, icons, etc.). When an entity is intended to be rendered separately from the main body of the post/comment, a separate Attachment proto can be added outside the set of Segments. N.B. Within the Attachment, fields of EmbedClientItem have their own visibility annotations, which should be enforced separately from Segment visibility annotations. See: apps/tacotown/proto/embeds/embed_annotations.proto
*   attachmentRenderHint (type: String.t, default: nil) - The hint to use when rendering the associated attachment. Ignored if there is no associated attachment.
*   displayUrl (type: String.t, default: nil) - If we wish to show the user a different (e.g. shortened) version of the URL for display purposes, then that version should be set here. If this field isn't set, link_target will be used for both purposes.
*   linkTarget (type: String.t, default: nil) - link_target is the URL to navigate to when clicked. This could be the original URL, or a URL signed by the GWS URL signing service.
*   linkType (type: String.t, default: nil) - LinkType is an optional field that provides additional information regarding link target. For example, link type can be identified as the SELF_LINK when the request was executed from the same link as the link target.
*   title (type: String.t, default: nil) - Title is an optional field that provides a short string that describes the link or its destination. User interfaces often use title as a tooltip or for accessibility purposes. However, they are of course free to present this data in any form. This field is plain text.

Artwork or Object in the Image Details

The set of capabilities that Lens can support. This is the Assistant proto representation of Lens capabilities defined at j/c/g/android/apps/gsa/search/shared/service/proto/lens_service_event.proto Next ID: 7
*   dining (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilitiesDining.t, default: nil) - The presence of this message means that Dining is supported.
*   education (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilitiesEducation.t, default: nil) - The presence of this message means that Education is supported.
*   outdoor (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilitiesOutdoor.t, default: nil) - The presence of this message means that Outdoor is supported.
*   shopping (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilitiesShopping.t, default: nil) - The presence of this message means that Shopping is supported.
*   text (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilitiesText.t, default: nil) - The presence of this message means that intenting directly into the text filter is supported.
*   translate (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilitiesTranslate.t, default: nil) - The presence of this message means that Translation is supported.

Constraint for visited, as in if a location has been visited before.








Groups together the LinkInfo for all locales.
*   debugTitle (type: String.t, default: nil) - A short human-readable name/title of the entity, similar to what is displayed at the top of a Hume page. Do not use for any production purpose as it does not provide guarantees for stability or policy checks (access requirements).
*   isBoostedPrimaryWeightLink (type: boolean(), default: nil) - Whether this is a BoostedPrimaryWeight link. For these links in some cases a higher weight is used for primary scoring.
*   targetMid (type: String.t, default: nil) - The mid of the linked entity.
*   variantInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefLinkInfo.t), default: nil) - The information about this link for each locale.

The identification information for third party devices that integrates with the assistant. All of these fields will be populated by the third party when the query is sent from the third party device. IMPORTANT: The definition of DeviceConfig proto is being moved to //assistant/api/core_types/device_type.proto. All existing references will be updated to point to the new location. If you are adding a reference, use the new one instead. Next Id: 5
*   deviceId (type: String.t, default: nil) - Unique identifier for the device. Example: DBCDW098234. Required







An attribute type configures a value whose type is intended to be a attribute defined in the schema.
*   attribute (type: list(String.t), default: nil) - Use in parsing: the value filled with must be in the list of this. If no attribute ids are specified, this value can be filled with any attribute.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   pivotEntitySlot (type: String.t, default: nil) - If exist, the attribute will be applied on the given pivot slot. This helps type checking when qrewrite constructs function calls with an attribute-typed slot.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.

A RoadConditionalProto defines conditions that affect when the road traversal information is applicable.
*   timeSchedule (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeScheduleProto.t, default: nil) - Specifies what times the information is applicable. This can be specific times (3-5 PM) or days of the week (Mon - Fri), as well as more general times like school hours, dusk to dawn, etc. If no value is set, the restriction is applicable at all times.
*   vehicleAttribute (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreVehicleAttributeFilterProto.t, default: nil) - Additional attributes that apply to the applied vehicle types.


Represents a single sitelink target, contains basic information used to display the target (such as url and title) and to, maybe, dynamically change the way targets are selected and/or ranked (such as score and is_mobile). Please update the TargetInternal message if you make a change to this proto. See "Note on adding new fields".
*   languages (type: list(integer()), default: nil) - The languages of the document, taken from its cdoc.properties().languages()
*   salientImage (type: GoogleApi.ContentWarehouse.V1.Model.WWWResultInfoSubImageDocInfo.t, default: nil) - The image data will be copied from the DocInfo response, and will be retrieved online, so this field should not be populated during indexing. This is a temporary field for experimentation.
*   snippetResponse (type: GoogleApi.ContentWarehouse.V1.Model.GenericSnippetResponse.t, default: nil) - The snippet response for the target document for an empty query.





A SemanticType configures a value determined by another source, in particular another intent or a semantic frame. See go/unifying-intents and go/framery.
*   allowAll (type: boolean(), default: nil) - If true, is compatible with a schema whose answer_type is any semantic_type including empty (since by default schemas return themselves as semantic_types (b/211438997). This is used primarily for slot composition. Example: for the slot name: Operand type { semantic_type { allow_all: true } entity_type {} }  An entity_type or a schema with answer_type 'entity_type' can fill Operand.  A schema with either (a) no answer_type or (b) answer_type with !semantic_type.names().empty() can fill Operand * A schema with answer_type 'date' CAN NOT fill Operand. Note that when there is an explicit answer_type, the 'self' semantic_type is not considered.
*   componentSpecificContracts (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t, default: nil) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
*   includesContainingIntent (type: boolean(), default: nil) - Determines whether or not the meaning schema that contains this semantic_type conforms to a function call with the name and arguments taken from the meaning schema. As it refers to the "containing_intent", this field should only be set in a semantic_type declared in an intent's type_members field. The behavior of this field is undefined in other cases, for example, declaring the type of an intent slot. On Assistant, we use meaning schemas for argument types to represent both function call values as well as a reusable tool to host other argument values (opaque types, normalized strings, subsets of entities) across intents. Teams need this information to run conformance checks and annotate new data. Example: If the intents below are in the intent catalog, then: - Intent(slot="some string") is conformant, because Type has string_type{} in its type_members. - Intent(slot=Type()) is not conformant, because Type has set semantic_type.includes_containing_intent to false. - Intent(slot=SubType()) is conformant, because type_members is not inherited. { id: "Intent" slot: { name: "slot" type: { semantic_type { name: "Type" }} } } { id: "Type" type_members { string_type{} semantic_type { includes_containing_intent: false } } } { id: "SubType" parent { id: "Type" relationship_type: SUBTYPE } }
*   name (type: list(String.t), default: nil) - Names of valid sources of the semantics (for example: a frame or an intent).
*   nameContracts (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpMeaningSemanticTypeNameComponentSpecificContracts.t), default: nil) - Like name_remodelings, but for ComponentSpecificContracts instead of remodelings.
*   nameRemodelings (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpMeaningSemanticTypeNameMeaningRemodelings.t), default: nil) - Contains data about current schema remodelings at the SemanticType name level. The "name" field contains all possible semantic type names and "semantic_type_name_remodelings" acts as an overlay to determine which ones to surface based on which schema remodeling IDs are requested. For more information see go/meaning-remodeling-framework.
*   remodelings (type: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t, default: nil) - Contains data about current schema remodelings at this ValueType lev©el. For more information see go/meaning-remodeling-framework.

A general-purpose buffer to contain sequences of samples. When representing a waveform, the samples are the scalar values of an acoustic signal. When representing a sequence of feature frames, the samples are vector-valued frames.
*   bitRate (type: number(), default: nil) - For compressed signals with fixed bitrate, this is the number of bits per second.
*   byteOrder (type: String.t, default: nil) - Byte-order of the atomic_type When atomic_type == "char", byte_order should be always "1". When atomic_type == "int16", byte_order can be either "01" (Intel) or "10" (Motorola). Byte order should default to Intel when in question.
*   details (type: String.t, default: nil) - Typically contains the parameter settings of the program that created the file.
*   dimension (type: list(integer()), default: nil) - Array dimensions for a single sample.  For audio samples:  mono: rank==0, dimension==[1]  stereo: rank==0, dimension==[2] (samples are interleaved)  For typical ASR features representing energy, 12 MFCC coefficients, and first and second derivatives: * rank==1 and dimension==[39].
*   elementsPerSample (type: integer(), default: nil) - The number of atomic elements stored per sample. This is the product of all the entries in the dimension array. Written "out of order" in this file to be close to the dimension field, from which it can always be computed.
*   rank (type: integer(), default: nil) - The rank of each sample. For a waveform (signals that are sequences of scalar values), this is 0. For vector-valued signals (used as signals containing sequences of features, for example), this is 1. scalar=0, vector=1, matrix=2, ...
*   sampleRate (type: number(), default: nil) - For periodic signals, this is the number samples per second, else 0.0
*   sampleType (type: String.t, default: nil) - Structure of each sample. "generic" means that the samples are multi-dimensional arrays of atomic_type with the specified rank.
*   startTime (type: number(), default: nil) - Time origin for the signal, in seconds. Warning: Using float can result in rounding errors: float's smallest distance between two representable values (1 ULP; see https://en.wikipedia.org/wiki/Unit_in_the_last_place) between 1024 and 2048 (representing ~17-34 min) is 0.0001220703125, what is approximately double of what we need to represent 1 sample in a 16 kHz sample rate audio. The error is double in the 2048s-4096s, 4x in the 4096s-8192s range etc. Higher sample rate encounters rounding errors earlier: with 96 kHz, rounding errors start at ~2 min (128s).
*   totalSamples (type: String.t, default: nil) - The number of samples in file. Can be inferred for generics from file size.


Specifies usage of equirectangular projection. More specifically, these are the proportion of projection cropped from each edge not covered by the video frame. For uncropped frame, all values are 0. For v1 metadata, this contains CroppedArea information (CroppedAreaLeftPixels, CroppedAreaTopPixels, CroppedAreaImageWidthPixels, CroppedAreaImageHeightPixels)


Holds information about the source of the funding entry.
*   ClearedFunding (type: String.t, default: nil) - Set when we clear all extracted funding from this citation in the parser.
*   DebugFundingTextBlock (type: String.t, default: nil) - Text block context from which the funding entry was extracted. Optionally filled and intended to be used for offline analysis.

A message representing the signals associated with an argument. NEXT ID TO USE: 62 For //depot/google3/logs/proto/knowledge/interpretation/intent_query.proto in the "ThenChange", fields under Argument.signals in the serving proto are stored directly under Argument on the logging side. For example, see http://google3/nlp/semantic_parsing/data_management/logs/web_logs/semantic_logging_converters/semantic_logging_request_argument_converter.cc?l=58&rcl=322925428. LINT. IfChange
multipleHorizontalListSelectionMatches (type: boolean(), default: nil) - Whether there were multiple equally good matches from horizontal_list_selection.  oysterId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - The oyster feature id. NOTE: As of Mar 2017, the cell ID field of the feature ID might not be set. See http://b/35447230#comment10  isDefaultValue (type: boolean(), default: nil) - If true, the value of the argument is populated with the default value specified by the system if the value can't be inferred from the input query. In IntentConfig case, the default value is specified by using IntentConfig.slot.default_value.  isNimbleAnnotation (type: boolean(), default: nil) - Whether this argument was annotated by nimble (go/nimble-annotator)  personalEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryPersonalEntity.t), default: nil) - Personal entities are compound entities made up of entities and their attributes, where the entities can be compound too. E.g., "my father's mother" can have a summary node annotation of "Mother(Father(Myself))"  valueSource (type: String.t, default: nil) - What added the argument value.  isEnum (type: boolean(), default: nil) - Set when the argument has an enum value - a normalized_string_type from the intent catalog.  isGenieAnnotation (type: boolean(), default: nil) - Whether this annotation was propagated as part of a Genie rewrite (go/genie-aqua).  midEquivalentToCollection (type: String.t, default: nil) - For collection arguments, it is useful to save what was the original mid that qref annotated. For example, if the collection is /collection/films, we'll have the mid for /en/film here (/m/02vxn).  provenance (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance.t), default: nil) - Information about where the value of this argument came from. For example, it could have been explicitly provided in the query, pulled in from the previous state, or pulled from attentional entities.  relatedEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingRelatedEntity.t), default: nil) - List of entities that are semantically related to the argument as well as details of the relationship.  isAUngroundedTypeOf (type: String.t, default: nil) - If the argument is entity, the ungrounded type the entity is. For example, the entity argument is /m/0p83l (Jasmine), the value of this field should be "Plant" if it is present.  gaiaId (type: String.t, default: nil) - The gaia id for the entity (person or plus page).  fromManualSymbolAnnotation (type: boolean(), default: nil) - Whether the argument entity comes from a manual graphic symbol annotation. This is later used as a heuristic for poor web result quality.  rawQueryText (type: String.t, default: nil) - A copy of the span of canonical (raw) parser input text corresponding to this annotation.  addedByCloseAnswers (type: boolean(), default: nil) - Whether this argument was added by CloseAnswers in Postref. This bit is used to mark the corresponding interpretation/intent query as such by setting is_close_interpretation bit.  contextResolution (type: String.t, default: nil) - How this argument was resolved through context from a previous query. Examples: obama -> "he" is resolved from the Obama entity starbucks -> Q2 is resolved from the list of shops (Attentional Entities)  locationClassificationScore (type: float(), default: nil) - Confidence score of this argument being a location.  clusterInfo (type: GoogleApi.ContentWarehouse.V1.Model.QualityViewsExtractionClusterInfo.t, default: nil) - If the literal.obj_type of the argument value is ID (Entity), this stores cluster scoring information for that entity, if the entity belongs to a cluster.  resolvedFromContext (type: boolean(), default: nil) - Whether this argument was resolved through context from a previous query. Examples: obama -> "he" is resolved from the Obama entity starbucks -> Q2 is resolved from the list of shops  mediaEntitySignals (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMediaEntitySignals.t, default: nil) - Signals about the media entity for this argument.  ungroundedValueType (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersValueType.t, default: nil) - Type of ungrounded argument. It is exclusively used when simple_value.ungrounded_value is populated.  locationType (type: String.t, default: nil) - The type category for the location stored in this Argument, if it exists.  parsedDueToExperiment (type: list(String.t), default: nil) - Experiment ID for experiments that were used to parse this FunctionCall. Empty indicates no experiments used.  locationMarkersSignals (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocationMarkersSignals.t, default: nil) - The usual semantic role associated with the signal from lightweight tokens attached to this argument span.  qrefInterpretationIndex (type: integer(), default: nil) - The index of the QueryJoin interpretation from which this annotation is taken. We copy over the value given by nlp.semantic_parsing.annotators.QrefAnnotator. The value will be "-1" if the annotation is coming from low confidence Qref annotations. NOTE - this is generated from as QRef's interetation_number.  collectionMembership (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryCollectionMembership.t), default: nil) - If the literal.obj_type of the argument value is ID (Entity), this represents the collection that the entity in this argument is a member of.  resolvedFromPronoun (type: boolean(), default: nil) - Whether this argument was resolved from a pronoun mention in the query. Eg: [how old was obama when he became president]  fromSymbolAnnotation (type: boolean(), default: nil) - Whether the argument entity comes from a graphic symbol annotation. This is later used as a heuristic for poor web result quality.  qrefConfidenceScore (type: number(), default: nil) - The QRef confidence score for an entity argument.  deprecatedFreebaseType (type: list(String.t), default: nil) - If the literal.obj_type of the argument value is ID (Entity), this represents freebase types of the entity in this argument.  resultSupport (type: list(GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport.t), default: nil) - The list of result supports for this Argument.  entityNumber (type: integer(), default: nil) - Signals about what other entities this entity implies / is implied by. This is useful for grounding. Example: b/138388207: suppressing song intents if the artist entity doesn't link to the song title. This value specifies the order of annotations in a QRef annotation chain so they can refer to each other.  isIntentgenAnnotation (type: boolean(), default: nil) - Whether this argument was annotated by Intentgen QUIK model (go/intentgen-quik)  entityRelationship (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotationEntityRelationship.t), default: nil) - Signals about what other entities this entity implies / is implied by. This is useful for grounding. Example: b/138388207: suppressing song intents if the artist entity doesn't link to the song title.  webrefEntitiesIndex (type: integer(), default: nil) - Webref entity index for this argument, necessary for interpreting the relationship structure, and the list to index into. Specifically we need this to understand qref implications since they edges are represented with entity indexes.  isEvalDataHeuristic (type: boolean(), default: nil) - Set when the eval_data was not derived at parsing time, but heuristically determined by matching the ArgumentValue to an annotation/query fragment.  mergedImpliedEntity (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryImpliedEntity.t), default: nil) - List of QRef implied entities merged into this entity during parsing. Clients should not rely on the order, as it is derivation-dependent.  expressionStatus (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus.t, default: nil) - Status indicating whether the user has completely expressed the semantics of the argument.  webrefListSource (type: String.t, default: nil) - This represents which list entities index refers to.  deprecatedSupportingMid (type: list(String.t), default: nil) - A list of mids that "support" this argument in voting, i.e., results that support these mids will be treated as if they support the argument. This field has been deprecated in favor of related_entity. b/27363861  chainId (type: list(GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId.t), default: nil) - One or more ChainIds from a ChainAnnotation whose "organization_mid" matches the MID. As of 2021-01 multiple chain_ids may be specified if the organization for MID controls multiple chains. See go/chains-lckp-robust-triggering for motivation.


Specifies whether a video has an introduction part that can be skipped. An introduction is the beginning part of a video that can be safely skipped without impacting user's understanding of the overall video content.
*   hasIntro (type: boolean(), default: nil) - If set to true, it means the video has an introduction spanning from intro_start_ms to intro_end_ms.
*   introEndMs (type: String.t, default: nil) - Timestamp of the end of an introduction. Will only be set if has_intro is true. Indicates video may be skipped to this timestamp with minimal impact on understanding the overall video contents.
*   introStartMs (type: String.t, default: nil) - Timestamp of the beginning of an introduction. Will only be set if has_intro is true. This value may be nonzero.


Next available tag: 35. Represents all the information that we have for a given entity.
*   annotatedEntityId (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefWebrefEntityId.t, default: nil) - The id of this entity, prefer accessing through webref-entities-util.h functions.
*   cdoc (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSimplifiedCompositeDoc.t), default: nil) - This field contains reference pages for this entity. A reference page is a page that is highly topical for this entity, which can be used to mine additional information about this entity. Example reference pages for Apple Inc. would be the composite docs for "http://en.wikipedia.org/wiki/Apple_Inc." and http://www.apple.com. For actors or movies, you can also have the imdb page. Also see: http://go/refx-pages.
*   contextNameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefGlobalNameInfo.t), default: nil) - The context names (with scores) of this entity. The difference to regular names (aka name_info) is that context names are not used for finding mentions in a document as they consist of names somehow related to the entity (e.g. name "fisherman s wharf" for the entity "Gary Danko"). Used for reconciling freebase and oyster.
*   enricherAnnotatorProfile (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatorProfile.t, default: nil) - Optional profiling data from the enricher that enriched this entity (and produced this EntityJoin as debug output).
*   enricherDebugData (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEnricherDebugData.t, default: nil) - Contains debug data produced by enricher and only used for debug purpose (e.g. demo).
*   extraData (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExtraMetadata.t, default: nil) - Additional metadata about the entity, that can be derived from the "raw data" (composite doc, domain specific data...), or come from other sources. Despite its name, this field often contains quite important information.
*   humanRatings (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefHumanRatings.t, default: nil) - Human ratings (e.g. ratings from EWOK). This is typically only populated in the evaluation pipelines (e.g. P@5).
*   linkInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefGlobalLinkInfo.t), default: nil) - Contains all links (with scores) that Webref knows for this entity. Links are relationships between entities. The data in this field is very important for the quality of the model.
*   nameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefGlobalNameInfo.t), default: nil) - Contains all names (with scores) that Webref knows for this entity. The data in this field is very important for the quality of the model.
*   refconNameInfo (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRefconRefconNameInfo.t), default: nil) - Contains names and names metadata used by Refcon.
*   representation (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDomainSpecificRepresentation.t), default: nil) - An entity can have metadata from various data sources. Generally speaking all sources will be / should be reconciled into a single KG Topic entry. However, in some cases we pull in additional chunks of metadata from these sources; these are stored in this field. For example a local business could have a KG entry (topic proto), wikipedia entry (WikiJoin) and a MapFacts entry (Feature proto).

Values are effectively a union of several possible Knowledge Graph types: simple primitive datatypes such as booleans, integers and floats, references to other Knowledge Graph topics (by id), or "compound values" which are expressed as embedded topics with associated properties and values. Values occur in indexed order (if any).
*   boolValue (type: boolean(), default: nil) - key, uri, or datetime. Present when value is bool.
*   citation (type: GoogleApi.ContentWarehouse.V1.Model.FreebaseCitation.t, default: nil) - Citation data for this value. See: http://go/kg-clap
*   compoundValue (type: GoogleApi.ContentWarehouse.V1.Model.FreebaseTopic.t, default: nil) - Compound values are those that contain either a number of simple valued facets (such as a latitude/longitude pair), or "mediator" topics representing multi-dimensional relationships between topics. In both cases we represent them here with an embedded topic, although the topic's identity is somewhat secondary to the property/value pairs it contains. (The identity is still made available so that it can be used to perform updates to that mediator on the Knowledge Graph.)
*   deletionProvenance (type: list(GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgTripleProvenance.t), default: nil) - Deletion provenance for this value.
*   displayLang (type: String.t, default: nil) - The lang of the display_value field.
*   displayValue (type: String.t, default: nil) - The display value of this value. This is a i18n-aware formatted value if present.
*   expectedProto (type: String.t, default: nil) - An optional name for a proto field.
*   floatValue (type: float(), default: nil) - Present when value is float.
*   idValue (type: GoogleApi.ContentWarehouse.V1.Model.FreebaseId.t, default: nil) - Present when value is an id.
*   index (type: String.t, default: nil) - Index of the value relative to the containing property (if any). Knowledge Graph supports a loose notion of indexing: some non-unique properties may have indices, while others may not. Furthermore, for a single property, some values may have indices (such as the top 5 actors in a film), while others may not (the film's supporting cast). Un-indexed values will appear at the end of the repeated value list. This field contains the index value only when is present in the Knowledge Graph.
*   intValue (type: String.t, default: nil) - Present when value is int.
*   lang (type: String.t, default: nil) - Whenever the value is text with TYPE_TEXT, the lang field is populated with the III LanguageCode associated with the string_value field.
*   nestedStruct (type: GoogleApi.ContentWarehouse.V1.Model.FreebaseNestedStruct.t, default: nil) - Populated if this value holds NestedStruct. 'type' field needs to be set to TYPE_NESTED_STRUCT.
*   provenance (type: list(GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgTripleProvenance.t), default: nil) - Provenance for this value.
*   rawValue (type: String.t, default: nil) - Similar to string_value/etc but contains raw bytes.
*   stringValue (type: String.t, default: nil) - Present when value is text, enum,
*   timestamp (type: String.t, default: nil) - The ISO-8601 timestamp corresponding to when this value was created (when it was written to the Knowledge Graph). Deprecated in favor of timestamp_usec.
*   timestampUsec (type: String.t, default: nil) - The microsecond timestamp corresponding to when this value was created.

Processor timings as produced by NestedPerfCounter, see google3/repository/webref/base/nested-perf-counter.h.
*   processorCounters (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProcessorCounter.t), default: nil) - Document counters defined by processors. A processor can add and increment counters with NestedPerfCounter::IncrementCounterBy. See go/webref-annotator-metrics.


The value is carried over from either the previous winning IntentQuery or an entity annotated by QRef in a previous query. For example: U: How old is Obama. [Age(person=/m/obama)] G: Barack Obama is 56 years old. U: Who is his wife. [Spouse(person=/m/obama)] The "person" argument would have a provenance of PREVIOUS_QUERY. However, if a dialog publishes an attentional entity for "Obama", the "person" argument can have a provenance of ATTENTIONAL_ENTITY instead. This includes arguments with provenance that spans both the current and previous query.
*   currentQueryEvalData (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t), default: nil) - The span(s) in the current query where the value comes from. This is used when the argument spans both the current and previous query. Eg jfk death -> [death, when] spans both queries.
*   evalData (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t), default: nil) - The span(s) in the query where the value comes from.
*   eventId (type: GoogleApi.ContentWarehouse.V1.Model.EventIdMessage.t, default: nil) - The event ID of the query where this value was pulled from.


Define Reminder Client Type. This field is for the purposes of 1) UX Customization: Reminder frontends can be configured to have a slightly different UX (e.g., A customized button on Hubpage. A customized notification layout.) 2) Metrics: Client can count how many Reminders with a certain client type are retrieved/mutated. (e.g., VEIDs in go/oparaw.) 3) Index: ListReminder can list all Reminders with a certain client type. 4) Visibility control: some frontends (identified by provenance type, shortn/_xVC9nY2Eb8) only have access to a subset of client types.

The value was carried over from the previous function call. For example: U: Create an alarm titled "Wake". [CreateAlarm(title=Wake)] G: Sure, at what time? U: 5 am. [CreateAlarm(title=Wake,time=5am)] On the second user query, the "title" argument would have a provenance of PREVIOUS_TASK_STATE.

////////////////////////////////////////////////////////////////////////////// Conjunction: a single AND clause that contains multiple disjunctions.
*   disjunctionId (type: list(String.t), default: nil) - disjunction_id / is_positive MUST have the same length. They specify a set of disjunctions that make up this conjunction. The conjunction will be active iff all of the positive disjunctions are active and all of the negative disjunctions are inactive.

Data streams refer to additional data separate from audio and video streams For example: camera motion metadata (see http://go/wally-format) Available tags: 4+
*   streamIndex (type: String.t, default: nil) - Index of the stream in the file

Contains anchor set level features that apply to all anchor types.
*   dolphinDescriptivenessStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - A summary of the Dolphin descriptiveness scores of the anchors in the set.
*   dolphinUsefulnessStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - A summary of the Dolphin usefulness scores of the anchors in the set.
*   mumDescriptivenessStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - A summary of the MUM descriptiveness scores of the anchors in the set.
*   mumUsefulnessStats (type: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t, default: nil) - A summary of the MUM usefulness scores of the anchors in the set.


A message containing embedding information and localization scores using the VSS product recognition module.
*   productSets (type: list(GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryShoppingProductInformationVersionedProductInformationSet.t), default: nil) - Information about versioned product sets found. There will be at most two versions present. The results from the current version of the models used in VSS and the results from the previous version of the models used. Note that not all products may have two version since the model might detect the product in one version and not the other.




The dataset in downloadable form. There can be multiple data download entries for different file types. Next ID: 6
*   contentSize (type: String.t, default: nil) - Size of the download, as a string from the provider. May include units.
*   fileFormat (type: String.t, default: nil) - File format at the link (ASCII, CSV, etc.)








The field ACL. Currently only populated on profile fields for the profile owner. A Person field ACL; see http://go/peopleapi-acl
*   aclEntry (type: list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiFieldAclAclEntry.t), default: nil) - A custom type of field ACL entry. The set of all ACL entries includes those listed in acl_entry as well as predefined_acl_entry.
*   authorizedViewers (type: list(String.t), default: nil) - Set of users that will be authorized to view the field by this field ACL. If the ACL is public, this will only contain ALL_USERS. This field is synthesized, read-only, and currently only used for profile photos. It's populated under "person.photo.metadata.field_acl" for the current photo ACL and "person.photo.metadata.acl_choices" for available photo ACL choices. Note: The set of authorized viewers for a given FieldAcl may depend on the user's account type and domain configuration. For example, a PRIVATE_READ FieldAcl could have any of the following authorized viewers: Consumer user: [IDENTITY_ACL_ESTABLISHED] Dasher user without domain contact sharing: [IDENTITY_ACL_ESTABLISHED] Unicorn user: [SAME_UNICORN_FAMILY] Hafez user: []
*   predefinedAclEntry (type: list(String.t), default: nil) - A common type of field ACL entry. A predefined ACL entry is a shortcut for a commonly occurring case of role and scope. For example, PUBLIC_READ is the same as an AclEntry with role = READER and scope.all_users = true. The set of all ACL entries includes those listed in acl_entry as well as predefined_acl_entry.


The role that this data played in the previous query.

Constraints for the occupancy of a hotel or vacation rental.
*   minNumBathrooms (type: float(), default: nil) - It is possible to have fractional bathrooms.

A feature used to represent a logical level, e.g. floor. A feature belonging to a given level should point to the level feature using relation RELATION_ON_LEVEL. The standard feature properties are interpreted as follows: name - Levels should have names according to the following:  Short, elevator-style names, such as "L" for "Lobby" and "2" for "Second floor", must be included and must be tagged with FLAG_ABBREVIATED. There must be an unambiguous "best" abbreviated name.  Longer names such as "Ticketing" or "Upper Level" may be present when the level has a specific name. * Non-abbreviated names should only be added if they are known to meaningfully expand upon the abbreviated name. For example, the long name "Observation Deck 2" for the abbreviated name "OD2" is a good additional name. In contrast, the name "Level 2" for the abbreviated name "2" is not desired. address - This should always be empty. point, polyline, polygon, center - These should never be set (since we are representing a logical entity). preferred_viewport - This should be the approximate extent of the level. child - This should always be empty.
*   building (type: list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t), default: nil) - The building(s) to which this level belongs. A level will typically belong to a single building, but it is valid for a single level to be shared by multiple buildings (for example, a large underground parking lot). These buildings refer back to the level via another strong reference (the BuildingProto.level field).
*   number (type: number(), default: nil) - The elevation of this level relative to the ground level, in levels. 0 = ground floor (even in locales that call the ground floor "1st floor"); 0.5 = between ground and first floor, eg mezzanine; 1 = first floor (one level above ground floor); -3 = three levels below ground floor.

Features to be passed from Media GP to HGR. Next ID: 21
*   entityMid (type: String.t, default: nil) - Mid of the media item. This is currently only used in manual rules.
*   hasCastVideoDeeplink (type: boolean(), default: nil) - True if the candidate has a CAST_VIDEO deeplink regardless of which provider was chosen.
*   hasTypeSemanticEdge (type: boolean(), default: nil) - True if the argument's type was explicitly mentioned in the query.
*   isCastVideo (type: boolean(), default: nil) - Whether the candidate is YouTube CAST_VIDEO candidate. CAST_VIDEO is a deeplink platform. This signal will be used to promote YouTube Music screenful candidates with CAST_VIDEO platform for free users because free users cannot get exact entities in screenless response and can get exact entities with ads in screenful response.
*   isExclusiveOriginalProvider (type: boolean(), default: nil) - True if the media item in Binding Set is exclusively available on the provider in Binding set. Example: "Stranger things" is exclusive to "Netflix".
*   isMediaSearchQuerySubsetOfEntityNameAndArtist (type: boolean(), default: nil) - True if the media search query is included in the entity name and artists.
*   isSeedRadio (type: boolean(), default: nil) - True if the media deeplink has tag SEED_RADIO.
*   isYoutubeMusicSeeking (type: boolean(), default: nil) - Indicates whether this is youtube content seeking music.
*   mediaAccountType (type: String.t, default: nil) - Account Type of the user for the provider
*   mediaContentType (type: String.t, default: nil) - MediaAquaAction::media_content_type from interpretation. It can be used for cross-content type ranking, for example, if a candidate's content type does not match this content type from interpretation, this candidate will be slightly demoted. Also, we might avoid fetching some signals when the content type is generic music, since some content types do not need ranking.
*   mscRate (type: number(), default: nil) - MSC(Media Short Click) rate. MSC rate = total number of MSC events / total number of MSC candidates The event is considered as MSC candidate if the event is a media seeking query(excluding follow-ons) and the media result is successfully fulfilled. The event is MSC event if any of the following is in the following queries within 30 secs: FOLLOWED_BY_DUPLICATE FOLLOWED_BY_ADD_OR_DELETE_MANUAL_REFINEMENT FOLLOWED_BY_SAME_VERTICAL (MEDIA) FOLLOWED_BY_STOP More details: go/media-ranking, go/billboard-navboost, go/magma-music-actions-efrac
*   scubedPSaiMusic (type: float(), default: nil) - Scubed predicted SAI value (pSAI - SCUBED_MUSIC_ACTIONS) for music populated by a regression model that incorporates a BERT model signal as well as other Scubed signals.
*   scubedPSaiTvm (type: float(), default: nil) - Scubed predicted SAI value (pSAI - SCUBED_TVM_ACTIONS) for music populated by a regression model that incorporates a BERT model signal as well as other Scubed signals.

Information about the result support for a given interpretation.
*   debug (type: String.t, default: nil) - A debug message that summarizes how the score was computed. Populated if result was matched and in debug mode.
*   docid (type: String.t, default: nil) - The docid of the result, if available.
*   estimatedNaviness (type: number(), default: nil) - The naviness for this result. Each matcher can determine the naviness to use for the result. This can be copied directly from the result, or estimated based on clicks or some other heuristic. The value should be between 0 and 1 and should indicate the probability that the user will click on that result. The estimated_naviness is used to break ties when between results with the same rank.
*   provenance (type: list(GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupportProvenance.t), default: nil) - All provenances of this result support.
*   rank (type: integer(), default: nil) - The 0 based rank for this result. When the source is MAIN_GSR this corresponds to the index of the result in the generic search response specific in AddKnowledgePackerPreprocessors. Otherwise, the rank should be estimated so the result is closest in importance to the web result at the same rank.
*   score (type: number(), default: nil) - A score from 0 to 1 inclusive that represents the strength of the result support. A score of one indicates this result is entirely about this interpretation.
*   source (type: String.t, default: nil) - The source of the result support.
*   url (type: String.t, default: nil) - The result url when available.




A text span in the search text snippet that represents a highlighted section (answer context, highly relevant sentence, etc.).


Specifies the compass heading, pitch & roll for the origin of the projection. The origin for the "equirectangular" projection is the center of the image. The origin for the other projection types is defined as the location in the image that corresponds to the origin of an "equirectangular" projection.

expressions: "every Monday after December 1" "every morning starting from this Friday". Note: if a recurrent DATE/TIME expression is bounded (limited by a finite interval or a finite count), e.g., "every monday in the next 3 months", "... at 11:00am every Monday for 4 times" the grammar will resolve it to a finite number of |range|s. Next available ID: 17.
*   countRestriction (type: integer(), default: nil) - How many times it repeats.
*   exception (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t), default: nil) - An arbitrary exception to the recurrence. This can be an absolute point, a relative, a range or a recurrent expression. Examples:  "every Tuesday except for July 13th 2021"  "every Tuesday except for July 13th and November 2nd"  "every second Monday except during the summer"  "everyday except Thursdays" * "every Friday, except from October 1st to October 22nd"
*   frequency (type: integer(), default: nil) - |frequency| is used to represent the frequency of the recurrence over a given recurrent period. E.g. "twice a week", "once a month". An unknown frequency is represented with 0, as in just "repeating".
*   period (type: integer(), default: nil) - |period| and |unit| specify how often |start_point| or |start_range| repeats. |period| should not be 0.
*   restriction (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) - A recurrent expression can be restricted by either a datetime |restriction| or |count_restriction| below. The restriction datetime can be expressed as an explicit range a relative datetime expression, a datetime point or a recurrent datetime. E.g. "every monday [next month]", "every second tuesday [this year]", etc. If |period| is > 0 and |restriction| is not set, repeat indefinitely. Note that this can support recurrent expressions as |restriction| as well. For example in the expression "every monday on [every other month]" where [every other month] is a restriction expressed as a recurrent datetime.
*   start (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t), default: nil) - |start| is used to represent the starting points, ranges or relative datetims in a recurrent expression, for example: "every morning", (range) "everyday at 5 pm", (point) "every second monday" (relative) |start| should never contain a recurrent element.
*   startPoint (type: list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeAbsoluteDateTime.t), default: nil) - DO NOT USE: deprecated fields soon to be removed.
*   target (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeTargetToFetch.t, default: nil) - The target to be fetched. This could be a named day-of-week or month (e.g., "Monday", "April"), or a date/time unit (e.g., "day", "week", "month").
*   timeInterval (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity.t, default: nil) - |time_interval| is a time amount or duration, used to described the time interval between the instances of the recurrence. (e.g. "every 3 hours", "every 35 minutes", "every 2 months and 15 days", etc)





Multi-label classification output. It contains the output for each vertical. The output for some verticals can be empty, in case that vertical is not supported by the classifier or if the set of verticals was restricted using MultiLabelClassifierInput.verticals.

This message is used internally in Amarna and is also used to store information in the VideoWebAttachment portion of the websearch index. Only the following fields will be used in the index: VideoPreviewType type int32 width int32 height byte byte_size If more fields are added, please update this list.
*   duration (type: integer(), default: nil) - TODO (yzliu): consider using duration_ms as field name since it is number of milliseconds. Duration of the preview in ms.
*   expirationTimestampMicros (type: String.t, default: nil) - Expiration timestamp of preview in microseconds since epoch.
*   state (type: String.t, default: nil) - Indicates the state in Venom for this preview type.
*   timestamp (type: integer(), default: nil) - Timestamp of start of preview in ms.
*   videoSegmentEndUs (type: String.t, default: nil) - The end timestamp of the video segment in microseconds that this preview is generated from. Used for segmented video previews.
*   videoSegmentStartUs (type: String.t, default: nil) - The start timestamp of the video segment in microseconds that this preview is generated from. Used for segmented video previews.

Information that can be used to display the entity (e.g. title, image...).
*   displayName (type: list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDisplayName.t), default: nil) - Per language display name from reliable sources.

Specifies how each piece of the name should be handled. Names are structured into given name and family name and this allows an independent specification for each of these pieces. Very limited preprocessing is done for this option (leading whitespace trimming mostly). Composed names are treated as a single unit and are not broken down.
*   hideAll (type: boolean(), default: nil) - Completely omit that part of the name.
*   showAll (type: boolean(), default: nil) - Show the complete name. Note that this does not express the same semantics as show_first_n_chars=length_of_name, because when regenerating a shortened name the new name could have more characters, thus yielding a different result.
*   showFirstNChars (type: integer(), default: nil) - Show first n characters. Same note about characters referring to "grapheme_clusters" applies.
*   showInitial (type: boolean(), default: nil) - Show only the initial, i.e., a single character. Note that "character" refers to "user-perceived" characters, aka a "grapheme cluster". See go/morphology for more details.
*   truncationIndicator (type: String.t, default: nil) - Which truncation indicator to use after the shortened piece of the name. Will be ignored for the hide_all or show_all options.

Output that indicates a url should be in our corpus.
*   selectorId (type: String.t, default: nil) - Indicate which selector has made the decision.

The name broken down into its various components, such as core court, state, and district

The uplift-per-cluster values used in Tundra's uplift arm.

A message representing the value of an argument. All types in the "value" oneof should have a corresponding field in the ValueType or OpaqueType protos defined in knowledge/answers/config/value.proto. This is specified by annotating each ArgumentValue type with options of the form (value_type_name) = A unit test ensure that this field is set and is valid for all types in ArgumentValue. A small number of special cases (such as funcall and simple_value) are allowed to omit the annotation. See intent_query_proto_test.cc for details. Note: If you are trying to add a new OpaqueType, stop; OpaqueType is deprecated, refer to go/opaque_type for details. If you think this is the only way to implement your feature, attend an office hours (go/meaning-help) and discuss with the MRF team. Next Id: 41
funcall (type: GoogleApi. ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCall.t, default: nil) -  Fully supported types  An argument can also be a function call.  complexQueriesRewrite (type: GoogleApi.ContentWarehouse.V1.Model.QualityGenieComplexQueriesComplexQueriesOutputRewrite.t, default: nil) - Custom type used by Complex Queries. This is populated based on the output of the RPC to the Complex Queries Boq node.  componentReference (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefComponentReference.t, default: nil) - Component reference between WebrefEntity and Mention. This should only ever be set in argument values in WebrefEntities (e.g. in a QueryJoin). The processing expectation is that the value including the component reference is discarded altogether and replaced by reference target. Use QueryJoinToMeaningStructConverter to perform the replacement. An example value parallel to this reference may exist, but it's meant purely for human consumption and should not be used.  personalIntelligenceEntity (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingPersonalIntelligenceEntity.t, default: nil) - Entity parsed from manual grammar interpretation in the Personal Intelligence domain.  sensitiveValue (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySensitiveArgumentValueGuard.t, default: nil) - Sensitive value, see go/sensitive-intents and go/a4w-multi-turn-dialog  onDevice (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsOnDevice.t, default: nil) - OnDevice custom types. Device on which an intent should be fulfilled. Differs semantically from device fields used by Media and HomeAutomation: this is annotated by the on_device subgrammar, and will not output any metadata beyond what the subgrammar outputs. See go/on_device_induction_quality.  coreference (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryCoreference.t, default: nil) - A value that is a coreference or variable binding to some other part of the tree. See go/mrf-variables.  sensitivity (type: list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersSensitivitySensitivity.t), default: nil) - Argument level query sensitivities. 1) Statically defined Sensitivity is copied from IntentSlot at serving time so it can be propagated along with FunctionCall to places where the Intent Catalog is not available. See go/sensitive-intents for details. 2) For the same reason, contextual sensitivites (eg., from AttentionalEntity mentions) are populated here too. See go/tagging-sensitive-ae for details.  simpleValue (type: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySimpleValue.t, default: nil) - When literal is a datetime, it's really just an ISO 8601 datetime string. This case will eventually be replaced with the date_time field, which is more expressive and can also represent recurrences, ranges, etc. Likewise, simple_value will replace the other types of simple values that literal is currently being used to represent.  device (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaCastDeviceAnnotation.t, default: nil) - Media custom types. For example use, see go/valyrian-media-dd.  narrativeNewsProvider (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsNarrativeNewsNewsProvider.t, default: nil) - Custom type used by NarrativeNews. This is populated by the narrative news provider annotator, and it differs semantically from a mid for a news brand in that it doesn't refer to the field of widely known news brands but rather but to the specific audio news RSS feeds that the narrative news feature serves. (There is of course substantial overlap between those two concepts)  recurrence (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsRecurrence.t, default: nil) - Represents: intervals of recurrence for repeated tasks. See go/recurrence-subgrammar Annotated by: recurrence subgrammar.  messageNotification (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesMessageNotification.t, default: nil) - Custom type used by tap-to-read for embedding a MessageNotification message in a GetMessageContent intent.  aogSlot (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingProtoActionsOnGoogleAogSlot.t, default: nil) - Custom type used by actions-on-google in-dialog queries. See go/3p-custom-intents-wrt-meaning-catalog  dateTime (type: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t, default: nil) -  Opaque types that are likely to become fully supported:  Represents: date and time expressions. Annotated by: datetime subgrammar.

Message containing information about the source of this triple. See go/kg-provenance for an explanation of the fields.
*   accessRequired (type: integer(), default: nil) - Specifies the contract or legal visibility required to see the Triple. See go/kg-triple-level-access-controls for details and background. Note that we use an int32 here so that we won't lose values when decoding on a stale binary. The int32 references to the enum storage_graph_bfg.Triple.Provenance.AccessRequirement.
*   creator (type: String.t, default: nil) - Historically, this field was used to encode the Freebase User ID, Google username, or Google MDB group that was responsible for the pipeline that is producing this data. However, there is currently no horizontal validation in place, and as of Q3 2018, this field is used essentially as a free-form string by multiple data providers. NOTE: Do not use this field in new pipelines without first consulting with the OWNERS of this proto.
*   datasetMid (type: String.t, default: nil) - The dataset which asserted this data. Must be a valid mid. See go/kg-provenance
*   isSupportingData (type: boolean(), default: nil) - Indicates that the corresponding data is supporting evidence for reconciliation only, and is not an assertion that should be visible to other systems or to external users. Note that this also means that no provenances indicating supporting data will be visible in the composed graph. Please see go/supporting-kg-triples-design-doc for additional details and background.
*   lgMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLivegraphProvenanceMetadata.t, default: nil) - Internal metadata used by Livegraph and possibly other horizontal KG infra systems. This is not part of the logical triple or its provenance, and contents may not be visible downstream of LG.
*   policyMetadata (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPolicyMetadata.t, default: nil) - Metadata specifying data governance policies. This information will be processed and enforced in KE systems. For more context, see go/ke-triple-dg-policy-and-metadata. WARNING: This field is WIP and please do not populate it without consulting ke-data-governance@.
*   process (type: String.t, default: nil) - An identifier for the process that asserted this triple.
*   sourceCategory (type: String.t, default: nil) - Used to measure impact of 3P contributions. See go/ke-metrics.
*   sourceDocId (type: String.t, default: nil) - The websearch doc_id of the source_url. Used in conjunction with source_category for measuring 3P contributions.
*   sourceUrl (type: String.t, default: nil) - If the triple was extracted from the web, the source URL where the assertion was found. Used for citation if needed (see restrictions field below).
*   spiiCertification (type: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgSpiiCertification.t, default: nil) - A fact about potentially sensitive personal info (http://what/SPII) can be "certified" iff it meets specific requirements. See go/kg-spii-certification for details.

Also known as "Extensions Without Extensions" or "The Poor Man's Any", this simple proto is used to transmit arbitrary protocol buffers over the wire. Unlike extensions: - It does not require the proto type to be compiled into the binary. (Useful so that the proto declaration can be inside the conversation package) - It is compatible with all versions of proto, including proto3 and the wack-tastic version used on ChromecastOS. Server libraries for dealing with it live in google3/assistant/protocol/protobuf_lib.h.
*   protobufType (type: String.t, default: nil) - The type of the protocol buffer to use. This must be a resolvable name (Namespace.ProtoName) and refer to a proto which is either compiled in to both client and server (e.g. a base proto type) or to one which is part of the conversation package.


Mustang/Kgraph attachment to encode IQL expressions annotated by Webref, Pianno, and other applications. This is currently a prototype implementation. The attachment is not yet output in production. Please contact simonz@ for more info. The planned use-cases include: - Pianno page-level intents (go/pianno-design). - Compound entity representations (go/compounds-in-refx). See go/iql-in-wma for more details about IQL attachment and its encoding design. Next available tag: 5
*   iqlEncodingVersion (type: integer(), default: nil) - The version of encoder for the IQL FunctionCalls. We bump up the version when, but not limited to, we change how an IQL is converted to a byte array, or the change of byte compression algorithm.
*   iqlFuncalls (type: String.t, default: nil) - A compressed byte array that represents IQL FunctionCalls. A list of IQL FunctionCalls are first encoded as a byte array. The byte array is then compressed. For more details on the encoding, see go/iql-in-wma.
*   piannoConfidenceScoreE2 (type: list(integer()), default: nil) - The Pianno confidence scores of all intents of the IQL FunctionCalls. For space reasons this is stored as a [0, 100] integer that represents the confidence up to two decimal points (fixed point). Convert it to confidence_score using the following formula: float pianno_confidence_score = pianno_confidence_score_e2 / 100.0f It should have the same number of elements as the IQL expressions after decoding. For non-Pianno top level intents, this score is 0.
*   piannoIqlBitmap (type: list(integer()), default: nil) - A bit map indicating if the intents in the IQL FunctionCalls are top level intents for Pianno (go/pianno). This is a repeated field. In the event of more than 32 intents, the first uint32/ represents the 1st to the 32nd intents, and the second uint32 represents/ the 33rd to the 64th intents, and so on. Within each uint32, the bits are in reversed order, i.e. the right-most bit of the first uint32 indicating if the first intent in IQL expressions is a top level intent for Pianno. The prevailing (unused) bits of the last uint32 are filled with 0s.


A Resolution proto indicates the size of the application window. All fields are required.
*   dpi (type: integer(), default: nil) - Dots (pixels) per inch of the screen.
*   mSize (type: integer(), default: nil) - m_size is the smallest square box size to display a capital letter M so that the user can still easily understand it.
*   nengSize (type: integer(), default: nil) - neng_size is the smallest square box size to display a letter 螚 (Neng, U+879A) so that the user can easily understand it. (Neng is a visually dense Chinese letter, and so may require a larger box than an M.)
*   widthPx (type: integer(), default: nil) - The dimensions of the application window, in pixels.

This is the FunctionCall counterpart to the "MeaningRemodelings" structure. When present, it is used for typechecking the FunctionCall against the schema with the remodelings enabled.

Represents a collection of triples annotated by Webref/Webit. Included in WebrefEntities

attributes (type: map(), default: nil) - Attributes data as provided from SYNC. This gets used in mutation and execution and in some potential cases, in biasing.  gcmExecutionAddress (type: String.t, default: nil) - GCM address for cloud execution across google cloud messaging rather than 3p cloud.  smartHomeFeatures (type: GoogleApi. ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoSmartHomeFeatures.t, default: nil) - SmartHome feature flags that may be enabled per-item.  parentNode (type: list(String.t), default: nil) - LINT.IfChange(home_graph_single_parent) At the moment, we just have a single string. In future this will expand with additional metadata from client or cloud execution data store. In today's 'tree' HomeGraph each object has a single parent. In the future this may have a mesh for complex cases -- zones, doors, etc -- so we make this a repeated element today. LINT.ThenChange(//depot/google3/assistant/assistant_server/settings/user_defined_actions/footprints/footprint_accessor.cc:home_graph_single_parent)  supportedStructureFeatures (type: GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoSupportedStructureFeatures.t, default: nil) - The features that are available for a structure. Will only be populated if the item_type == STRUCTURE.  assistantDeviceId (type: String.t, default: nil) - Device ID that matches the ID passed from the device to discourse_context when a user issues a query to an Assistant-enabled device that is registered with Cast (via CCS (see go/castservers)), or some other service.  parentType (type: list(String.t), default: nil) - The type of the parent. Currently only set for devices, to distinguish between structure and room parents. Items currently have only one parent, and entries after the first parent_type are ignored.  plural (type: list(String.t), default: nil) - We use this to determine if the synonyms matched in the aqua interpretation is plural. Then we will return disambiguate dialog or execute commands with all the targets.  modelName (type: String.t, default: nil) - Model name from HomeGraph, populated from model_manifest.model_name. See b/200087451.  traitRoutingHints (type: list(GoogleApi.ContentWarehouse.V1.Model.HomeGraphCommonTraitRoutingHints.t), default: nil) - For SHED devices, some traits can only be executed on 3P cloud, e.g. "action.devices.traits.MediaInitiation", "action.devices.traits.Channel" go/shed-per-trait-routing  operationalNodeId (type: String.t, default: nil) - Operational CHIP Node ID that combines the fabric ID and node id in format of . (Hex format without 0x prefix, for example, 0F001234FA67AA39.1234ABCD1111DDDD).  notificationSupportedByAgent (type: boolean(), default: nil) - Indicates whether the device is capable of sending notifications. This field will be set by the agent (partner) on an incoming SYNC. If a device is not capable of generating notifications, the partner should set this flag to false. If a partner is not capable of calling ReportStateAndNotification to send notifications to Google, the partner should set this flag to false. If there is a user setting in the partner app to enable notifications and it is turned off, the partner should set this flag to false.  deviceModelId (type: String.t, default: nil) - See note in home_graph.proto; loaded into DE now to avoid having to double-read assistant settings records as per go/smarthome-removing-assistant-settings  tdssUpdateTimestamp (type: DateTime.t, default: nil) - The timestamp at which the TDSS map was last updated. This information is used to help determine which hub would be preferred if multiple hubs report the same reach-ability for a device.  groupIds (type: list(String.t), default: nil) - List of parent group IDs, if the device is added to one or multiple device groups (see go/home-groups). Will be consumed by Smart Home APIs and (in the future) Assistant CTF to populate the group member list of device groups.  supportedTraitsByAgent (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoHomeAutomation_MetaDataSupportedTraits.t}, default: nil) - Map from agent ID to supported traits. Some devices (e.g. Newman) have multiple agents, with each agent being associated with a specific set of traits. This could alternatively have been formatted as map as {trait, agent} pairs instead of the {agent, list of trait} pairs, but we retain this format to be consistent with HomeGraph's representation. In practice, a trait should only be paired with a single agent (i.e. we should not have two agents with the same trait in their value list). This field is optional and should only be provided if the item has multiple agents.  hashValue (type: String.t, default: nil) - The hash value from go/de-consistency-check  creatorGaiaId (type: String.t, default: nil) - See Device.creator_gaia_ids in //home/graph/proto/service/types.proto. If empty, the GAIA ID from the request EUC is assumed to be the creator. We only need at most one creator_gaia_id.  traitRoutingTable (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.HomeGraphCommonRoutingTable.t}, default: nil) - Map from traits to routing table. Metadata includes preferred execution path per trait and, when Matter is preferred, which endpoint should be used for the trait.  derivedType (type: list(String.t), default: nil) - Any types that are not the given item type, but derived later. For example, if an item has type action.devices.types.OUTLET but is named "floor lamp" we can derive that it also has type action.devices.types.LIGHT. Also considered along with |type| when triggering type-based actions.  saftDocument (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftDocument.t, default: nil) - SAFT Document with linguistic annotations for the primary device name.  reportStateStatus (type: String.t, default: nil) - Whether device report state is out of sync with Query response.  otherDeviceSources (type: list(String.t), default: nil) - Additional device sources. This can be the result of the device being merged with other devices with a different source.  targetDeviceSignalStrengths (type: map(), default: nil) - Only present for an AoGH device. HGS Device ID of a target device and the signal strength (RSSI in dB, higher is better) between that target device and the AoGH device. If this map is empty, there are no target devices reachable by this AoGH device.  lanscanOptedIn (type: boolean(), default: nil) - Whether local home platform should discover new devices via LAN for the structure.  physicalLocation (type: GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoPhysicalLocation.t, default: nil) - Stores the location for the STRUCTURE type.  routableViaGcm (type: boolean(), default: nil) - Only present for a target device. Indicates this target device is reachable by a local (AoGH) path via an AoGH device.  type (type: String.t, default: nil) - The item type, such as "action.devices.types.VACUUM" - to be used in triggering type-based actions, e.g. "start vacuuming": go/smarthome-type-based-actions.  opaqueCustomData (type: String.t, default: nil) - Store custom data for agent calls here. This will likely be short-lived -- we will replace this with calls to HGS. (Note: This may end up not temporary if we only need it for a couple partners -- more efficient to have it on a few users than require HGS reads for all users.  willReportState (type: boolean(), default: nil) - This device will report state; we can query realtime state from local HGS rather than slow QUERY intent to the 3p cloud.  supportsDirectResponse (type: boolean(), default: nil) - This device supports direct response -- if the device itself is issuing the query (which means it's also an assistant surface) we can return its payload directly rather than via cloud.  roleInformation (type: GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoRoleInformation.t, default: nil) - User's role information for this device. This will be used in Home Automation server to decide if user has authority to fulfill its request.  primaryName (type: String.t, default: nil) - Which of the values was the original, user-provided name -- or our disambiguated, cleaned-up version of it. This is what we use in TTS when we need to identify an object that wasn't just spoken uniquely by the user -- in disambiguation dialogue, or in response to a collective interrogative (e.g. "what lights are on in the kitchen?")  otherDeviceIds (type: list(GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoAgentDeviceId.t), default: nil) - Other agent id + foreign id pairs associated with the device. This can be used to represent a group of devices (e.g. Sonos' bonded zone) as a single device, or a device that comes in through different sync flows (e.g. Newman with a Nest camera).  traitToAttributeProtos (type: %{optional(String.t) => GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoAttributes.t}, default: nil) - Map of trait to a proto representing the attribute. This is different from the attributes field above which is represented as a struct. The attributes here are represented as protos and will require specific support per trait.  notificationEnabledByUser (type: boolean(), default: nil) - Indicates whether notifications have been enabled by a user and will be announced for this device. This is set by the user within the Google app settings, and Google will announce the device notification only if both notification_supported_by_agent and notification_enabled_by_user are true.  personalizedNicknames (type: list(String.t), default: nil) - User-given nicknames for an entity (e.g. "My house"). These nicknames are unique to the gaia user. Nickname in DeviceInfo is per-entity level nickname, while personalized_nicknames is per-user per-entity.  zoneNameSaftDocument (type: GoogleApi.ContentWarehouse.V1.Model.NlpSaftDocument.t, default: nil) - SAFT Document with linguistic annotations for the zone name, if applicable.  voiceMatchRequired (type: String.t, default: nil) - Set to which level of voice match is needed. Enum based on string input from the partner in json sync. Values accepted: "none" (but in this case partners won't set it), "owner" [requires matching one of the creator gaia IDs], or "member" [any recognized voice 'enrolled' on the device]. This may expand; only "owner" is in use for first partner, Tile.

Ringtone information used for the notification of timer and alarm.
*   pauseDuration (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t, default: nil) - The delay between each two sounds.
*   soundUrl (type: list(String.t), default: nil) - The sound urls will be used to play.




WARNING: Outside of FeatureProto, please avoid in favor of a standard civil time type. Direct usage is error-prone due to the conflation of physical time and civil time (go/httat). In a protocol buffer, please use google.type. Date, with an additional google.type.TimeOfDay for precision finer-grained than a day. (For google.type.DateTime, go/prototime#types cites go/httat#zoned_datetime as a caveat). In a programming language, see go/time-devguide/languages. Additionally in C++, google3/geostore/base/public/datetime.h has conversion functions between DateTimeProto and Abseil's civil time types.
*   precision (type: String.t, default: nil) - This attribute describes the precision of the date and time. It would be unusual for a data provider to provide a precision along with their date. It is more likely that the precision of a date will be inferred from the date format. For example "19th century" is likely to be correct to the century, while "1800" is probably correct to the year. The precision should be semantically interpreted as a cast, so a DateTimeProto object with a seconds value corresponding to 2018-03-28 18:40:00 UTC and a precision of MONTH should be interpreted as "March 2018". The enums above are only some of the possible precision levels for dates and times. Clients may wish to add more precision enums in the future. However, these enums must be ordered by decreasing duration. Clients should be able to write date formatting code that looks like this: if (datetime.precision() <= DateTimeProto::PRECISION_CENTURY) { date = FormatCenturyDate(proto.seconds()); } else if (proto.precision() <= case DateTimeProto::PRECISION_DECADE) { date = FormatDecadeDate(proto.seconds()); } else { ... } See geostore/base/public/datetime.h for date formatting utility functions.
*   seconds (type: float(), default: nil) - Number of seconds since (or before) the UNIX epoch (January 1, 1970). This is also the standard epoch for Java and Python time representations. If it is important for this time be displayed correctly for different time zones, convert the time to Coordinated Universal Time (UTC).

A representation of reminder-triggering locations. They may be specific, resolved locations, non-specific location groups, or personal aliases. Next id: 12
*   customLocationType (type: String.t, default: nil) - Optional additional information about the types of the custom location. This field is not stored in backend, and is only used to plumb NLP information to fulfillment UI.
*   displayAddress (type: String.t, default: nil) - An address string that is suitable for displaying to the user in an application interface. It can be detailed, or brief. e.g. "80 Absolute Ave, Unit 1708, Mississauga, ON" e.g. "151 Charles Street West"
*   geoFeatureId (type: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t, default: nil) - Filled if location_type is CUSTOM and this is a resolved instance of a business (not for specific address locations).
*   name (type: String.t, default: nil) - Descriptive name, e.g. "43rd st new york", a user-edited place name (e.g. "Gym"), or a reverse geocoded business name. This can be any string.
*   ttsAddress (type: String.t, default: nil) - A localized, shortened version of the address, suitable for TTS. This originates in the LocationFrame.

The agent or system from which the mention was derived. Each mention corresponds to a single source.

Pattern for a MONTHLY recurrence. This Monthly reccurence supports: 1. The nth specific weekday of the month. For example, the 3rd Wednesday of the month. This represents the 3rd instance of a Wednesday of the month, regardless of what weekday the month started on. It does not necessarily mean the Wednesday on the 3rd week of the month. Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
*   weekDay (type: String.t, default: nil) - The nth occurrence of week_day to match. I.e. For 3rd Wednesday of the month, week_day = WEDNESDAY and week_day_number = 3. Values beyond the end of the month are skipped.


A simple 2D box represented by an (x, y) coordinate, a width, and a height. Coordinates are in pixels.

Goodoc stats for a range of elements, such as one page or a whole book. These stats can be computed using the SummaryStatsCollector class. Some range stats are pre-computed and stored in goodocs/volumes (eg., Page.stats below, and Ocean's CA_VolumeResult.goodoc_stats).
*   medianLineSpan (type: integer(), default: nil) - top to next top in para
*   medianPrintedBox (type: GoogleApi.ContentWarehouse.V1.Model.GoodocBoundingBox.t, default: nil) - Each median*_printed_box excludes page header/footer and all graphic blocks
*   numLineSpaces (type: integer(), default: nil) - Lines (out of num_lines) that have a successor line within their para
*   numBlockSpaces (type: integer(), default: nil) - blocks that have a successor block within their flow on their page
*   numParagraphSpaces (type: integer(), default: nil) - paras that have a successor para within their block
*   medianFullPrintedBox (type: GoogleApi.ContentWarehouse.V1.Model.GoodocBoundingBox.t, default: nil) - Each median_full*_printed_box includes page header/footer but still excludes all graphic blocks
*   numLines (type: integer(), default: nil) - ------ Line stats "top" corresponds to the highest ascender and "bottom" to the lowest descender.
*   medianBlockSpace (type: integer(), default: nil) - bottom to next top in flow on page
*   medianParagraphSpace (type: integer(), default: nil) - bottom to next top in block
*   medianLineSpace (type: integer(), default: nil) - bottom to next top in para
*   fontSizeHistogram (type: list(GoogleApi.ContentWarehouse.V1.Model.GoodocFontSizeStats.t), default: nil) - Symbol counts (and other attributes) for each distinct CharLabel.FontId and FontSize; histogram is in decreasing order of symbol count
*   numParagraphs (type: integer(), default: nil) - ------ Paragraph stats Median symbols and words omit junk, header and footer blocks; they are intended to be a measure of the typical "content" paragraph. There can still be substantial differences between means and medians, particularly if a table is present (every cell is a paragraph).
*   numBlocks (type: integer(), default: nil) - ------ Block stats Median symbols and words omit junk, header and footer blocks; they are intended to be a measure of the typical "content" block. There can still be substantial differences between means and medians; however, block values will generally exceed paragraph values (not the case when headers and footers are included).
*   estimatedFontSizes (type: boolean(), default: nil) - This flag is set if the histogram above has been derived by estimating font sizes from CharLabel.CharacterHeight; that happens if the FontSize field is constant, as has happened with Abbyy 9.

The configuration of the Cloud Storage Ingestion pipeline.
*   inputPath (type: String.t, default: nil) - The input Cloud Storage folder. All files under this folder will be imported to Document Warehouse. Format: gs:///.
*   pipelineConfig (type: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1IngestPipelineConfig.t, default: nil) - Optional. The config for the Cloud Storage Ingestion pipeline. It provides additional customization options to run the pipeline and can be skipped if it is not applicable.
*   processorType (type: String.t, default: nil) - The Doc AI processor type name. Only used when the format of ingested files is Doc AI Document proto format.
*   schemaName (type: String.t, default: nil) - The Document Warehouse schema resource name. All documents processed by this pipeline will use this schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
*   skipIngestedDocuments (type: boolean(), default: nil) - The flag whether to skip ingested documents. If it is set to true, documents in Cloud Storage contains key "status" with value "status=ingested" in custom metadata will be skipped to ingest.

These options use more sophisticated logic from a location-aware name detector to parse the full name of a user into structured parts and operate on those parts. For more information on how names are parsed, see the NameOccurrence proto definition: http://google3/quality/peoplesearch/namedetector/detector/proto/name_occurrence.proto?l=50&rcl=334484707 In general, when parsing display names the following rules will apply to all specs: - Hyphenated names are broken down: "Angelina Jollie-Pit" is pre-processed as "Angelina Jollie Pitt"; - Prefixes are ignored: "Prof. Albus Dumbledore" is pre-processed as "Albus Dumbledore"; - Auxiliaries are ignored: "Luís de Camões" is pre-processed as "Luís Camões". Next ID: 8
*   allInitialsFromParsedName (type: boolean(), default: nil) - Extract an initial from each parsed name. For example, "Niels Henrik David Bohr" yields "N. H. D. B.". Other special cases are treated as follows:
*   firstInitialAndFirstLastName (type: boolean(), default: nil) - Show the initial of the very first name and the first last name, e.g. "Hugo Daniel Hernandez Garcia" yields "H. Hernandez".
*   firstInitialAndVeryLastName (type: boolean(), default: nil) - Show the initial of the very first name and the very last name, e.g. "Ana Maria Silva" yields "A. Silva".
*   knowledgeGraphNameShortening (type: boolean(), default: nil) - Shorten the display name using the Knowledge Graph name shortener (go/short-names).
*   truncationIndicator (type: String.t, default: nil) - Which truncation indicator to use after each shortened part of the name. Will be ignored for the knowledge_graph_name_shortening option.
*   veryFirstNameAndAllInitials (type: boolean(), default: nil) - Show the full very first name and all the other initials, e.g. "Ana Maria Silva" yields "Ana M. S.".
*   veryFirstNameOnly (type: boolean(), default: nil) - Show the very first name only, e.g. "Ana Maria Silva" yields "Ana".

Represents a principal who has authenticated as any kind of user which the application understands. This is typically used for "wiki-like" security, where anyone is allowed access so long as they can be held accountable for that access. Since the purpose is knowing whom to blame, it is up to the application to decide what kinds of users it knows how to blame. For example, an application might choose to include GAIA users in "all authenticated users", but not include MDB users. Nothing here.





When we apply a rule to define a particular cluster, we have a RuleInstance. Some kinds of rules for clusters define more than one cluster. In those rules we say things like "for each entity X with this property, we create a cluster where..."; each particular cluster that we create is the result of an instance of that rule, where the argument X has been bound to a particular entity (note that this also applies to rules that define only one cluster; in that case, there are no arguments). An entity that is part of a cluster plays a "role" in such a cluster. This message describes such an instantiation of a rule with a role and with concrete values for the arguments.
*   midList (type: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoMidListRuleInstance.t, default: nil) - Exactly one of these *RuleInstance fields needs to be present for clusters which have not been merged; it selects the specific kind of rule instance. For merged clusters both fields may be present.

Updates a Document Schema. Returns INVALID_ARGUMENT if the name of the Document Schema is non-empty and does not equal the existing name. Supports only appending new properties, adding new ENUM possible values, and updating the EnumTypeOptions.validation_check_disabled flag for ENUM possible values. Updating existing properties will result into INVALID_ARGUMENT.




Used to describe the incremental change of app capabilities of the device installed apps reported to the server.
*   appIntegrationsSettings (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppIntegrationsSettings.t, default: nil) - Currently unused. Will be used in the future when integrating with incremental app capabilities.
*   providerDelta (type: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProviderDelta.t, default: nil) - The installed app of the provider.







Proto message containing site-level signal for search stack. Because firefly_stats.proto depends on "//segindexer:compositedoc_proto", we cannot make perdocdata contain it.
*   numOfArticlesByPeriods (type: list(String.t), default: nil) - number of articles (lattice article score is 0.8 or more) sliced by 30 days (num_of_articles_by_periods[0] is the newest).
*   numOfUrlsByPeriods (type: list(String.t), default: nil) - number of urls sliced by 30 days (num_of_urls_by_periods[0] is the newest).
*   siteFp (type: String.t, default: nil) - Hash value of the site. This will be used by our experiment and analysis.

External identifier associated with the person.
*   formattedType (type: String.t, default: nil) - The type translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
*   type (type: String.t, default: nil) - The type of the external ID. The type can be free form or one of these predefined values:  account  customer  loginId  network * organization




A time range, which includes the start and excludes the end.

This prompt will occur one time only. Could be a single event such as a graduation or a single connection reminder e.g. remind me to call X on 2022/03/19. Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
